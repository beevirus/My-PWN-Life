Gadgets information
============================================================
0x0000000000494db4 : adc ah, bh ; stc ; push rax ; std ; stc ; call rax
0x0000000000494ce8 : adc ah, bl ; stc ; call qword ptr [rax]
0x000000000044009f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440109 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d23d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004b0290 : adc al, 0 ; add byte ptr [rax], al ; cwde ; add byte ptr [r8], al ; ret 0xfff9
0x000000000047e02a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000429fb8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004304e5 : adc al, 0x13 ; jmp rdx
0x000000000049317c : adc al, 0x14 ; idiv edi ; cmc ; adc esi, edi ; call rsi
0x00000000004287a5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048cf5a : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000410bf1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000447e70 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000004732e8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000441530 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043fc5e : adc al, 0x91 ; sub eax, edx ; ret
0x00000000004304e1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040f5a0 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004273a7 : adc al, 0xa ; jmp r10
0x0000000000428913 : adc al, 0xa ; sub eax, edx ; ret
0x000000000044a3ef : adc al, 0xe ; cmp rdi, rdx ; jb 0x44a402 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042cd8a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042ea5a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000040628f : adc al, 0xf ; retf 0xfa83
0x00000000004149fb : adc al, 0xf6 ; ret 0x7420
0x000000000049317d : adc al, 0xf7 ; push rbp ; adc esi, edi ; call rsi
0x000000000048d2dd : adc al, 0xf7 ; ret
0x0000000000462d41 : adc al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000440247 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004402b1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b968 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040121a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x0000000000490a9b : adc al, ch ; call qword ptr [rsi]
0x000000000047dca3 : adc al, ch ; jmp qword ptr [rdi]
0x00000000004b0320 : adc bh, al ; stc ; jmp qword ptr [rcx]
0x0000000000495431 : adc bh, dl ; call rax
0x0000000000494c64 : adc bl, bl ; stc ; call qword ptr [rax]
0x0000000000444335 : adc bl, ch ; call 0xffffffffc414cc8a
0x0000000000444255 : adc bl, ch ; call 0xffffffffc43ccbaa
0x0000000000482e82 : adc bl, ch ; jno 0x482ed8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004477a6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000447817 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000447777 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004b1c20 : adc bl, dh ; std ; call rdx
0x00000000004477a5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f2fa : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000041b285 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000047f848 : adc byte ptr [r11 + rcx*4 + 0xd], r9b ; lahf ; retf
0x00000000004838ee : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045d309 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000484103 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045c525 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045cd06 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481ddf : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000413672 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041a86f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c3ff : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041369d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042dc96 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004475ca : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x00000000004840fd : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000420af3 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ce2c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041d1a8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000425b96 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481de0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000004150fe : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000413673 : adc byte ptr [rax + 1], cl ; ret
0x0000000000412a77 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000048a23a : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044e407 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000040104e : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000475b35 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004178e3 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x0000000000488ddf : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000040b879 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x408388
0x000000000041ea8d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044f4f5 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x000000000045bd78 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000471f77 : adc byte ptr [rax - 0x77], cl ; jo 0x471f95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471f37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000471f3b : adc byte ptr [rax - 0x77], cl ; ret
0x000000000042429f : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041fe61 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x000000000041a870 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x00000000004723a0 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000041904f : adc byte ptr [rax - 0x78], al ; jl 0x419071 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000444517 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000444553 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401220 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000041b923 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000458a58 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044e009 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004b097c : adc byte ptr [rax], 0 ; jo 0x4b0971 ; stc ; jmp qword ptr [rcx]
0x000000000047fb89 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x47fbe1 ; mov esi, ebx ; syscall
0x000000000043fcf2 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042cdea : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x0000000000441808 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000441afc : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440451 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004add34 : adc byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0x24 ; add byte ptr [rax], al ; retf 0xfff6
0x00000000004add90 : adc byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; and al, 0 ; add al, cl ; retf 0xfff6
0x00000000004adcd0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; fsub dword ptr [rbx] ; add byte ptr [rax], al ; pop rax ; retf 0xfff6
0x000000000044cf63 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000044b6cc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042a438 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043dd08 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048e208 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048b068 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045d2b9 : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000410d8c : adc byte ptr [rbx + 0x3948006b], dh ; ret
0x0000000000415d34 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004128e3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041b286 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3b67 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000047f849 : adc byte ptr [rbx + rcx*4 + 0xd], cl ; lahf ; retf
0x0000000000495aa0 : adc byte ptr [rbx + rdi*8], bl ; jmp qword ptr [rax]
0x000000000044f503 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044f502 : adc byte ptr [rbx - 0x16], sil ; ret
0x000000000041a452 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047246e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000409340 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x000000000049315c : adc byte ptr [rbx], dl ; idiv edi ; ret 0xf712
0x000000000041369e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004141a0 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x0000000000473573 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004b420c : adc byte ptr [rcx - 0x32d00000], cl ; cld ; jmp qword ptr [rsi]
0x000000000044e472 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048ac6f : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048aa9e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044de91 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x000000000041b1d7 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000482cd4 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045d2a1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042ce1d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004949cc : adc byte ptr [rcx - 7], al ; jmp qword ptr [rax]
0x000000000048273a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044c029 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000494e40 : adc byte ptr [rcx], al ; cli ; jmp rax
0x0000000000485380 : adc byte ptr [rcx], bh ; retf 0x557f
0x000000000041a455 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000413fe7 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004ac00c : adc byte ptr [rdi], al ; add byte ptr [rax], al ; jo 0x4abfcc ; cmc ; call qword ptr [rdx]
0x000000000040627f : adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004838ef : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045d30a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000448083 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042d201 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d2f1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d111 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042db59 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042d6b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042ce41 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042d891 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d021 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042da71 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d981 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d2c3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042d3b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042d1d3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042cf31 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042d0e3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042cf03 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042cff3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ce13 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045c526 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045cd07 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044d3f9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000483fb1 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000004832ed : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004ad403 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x00000000004309d9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004af740 : adc byte ptr [rdx - 9], bh ; jmp qword ptr [rbx]
0x000000000042f91b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430444 : adc byte ptr [rsi + 0x39480028], bl ; retf 0x8949
0x000000000044a01f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042f7ca : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042edc5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f1c5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f199
0x000000000042f243 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f217
0x000000000042f6d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f6a9
0x000000000042f753 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f727
0x000000000042f1c0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f19e
0x000000000042f23e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f21c
0x000000000042f6d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f6ae
0x000000000042f74e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f72c
0x00000000004274f5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043ba1b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000041f25c : adc byte ptr [rsi + 7], dl ; add byte ptr [rax - 0x17], dl ; ret
0x0000000000494c68 : adc ch, bl ; stc ; call qword ptr [rax]
0x00000000004178e6 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045e7ef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044faba : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000444245 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045e7f2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485fba : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045d5c5 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00000000004ab5ed : adc dh, bh ; call rsp
0x000000000049313d : adc dh, bh ; jmp qword ptr [rcx]
0x0000000000494ebc : adc dh, bh ; stc ; inc dword ptr [rax] ; add dl, bh ; call rax
0x000000000041e4de : adc dh, dh ; ret 0xf0f
0x00000000004953ed : adc dl, bh ; call rax
0x0000000000494df0 : adc dl, bh ; stc ; call rax
0x0000000000494ce4 : adc dl, bl ; stc ; call qword ptr [rax]
0x000000000047134b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045becd : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041368f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000048acbf : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040748f : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000472b04 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x0000000000441afb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000004403e7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004419ff : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a2b8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045c535 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x00000000004783db : adc dword ptr [rbp + 0x24], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044a648 : adc dword ptr [rbx], eax ; ret
0x000000000044a5c1 : adc dword ptr [rbx], esp ; ret
0x000000000043b347 : adc dword ptr [rcx + 7], edi ; ret
0x000000000044a5bc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000489926 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x000000000043afe2 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000043afa6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000047074e : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x470724
0x000000000044a643 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044a3a3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x000000000044a525 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044a52a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x000000000044a502 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000044a507 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000043b4a9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000044a3a0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000454602 : adc dword ptr [rdi], ecx ; retf 0xd285
0x000000000044a19c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000479f1e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x000000000044a2cf : adc dword ptr [rsi + 3], edx ; ret
0x000000000044a36c : adc dword ptr [rsi + 7], edx ; ret
0x000000000044a16e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048aee6 : adc dword ptr [rsp - 0x28], eax ; ret
0x00000000004403e6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000426654 : adc eax, 0x11d77 ; cmovne rax, rdx ; ret
0x00000000004258f0 : adc eax, 0x1ea4b ; cmovne rax, rdx ; ret
0x0000000000426830 : adc eax, 0x1f2bb ; cmovne rax, rdx ; ret
0x00000000004265c5 : adc eax, 0x21d36 ; cmovne rax, rdx ; ret
0x0000000000425889 : adc eax, 0x22752 ; cmovne rax, rdx ; ret
0x000000000045bea9 : adc eax, 0x25d30a ; je 0x45bec0 ; ret
0x00000000004508d7 : adc eax, 0x26845c ; pop rbx ; ret
0x000000000041b174 : adc eax, 0x29e7d7 ; ret
0x00000000004a7dc4 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047446b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x00000000004258c0 : adc eax, 0x314b ; cmovne rax, rdx ; ret
0x000000000047bcd2 : adc eax, 0x4000003 ; ret
0x000000000047bc22 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000425a4a : adc eax, 0x5a71 ; cmovne rax, rdx ; ret
0x000000000043ff71 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046a9a5 : adc eax, 0x83fffffd ; ret
0x0000000000478dd1 : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000042b688 : adc eax, 0x894d0000 ; retf
0x0000000000419053 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000047493a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004268f4 : adc eax, 0xf007 ; cmovne rax, rdx ; ret
0x00000000004267b4 : adc eax, 0xf127 ; cmovne rax, rdx ; ret
0x000000000044b1f4 : adc eax, 0xf880272 ; ret
0x0000000000473da5 : adc eax, 0xfffd75f6 ; cmove rax, rdx ; ret
0x000000000044185e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a138 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000484469 : adc eax, eax ; ret
0x00000000004845a6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000400b08 : adc ebp, dword ptr [rax + 0x5d01002b] ; ret
0x00000000004a7a65 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000414d27 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000475b3c : adc ebx, esi ; ret
0x000000000041926a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000410db1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000045ad44 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046a196 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x0000000000491067 : adc ecx, edi ; push rbx ; ret
0x000000000047f19e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f23b : adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004953f5 : adc edi, edx ; call rax
0x00000000004b30c1 : adc edi, esp ; jmp qword ptr [rax]
0x00000000004a8f7e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000490eb9 : adc esi, dword ptr [rcx - 0x116ffde] ; retf
0x0000000000418633 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048e07c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004149f9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x0000000000493159 : adc esi, edi ; call qword ptr [rax]
0x0000000000493181 : adc esi, edi ; call rsi
0x00000000004931a1 : adc esi, edi ; jmp qword ptr [rax]
0x000000000043b346 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000043afe1 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000043afa5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000043b4a8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000044a2ce : adc qword ptr [rsi + 3], rdx ; ret
0x000000000044a36b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000044a16d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004845a5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004adadf : add ah, ah ; and dword ptr [rax], eax ; add ah, ch ; ret 0xfff6
0x00000000004b1a5b : add ah, al ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rcx]
0x000000000044b61e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000044b6fb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044b669 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a8fa7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x000000000044a2ca : add ah, byte ptr [rdx - 0xf] ; jl 0x44a31f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b2c82 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004b0c23 : add ah, ch ; cld ; stc ; jmp qword ptr [rdx]
0x00000000004adae3 : add ah, ch ; ret 0xfff6
0x00000000004afec7 : add ah, cl ; add byte ptr [r8], r8b ; mov dl, 0xf9 ; jmp rbx
0x0000000000400a59 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x0000000000494bf4 : add ah, dl ; stc ; jmp rax
0x0000000000456683 : add al, 0 ; add bh, dh ; ret 0
0x0000000000456677 : add al, 0 ; add bh, dh ; ret 0xf800
0x000000000045a37f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000413210 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000048c28d : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042d777 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000470666 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000044271f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d7a5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e1a0 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e1c7 ; ret
0x00000000004749c3 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044cabf : add al, 0 ; add byte ptr [rax], al ; syscall
0x000000000042b038 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000473b00 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040c351 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040cf54 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000040c210 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004265a5 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000044f562 : add al, 0 ; mov eax, 0x15 ; syscall
0x0000000000457378 : add al, 0 ; mov edx, 0x180 ; call 0x403e39
0x000000000045739c : add al, 0 ; mov edx, 0x19f ; call 0x403e39
0x00000000004573bb : add al, 0 ; mov edx, 0x1be ; call 0x403e39
0x0000000000457359 : add al, 0 ; mov edx, 0x1d0 ; call 0x403e39
0x000000000045733a : add al, 0 ; mov edx, 0x1da ; call 0x403e39
0x000000000044c741 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000044b5c5 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000400c43 : add al, 0 ; nop ; leave ; ret
0x0000000000475b3b : add al, 0x11 ; ret
0x000000000044b6b4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000451966 : add al, 0x17 ; add al, ch ; retf 0xfaea
0x00000000004287a1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042873a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486db0 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048ade7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aaeb : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489ce4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045bf0a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004843bb : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484407 ; leave ; ret
0x0000000000410cb7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044363e : add al, 0x31 ; ret
0x00000000004b510c : add al, 0x36 ; std ; jmp rsp
0x000000000044353a : add al, 0x37 ; ret
0x0000000000419aef : add al, 0x3a ; ret
0x00000000004a7086 : add al, 0x3d ; retf
0x000000000047fa76 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa2a ; xor eax, eax ; ret
0x0000000000447cdb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000004471e9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000004471fb : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000048d2f0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x0000000000437eea : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000445a29 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000443ab4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e806 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e7b4 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004740a8 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x00000000004599ba : add al, 0x4d ; cmp ebp, ebx ; jb 0x459a30 ; mov rdx, rax ; jmp 0x459987
0x00000000004471f7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000445a37 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000045ad42 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000457009 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000047d87a : add al, 0x75 ; retf
0x000000000046fe48 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043fc5b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000441533 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000404287 : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000044bbf8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x44bbe8 ; ret
0x000000000043d867 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000004509a9 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c18a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000467f69 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000474499 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048ca8b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046fcdc : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048b139 : add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000470478 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000004471e6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000445a26 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048af13 : add al, 0x88 ; add rax, r8 ; jmp rax
0x000000000045b426 : add al, 0x89 ; retf
0x0000000000488129 : add al, 0x89 ; retf 0xeac0
0x000000000044bbfb : add al, 0x8a ; je 0x44bbe5 ; ret
0x000000000044b683 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c6c3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000044c745 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c21f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb47 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000419177 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000044b5c9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046d040 : add al, 0xc6 ; jmp rax
0x00000000004621da : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046283a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000462190 : add al, 0xc7 ; jmp rax
0x000000000046d07b : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x00000000004844fd : add al, 0xde ; lea r9, [rdx] ; jmp 0x484559
0x00000000004882fd : add al, 0xde ; lea r9, [rdx] ; jmp 0x488359
0x0000000000402351 : add al, 0xe8 ; test rax, rax ; je 0x402361 ; call rax
0x0000000000458310 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000466c9d : add al, 0xe9 ; retf 0xfffb
0x0000000000459d4c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000484da8 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042cd86 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000406cda : add al, 0xf ; retf
0x000000000044a0db : add al, 0xf ; sub rax, rsi ; ret
0x00000000004b1f3c : add al, 0xf0 ; cli ; call qword ptr [rsi]
0x0000000000438253 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044cdbb : add al, 0xf3 ; ret
0x0000000000461c4e : add al, 0xf8 ; jmp rax
0x0000000000494ea9 : add al, 0xfa ; jmp qword ptr [rax]
0x0000000000494e49 : add al, 0xfa ; jmp rax
0x00000000004b49f1 : add al, 0xfd ; jmp qword ptr [rdx]
0x00000000004112d7 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000430027 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000442c4d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046d03c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000442e68 : add al, 7 ; ret
0x000000000042890f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004afedb : add al, ah ; add byte ptr [r8], r8b ; mov bl, 0xf9 ; call qword ptr [rdx]
0x00000000004b108f : add al, ah ; std ; std ; jmp qword ptr [rdx]
0x00000000004b30bf : add al, al ; adc edi, esp ; jmp qword ptr [rax]
0x00000000004b30bb : add al, al ; ja 0x4b30c7 ; add al, al ; adc edi, esp ; jmp qword ptr [rax]
0x000000000049f267 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004ae7f3 : add al, bh ; add byte ptr cs:[rax], al ; sub byte ptr [rdi + rsi*8], bl ; jmp rsi
0x00000000004b3337 : add al, bh ; and bh, ah ; jmp qword ptr [rcx]
0x000000000044b715 : add al, bh ; jg 0x44b717 ; int1 ; mov eax, eax ; ret
0x00000000004af727 : add al, bh ; jns 0x4af726 ; jmp qword ptr [rbx]
0x00000000004afbd3 : add al, bl ; add byte ptr [rax], al ; mov byte ptr [rdx - 7], al ; jmp qword ptr [rax]
0x000000000040fa72 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x00000000004266f0 : add al, byte ptr [r8] ; cmovne rax, rdx ; ret
0x0000000000444241 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040121b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000458a4a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x000000000045867d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047b080 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000042000d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x0000000000460ad3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042dc82 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004881de : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045bf9d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401205 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000469e34 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x00000000004254a3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c3fa : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478535 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000047123d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000044ac04 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004237aa : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000457e1b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042d957 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004412f1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d985 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040fa73 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045be92 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047dcf6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044db99 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000040fefc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000474754 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000048586c : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487d6a : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000042b1b8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449684 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000412c76 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485ae4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046de14 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044dda0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041ce76 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000426553 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042588c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d8d5 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x000000000048aee2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c21b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047cb43 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484f2a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004508ea : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4508de
0x000000000044e475 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044f2be : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004ac3c5 : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000404de0 : add al, ch ; cli ; retf 1
0x000000000041509f : add al, ch ; jmp 0x4150a2
0x00000000004559b9 : add al, ch ; jno 0x4559a9 ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000045737e : add al, ch ; lodsb al, byte ptr [rsi] ; retf 0xfffa
0x0000000000458ca1 : add al, ch ; mov dword ptr [rcx - 0x76be0006], esi ; ret 0x5be9
0x000000000046842b : add al, ch ; out dx, eax ; ret
0x0000000000403d0b : add al, ch ; out dx, eax ; ret 0xffbf
0x0000000000412f2d : add al, ch ; pop rbp ; ret
0x000000000042272f : add al, ch ; pop rbx ; retf
0x0000000000452f34 : add al, ch ; push rsi ; ret
0x0000000000460ce7 : add al, ch ; ret
0x0000000000405098 : add al, ch ; ret 0x4a1
0x00000000004670e8 : add al, ch ; ret 0xb1
0x00000000004536d8 : add al, ch ; ret 0xfcea
0x000000000047d228 : add al, ch ; ret 0xfd08
0x0000000000413e3f : add al, ch ; retf
0x0000000000451968 : add al, ch ; retf 0xfaea
0x00000000004b11c3 : add al, cl ; pop rax ; add byte ptr [rax], al ; cli ; call qword ptr [rax]
0x00000000004add97 : add al, cl ; retf 0xfff6
0x00000000004b49ef : add al, dh ; add al, 0xfd ; jmp qword ptr [rdx]
0x00000000004b04eb : add al, dh ; add byte ptr [r8], al ; jo 0x4b04c6 ; stc ; call qword ptr [rbx]
0x00000000004afb5f : add al, dh ; cmp cl, bh ; jmp rdx
0x0000000000404ddc : add al, dh ; sldt word ptr [rax] ; call 0x4218e7
0x00000000004b1a6f : add al, dl ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rcx]
0x0000000000494d38 : add bh, 0xf9 ; call rax
0x00000000004b407e : add bh, ah ; ret
0x0000000000451d2f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045fe27 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000410daf : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040121d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004859af : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000484639 : add bh, byte ptr [rax + 1] ; ret
0x0000000000484796 : add bh, byte ptr [rax + 2] ; ret
0x000000000044cadb : add bh, byte ptr [rax - 1] ; ret
0x0000000000449a52 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000400fea : add bh, dh ; ret 0
0x0000000000456679 : add bh, dh ; ret 0xf800
0x00000000004113ef : add bh, dh ; ret 0xffef
0x0000000000494ea5 : add bh, dl ; jmp qword ptr [rax]
0x0000000000494e45 : add bh, dl ; jmp rax
0x0000000000474751 : add bl, al ; mov eax, 2 ; ret
0x00000000004881fa : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004649b9 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x464952 ; ret
0x0000000000495520 : add bl, byte ptr [rcx - 6] ; call qword ptr [rdx + 0x22fffa58]
0x000000000048a10b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485c79 : add bl, ch ; ret
0x0000000000411688 : add bl, ch ; ret 0x1f0f
0x000000000048aee3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a5f : add bl, dh ; ret
0x000000000041d16e : add bl, sil ; ret
0x000000000044dde3 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000458873 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045885e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000458888 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004828f5 : add byte ptr [r8 + 0x39], r9b ; retf
0x0000000000481690 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000473cf6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000458825 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004104aa : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b0491 : add byte ptr [r8], al ; insb byte ptr [rdi], dx ; retf
0x00000000004b04ed : add byte ptr [r8], al ; jo 0x4b04c4 ; stc ; call qword ptr [rbx]
0x00000000004afc4d : add byte ptr [r8], al ; mov al, 0x76 ; stc ; jmp qword ptr [rbx]
0x00000000004b02ad : add byte ptr [r8], al ; nop ; ret 0xfff9
0x00000000004afa85 : add byte ptr [r8], al ; or dh, bl ; clc ; call qword ptr [rax]
0x00000000004b045d : add byte ptr [r8], al ; push rax ; retf 0xfff9
0x00000000004b0295 : add byte ptr [r8], al ; ret 0xfff9
0x00000000004afaad : add byte ptr [r8], al ; xor bh, bh ; clc ; call qword ptr [rax]
0x00000000004afedd : add byte ptr [r8], r8b ; mov bl, 0xf9 ; call qword ptr [rdx]
0x00000000004afe79 : add byte ptr [r8], r8b ; mov dl, 0xf9 ; call qword ptr [rdx]
0x00000000004afec9 : add byte ptr [r8], r8b ; mov dl, 0xf9 ; jmp rbx
0x00000000004b064d : add byte ptr [r8], r8b ; rcl ah, 1 ; stc ; jmp qword ptr [rcx]
0x000000000047589b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004180a0 : add byte ptr [rax + 0x15890000], al ; retf 0x2a3d
0x000000000044f563 : add byte ptr [rax + 0x15], bh ; syscall
0x000000000042559f : add byte ptr [rax + 0x16], bh ; ret
0x000000000044ca2f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000044ca2e : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044db1f : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000004add4b : add byte ptr [rax + 0x24], dl ; add byte ptr [rax], al ; retf 0xfff6
0x000000000048869f : add byte ptr [rax + 0x26], bh ; syscall
0x0000000000414290 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000455e01 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000456967 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000467178 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047aa0a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004241d4 : add byte ptr [rax + 0x29], cl ; retf
0x0000000000458a4c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000466529 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e9b0 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004b11c7 : add byte ptr [rax + 0x2e], cl ; cli ; call qword ptr [rax]
0x0000000000410d8f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0e3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041c17f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041527f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b178 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047b082 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041f040 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x00000000004783de : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004828f6 : add byte ptr [rax + 0x39], cl ; retf
0x00000000004308c6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004371bf : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042000f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004129ad : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044a1f8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000004303e6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000044b503 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000044b340 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000485a48 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004af73b : add byte ptr [rax + 0x3e], al ; add byte ptr [rax], al ; adc byte ptr [rdx - 9], bh ; jmp qword ptr [rbx]
0x00000000004afc4b : add byte ptr [rax + 0x43], dl ; add byte ptr [rax], al ; mov al, 0x76 ; stc ; jmp qword ptr [rbx]
0x00000000004aff53 : add byte ptr [rax + 0x46], bl ; add byte ptr [rax], al ; test al, 0xb4 ; stc ; call qword ptr [rbx]
0x00000000004b0293 : add byte ptr [rax + 0x48000049], bl ; ret 0xfff9
0x000000000044cf66 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b045b : add byte ptr [rax + 0x4b], ah ; add byte ptr [rax], al ; push rax ; retf 0xfff9
0x00000000004b064b : add byte ptr [rax + 0x4d], dl ; add byte ptr [rax], al ; rcl ah, 1 ; stc ; jmp qword ptr [rcx]
0x00000000004ade9b : add byte ptr [rax + 0x50000025], ah ; sal dh, 1 ; call qword ptr [rsi]
0x00000000004b5c83 : add byte ptr [rax + 0x580000a3], cl ; cdq ; std ; call qword ptr [rdx]
0x00000000004adcab : add byte ptr [rax + 0x60000023], dh ; retf 0xfff6
0x00000000004b196b : add byte ptr [rax + 0x60], dh ; add byte ptr [rax], al ; nop ; cmc ; std ; jmp qword ptr [rdi]
0x000000000040f59d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046fe45 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000404284 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000470475 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000044c742 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000044b5c6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000004028a7 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048cbb3 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000469b25 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000047310f : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x0000000000470943 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045ef51 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004b1d5b : add byte ptr [rax + 0x64], ah ; add byte ptr [rax], al ; and al, al ; cli ; call qword ptr [rax]
0x00000000004b1d43 : add byte ptr [rax + 0x64], cl ; add byte ptr [rax], al ; sbb al, al ; cli ; call qword ptr [rbx]
0x000000000047565f : add byte ptr [rax + 0x66], bh ; syscall
0x00000000004adc83 : add byte ptr [rax + 0x68000023], cl ; retf 0xfff6
0x00000000004afeb3 : add byte ptr [rax + 0x68000045], bh ; mov dl, 0xf9 ; call qword ptr [rax]
0x000000000047567f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000041cf8e : add byte ptr [rax + 0x692d3b4c], dl ; retf 0x29
0x000000000047566f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047568f : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000489923 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x000000000044423f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000447c7f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004afa83 : add byte ptr [rax + 0x8000041], cl ; fdivp st(0) ; call qword ptr [rax]
0x00000000004b14a3 : add byte ptr [rax + 0x800005b], ch ; cli ; call qword ptr [rdi]
0x000000000044daef : add byte ptr [rax + 0xa], bh ; syscall
0x000000000044dabf : add byte ptr [rax + 0xb], bh ; syscall
0x00000000004ac46b : add byte ptr [rax + 0xb], dh ; add byte ptr [rax], al ; add byte ptr [rsi - 0xa], al ; call rsp
0x000000000047b6a9 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000044c7a4 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040feff : add byte ptr [rax + 0xe], bh ; syscall
0x0000000000426879 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x000000000044b697 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000004175ff : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004434a5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004530ff : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041edf4 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b216 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000425914 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000414faa : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041fea3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b265 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000044b60a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042588d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042663d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000457498 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004845fc : add byte ptr [rax + 1], bh ; ret
0x000000000044ce7f : add byte ptr [rax + 1], bh ; syscall
0x000000000042dc84 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000413212 : add byte ptr [rax + 1], cl ; ret
0x0000000000483808 : add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004881e0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000043727d : add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000004500e0 : add byte ptr [rax + 1], cl ; retf 0x8548
0x00000000004051b0 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000453f25 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000004b492f : add byte ptr [rax + 1], dh ; std ; jmp qword ptr [rdx]
0x0000000000484805 : add byte ptr [rax + 2], bh ; ret
0x000000000044d12f : add byte ptr [rax + 3], bh ; syscall
0x00000000004abcab : add byte ptr [rax + 3], dh ; jnp 0x4abcb0 ; call qword ptr [rdx]
0x000000000044ceaf : add byte ptr [rax + 8], bh ; syscall
0x000000000044ceae : add byte ptr [rax + 8], dil ; syscall
0x0000000000481691 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000476280 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e20b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000453953 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000004b1d73 : add byte ptr [rax + rax*8], bl ; cli ; call qword ptr [rdx]
0x0000000000473aff : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004265a4 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041fd4b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473d87 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b5107 : add byte ptr [rax + rbx*4], cl ; add byte ptr [rax], al ; add al, 0x36 ; std ; jmp rsp
0x000000000045bead : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045bf9f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004b413f : add byte ptr [rax + rcx*4], al ; add byte ptr [rdx + rcx*8], bh ; cld ; call rdx
0x000000000049f3b7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004b1f3b : add byte ptr [rax + rsi*8], al ; cli ; call qword ptr [rsi]
0x00000000004704b7 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047bad4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x00000000004b0a37 : add byte ptr [rax - 0x17], cl ; stc ; call qword ptr [rdx]
0x000000000041f25f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b0a1f : add byte ptr [rax - 0x17], dl ; stc ; call qword ptr [rax]
0x00000000004b097f : add byte ptr [rax - 0x18], dh ; stc ; jmp qword ptr [rcx]
0x00000000004b108b : add byte ptr [rax - 0x1fffffa9], dl ; std ; std ; jmp qword ptr [rdx]
0x00000000004b04ef : add byte ptr [rax - 0x34], dh ; stc ; call qword ptr [rbx]
0x00000000004add93 : add byte ptr [rax - 0x37ffffdc], bl ; retf 0xfff6
0x0000000000401207 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000412033 : add byte ptr [rax - 0x39], cl ; ret 0xac60
0x000000000046651b : add byte ptr [rax - 0x39], cl ; ret 0xb308
0x000000000045e7df : add byte ptr [rax - 0x39], cl ; ret 0xffa8
0x000000000040ff27 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004254a5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000004694a5 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004749af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047498f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047499f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045c09f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000045bd49 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045bd20 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045b680 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004827f5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000049488f : add byte ptr [rax - 0x470006f6], ah ; or bh, cl ; call rax
0x00000000004b41a3 : add byte ptr [rax - 0x47ffff78], ch ; retf 0xfffc
0x00000000004afedf : add byte ptr [rax - 0x4d], al ; stc ; call qword ptr [rdx]
0x00000000004aff07 : add byte ptr [rax - 0x4d], ch ; stc ; call qword ptr [rbx]
0x00000000004ac00f : add byte ptr [rax - 0x4d], dh ; cmc ; call qword ptr [rdx]
0x00000000004afeb7 : add byte ptr [rax - 0x4e], ch ; stc ; call qword ptr [rax]
0x00000000004628df : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b538b : add byte ptr [rax - 0x4fffff66], dl ; pop rax ; std ; call qword ptr [rdx]
0x00000000004b19a7 : add byte ptr [rax - 0x5d4c0000], ch ; cli ; jmp rax
0x00000000004b5e67 : add byte ptr [rax - 0x60], ch ; std ; jmp qword ptr [rax]
0x00000000004b0e83 : add byte ptr [rax - 0x60ffffab], cl ; div ah ; jmp qword ptr [rbx]
0x00000000004b5c87 : add byte ptr [rax - 0x67], bl ; std ; call qword ptr [rdx]
0x00000000004b02ab : add byte ptr [rax - 0x6fffffb7], dh ; ret 0xfff9
0x000000000045861a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045a79d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000045089f : add byte ptr [rax - 0x73], cl ; add eax, 0x269b79 ; ret
0x000000000045a7bb : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045a7d9 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000478086 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000482a77 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041e4da : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000420aef : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ce28 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046cb1b : add byte ptr [rax - 0x73], cl ; xor eax, 0x24af1d ; jmp rax
0x000000000047c3fc : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041b91f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485fb7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048aae8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000462837 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x000000000046218d : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x0000000000461c4b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000045ae9f : add byte ptr [rax - 0x75], cl ; add eax, 0x261131 ; ret
0x000000000045299f : add byte ptr [rax - 0x75], cl ; add eax, 0x26a021 ; ret
0x000000000041a74f : add byte ptr [rax - 0x75], cl ; add eax, 0x29eae9 ; ret
0x000000000041024b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x0000000000451def : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042497f : add byte ptr [rax - 0x75], cl ; je 0x4249b1 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045c93b : add byte ptr [rax - 0x75], cl ; jl 0x45c96c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000410ce2 : add byte ptr [rax - 0x75], cl ; js 0x410d0c ; call rdx
0x00000000004733ff : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486d00 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000404153 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004010cd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041294f : add byte ptr [rax - 0x75], cl ; push rbx ; sbb bl, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; call 0x44f389
0x0000000000431e0f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482b72 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000004143bf : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000047239d : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000484a96 : add byte ptr [rax - 0x77], cl ; add eax, 0x23760a ; ret
0x000000000041b7ea : add byte ptr [rax - 0x77], cl ; add eax, 0x29e18e ; ret
0x000000000041b2e5 : add byte ptr [rax - 0x77], cl ; add eax, 0x29e623 ; ret
0x000000000041b2bd : add byte ptr [rax - 0x77], cl ; add eax, 0x29e643 ; ret
0x000000000041b29d : add byte ptr [rax - 0x77], cl ; add eax, 0x29e65b ; ret
0x000000000045bd03 : add byte ptr [rax - 0x77], cl ; and r8b, bpl ; ret
0x0000000000414a42 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004167a3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000458826 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000458210 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048b58e : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000041a33b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000400b34 : add byte ptr [rax - 0x77], cl ; in eax, 0xe8 ; ret
0x00000000004019b1 : add byte ptr [rax - 0x77], cl ; jbe 0x4019cb ; syscall
0x000000000044f50f : add byte ptr [rax - 0x77], cl ; jo 0x44f539 ; ret
0x000000000047fb8b : add byte ptr [rax - 0x77], cl ; jrcxz 0x47fbdf ; mov esi, ebx ; syscall
0x0000000000414b93 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000004255ff : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000405b7f : add byte ptr [rax - 0x77], cl ; ret
0x000000000044c93b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x0000000000402045 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000004132e6 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004151ca : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e95c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000044c9e7 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x00000000004050fe : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x0000000000461008 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041cfac : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000404e7f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004124e8 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044c713 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048e0af : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000459888 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000405493 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046b667 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004116bd : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000416928 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044c952 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000044c457 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043fcf4 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042cdec : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045f76b : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000412d17 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000458e27 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042cd2a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000004595d9 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043fb76 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000004416ec : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000044a460 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481d11 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048cccf : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b783 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000041241f : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045e418 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45e3e8
0x000000000048abc6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004b58fc : add byte ptr [rax - 0x7b900000], ah ; std ; call qword ptr [rbx]
0x0000000000443aaf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000472e5b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000464769 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000048c28f : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x00000000004b58ff : add byte ptr [rax - 0x7c], dh ; std ; call qword ptr [rbx]
0x000000000048ee0e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e347 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12f57
0x000000000047e346 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12f58
0x0000000000421cac : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041f0e7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041ed44 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047fa2d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042584d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000403db9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000041332a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000462d43 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a8f1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000418b7f : add byte ptr [rax - 0x7d], cl ; jg 0x418bc5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000421132 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472e16 : add byte ptr [rax - 0x7d], cl ; js 0x472e54 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000402437 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000449b4f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044f8b7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000470487 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000004039cf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004594e4 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000485a2f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dcfa : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045ef34 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042ce19 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420787 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048e08f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000470668 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000426300 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043fdd3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ce47 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047dfb7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041bdca : add byte ptr [rax - 0x7d], cl ; retf
0x00000000004242d9 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040fa75 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041eee0 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040fad5 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000042884f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000443bef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000489692 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000405091 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x4a1
0x0000000000424588 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000045be94 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000435a7b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000413d4a : add byte ptr [rax - 1], bh ; ret
0x00000000004afdff : add byte ptr [rax*2 - 0x56940000], al ; stc ; call rsp
0x0000000000412f2a : add byte ptr [rax], 0 ; add al, ch ; pop rbp ; ret
0x000000000042272c : add byte ptr [rax], 0 ; add al, ch ; pop rbx ; retf
0x0000000000452f31 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000405095 : add byte ptr [rax], 0 ; add al, ch ; ret 0x4a1
0x000000000042458c : add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000417aca : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000044b33d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000043727a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000416925 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043825b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044b64b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000402f33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042eadb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044cdab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000045d7fe : add byte ptr [rax], 0 ; add byte ptr [rbx + rcx*4 + 0x35], cl ; jmp rsi
0x000000000042f041 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b031b : add byte ptr [rax], ah ; add byte ptr [rax], al ; adc bh, al ; stc ; jmp qword ptr [rcx]
0x00000000004b1c1b : add byte ptr [rax], ah ; movsxd rax, dword ptr [rax] ; add byte ptr [rax], dl ; std ; call rdx
0x00000000004b091b : add byte ptr [rax], ah ; push rax ; add byte ptr [rax], al ; and al, ch ; stc ; call qword ptr [rcx]
0x00000000004b412f : add byte ptr [rax], ah ; retf 0xfffc
0x00000000004b031e : add byte ptr [rax], al ; adc bh, al ; stc ; jmp qword ptr [rcx]
0x00000000004b1c1e : add byte ptr [rax], al ; adc bl, dh ; std ; call rdx
0x00000000004b097a : add byte ptr [rax], al ; adc byte ptr [rax], 0 ; jo 0x4b0973 ; stc ; jmp qword ptr [rcx]
0x00000000004b420a : add byte ptr [rax], al ; adc byte ptr [rcx - 0x32d00000], cl ; cld ; jmp qword ptr [rsi]
0x00000000004ac00a : add byte ptr [rax], al ; adc byte ptr [rdi], al ; add byte ptr [rax], al ; jo 0x4abfce ; cmc ; call qword ptr [rdx]
0x00000000004af73e : add byte ptr [rax], al ; adc byte ptr [rdx - 9], bh ; jmp qword ptr [rbx]
0x00000000004adadd : add byte ptr [rax], al ; add ah, ah ; and dword ptr [rax], eax ; add ah, ch ; ret 0xfff6
0x00000000004b510a : add byte ptr [rax], al ; add al, 0x36 ; std ; jmp rsp
0x00000000004b1f3a : add byte ptr [rax], al ; add al, 0xf0 ; cli ; call qword ptr [rsi]
0x0000000000468429 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x0000000000403d09 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret 0xffbf
0x0000000000412f2b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x000000000042272d : add byte ptr [rax], al ; add al, ch ; pop rbx ; retf
0x0000000000452f32 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x0000000000460ce5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000405096 : add byte ptr [rax], al ; add al, ch ; ret 0x4a1
0x00000000004670e6 : add byte ptr [rax], al ; add al, ch ; ret 0xb1
0x000000000047d226 : add byte ptr [rax], al ; add al, ch ; ret 0xfd08
0x0000000000416bbd : add byte ptr [rax], al ; add al, ch ; retf
0x000000000045fe6e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000410dad : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004859ad : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047474f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485c77 : add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000411686 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000402f35 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004add49 : add byte ptr [rax], al ; add byte ptr [rax + 0x24], dl ; add byte ptr [rax], al ; retf 0xfff6
0x000000000048869d : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000469e88 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000467176 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047aa08 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000466527 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e9ae : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000042131f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041c17d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041527d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b176 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004308c4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000439cb1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004129ab : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044b33e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004b0291 : add byte ptr [rax], al ; add byte ptr [rax + 0x48000049], bl ; ret 0xfff9
0x000000000044cf64 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b0459 : add byte ptr [rax], al ; add byte ptr [rax + 0x4b], ah ; add byte ptr [rax], al ; push rax ; retf 0xfff9
0x00000000004adca9 : add byte ptr [rax], al ; add byte ptr [rax + 0x60000023], dh ; retf 0xfff6
0x000000000046c5a4 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000047310d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000004adc81 : add byte ptr [rax], al ; add byte ptr [rax + 0x68000023], cl ; retf 0xfff6
0x000000000047567d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000047566d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047568d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000447c7d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044dabd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044f29f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000044c7a2 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040fefd : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x000000000044b695 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041edf2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004851f2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000456482 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041fea1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000044b608 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047446d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000457496 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004845fa : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000044ce7d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000483139 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483806 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000043727b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000453f23 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484803 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004704b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x00000000004add91 : add byte ptr [rax], al ; add byte ptr [rax - 0x37ffffdc], bl ; retf 0xfff6
0x000000000044d911 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000412031 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x000000000045e7dd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa8
0x000000000044cd7d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000045bd47 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045bd1e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045b67e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004827f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004b41a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x47ffff78], ch ; retf 0xfffc
0x00000000004b02a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x6fffffb7], dh ; ret 0xfff9
0x000000000045a79b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000045a7b9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045a7d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000041b91d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000410ce0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x410d0e ; call rdx
0x0000000000404151 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000041a77d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045820e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048b58c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004019af : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4019cd ; syscall
0x000000000044f50d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44f53b ; ret
0x00000000004255fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000412461 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004132e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000461464 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041d97d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e0ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046b905 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004116bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000416926 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044e912 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045f769 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042cd28 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000004595d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043fb74 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000004416ea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048cccd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048abc4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004b58fa : add byte ptr [rax], al ; add byte ptr [rax - 0x7b900000], ah ; std ; call qword ptr [rbx]
0x000000000040828d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000449b4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041150d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485a2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dcf8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042db33 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e08d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000426c3e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000441491 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042db5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042884d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000489690 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000437274 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000413d48 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000416bbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000410dab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004859ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000041a73b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041527b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000047310b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045e7db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa8
0x000000000044cd7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041a77b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044f50b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44f53d ; ret
0x000000000041d97b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048cccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000040828b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000449b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041150b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048e08b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000419366 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0092 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0582 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f742 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a00d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a05c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f73a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004928fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; or bh, dh ; jmp qword ptr [rax]
0x000000000041b0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000449d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000428b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004274ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000402b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000414cfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041be7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004247ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044da5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047496c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000481bbf : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000410dac : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041bdec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004859ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a20bc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a126c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000044b607 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d294 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d27c ; ret
0x0000000000485c76 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485c44
0x000000000046129d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000004482ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000004482bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000004482cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000004482dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000004482ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044822c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044823c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044824c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000044825c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000044826c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000044827c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000044828c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000044829c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044821c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400db8 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000447c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044765c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000048869c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000047567c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047566c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047568c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044dabc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041a6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004845f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044ce7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484802 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000044c4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043825c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044f50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000481bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041a76c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041a77c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000048104c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000414cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044b64c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004383ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041b0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004138ac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000402f34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a108c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1824 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0094 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0584 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f744 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a10c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1864 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004a00d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a05c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f73c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042e38c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000041967c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044cdac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x00000000004438fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044805c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000480f8c : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x00000000004b4129 : add byte ptr [rax], al ; add byte ptr [rax], dh ; mov byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0xfffc
0x00000000004928fd : add byte ptr [rax], al ; add byte ptr [rax], dh ; or bh, dh ; jmp qword ptr [rax]
0x00000000004b4055 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; ret 0xfffc
0x000000000044ca94 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048512d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e1a1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481f52 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481e92 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000045adc5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000004820b3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004843be : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044dbad : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000044ccc4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000004758b9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000044d054 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044d9c3 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488488 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045bfec : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048504a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d2d6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000478b49 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; retf
0x00000000004210b9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004115ec : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x92d
0x000000000044f148 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042dae8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045aff9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000437b3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004162d2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000419284 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000411fd9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d295 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000045d7ff : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x35], cl ; jmp rsi
0x00000000004ab96d : add byte ptr [rax], al ; add byte ptr [rbx + rdx*2], ch ; cmc ; jmp qword ptr [rdx]
0x000000000046e29d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004672aa : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004abcae : add byte ptr [rax], al ; add byte ptr [rbx - 0xb], bh ; call qword ptr [rdx]
0x000000000046171b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004135d4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000461d87 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046db68 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x000000000046a876 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046eb02 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000449d8d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000410433 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000049217d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000044400d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004918dd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000425fed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044e7f8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44e807 ; call r12
0x000000000044e828 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44e837 ; call r12
0x000000000045ba69 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000460681 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000406b1e : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479e02 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041ef15 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000428b9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004274ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042e560 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042e586 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000044da73 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000410fc2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042de6a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048d003 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048d02b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd7a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000402b3d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x00000000004646e3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040fed4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481134 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x000000000044b595 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043833d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004383ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000457769 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000044b64d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000414cfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042dead : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000045bd69 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000466941 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000476920 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d205 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000485360 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042f042 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041be7d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042ddd2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000049697e : add byte ptr [rax], al ; add byte ptr [rsi - 0x6cdb0005], dl ; sti ; jmp rax
0x00000000004ac46e : add byte ptr [rax], al ; add byte ptr [rsi - 0xa], al ; call rsp
0x00000000004add35 : add byte ptr [rax], al ; add byte ptr [rsp], bh ; add byte ptr [rax], al ; retf 0xfff6
0x00000000004af73a : add byte ptr [rax], al ; add byte ptr ds:[rax], al ; adc byte ptr [rdx - 9], bh ; jmp qword ptr [rbx]
0x00000000004b1d42 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; sbb al, al ; cli ; call qword ptr [rbx]
0x00000000004588e3 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004600a8 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000458096 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000425414 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048ac0e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000400db9 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046b386 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045fbb0 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004544ec : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004247ad : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044da5d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004494e1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000047496e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042dc83 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000413972 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d240 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000048498c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ad03 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004181fb : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044cbb9 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000044cf4c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000000004016fc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044e6ee : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000481bc1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b0c1e : add byte ptr [rax], al ; and al, 0x53 ; add byte ptr [rax], al ; in al, dx ; cld ; stc ; jmp qword ptr [rdx]
0x00000000004ac01e : add byte ptr [rax], al ; and al, 7 ; add byte ptr [rax], al ; jl 0x4abfe2 ; cmc ; call rsp
0x00000000004b1d5e : add byte ptr [rax], al ; and al, al ; cli ; call qword ptr [rax]
0x00000000004b091e : add byte ptr [rax], al ; and al, ch ; stc ; call qword ptr [rcx]
0x00000000004ac5ee : add byte ptr [rax], al ; and byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000004b1c1a : add byte ptr [rax], al ; and byte ptr [rbx], ah ; add byte ptr [rax], dl ; std ; call rdx
0x00000000004b0a1a : add byte ptr [rax], al ; and byte ptr [rcx], dl ; add byte ptr [rax - 0x17], dl ; stc ; call qword ptr [rax]
0x000000000044b696 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004b412e : add byte ptr [rax], al ; and dl, cl ; cld ; jmp qword ptr [rcx]
0x000000000042deae : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000443990 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004434a4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b2f36 : add byte ptr [rax], al ; call 0x244b2b4f
0x000000000045733f : add byte ptr [rax], al ; call 0x403e34
0x000000000041509e : add byte ptr [rax], al ; call 0x414998
0x0000000000404ddf : add byte ptr [rax], al ; call 0x4218e4
0x0000000000412fbc : add byte ptr [rax], al ; call 0x44f294
0x00000000004b4536 : add byte ptr [rax], al ; call 0xffffffffc44b4222
0x0000000000403d0a : add byte ptr [rax], al ; call 4
0x000000000040121c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x0000000000410dae : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048d009 : add byte ptr [rax], al ; call r14
0x0000000000410cbb : add byte ptr [rax], al ; call rax
0x00000000004859ae : add byte ptr [rax], al ; call rbx
0x00000000004a20be : add byte ptr [rax], al ; call rdi
0x0000000000410bf5 : add byte ptr [rax], al ; call rdx
0x00000000004a126e : add byte ptr [rax], al ; call rsp
0x00000000004ae7f2 : add byte ptr [rax], al ; clc ; add byte ptr cs:[rax], al ; sub byte ptr [rdi + rsi*8], bl ; jmp rsi
0x00000000004b3336 : add byte ptr [rax], al ; clc ; and bh, ah ; jmp qword ptr [rcx]
0x000000000044b714 : add byte ptr [rax], al ; clc ; jg 0x44b718 ; int1 ; mov eax, eax ; ret
0x00000000004af726 : add byte ptr [rax], al ; clc ; jns 0x4af727 ; jmp qword ptr [rbx]
0x00000000004b11c6 : add byte ptr [rax], al ; cli ; call qword ptr [rax]
0x0000000000494ec0 : add byte ptr [rax], al ; cli ; call rax
0x000000000044b641 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000044b609 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000042657c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004258c3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004add36 : add byte ptr [rax], al ; cmp al, 0x24 ; add byte ptr [rax], al ; retf 0xfff6
0x00000000004b1f36 : add byte ptr [rax], al ; cmp al, 0x66 ; add byte ptr [rax], al ; add al, 0xf0 ; cli ; call qword ptr [rsi]
0x00000000004b4142 : add byte ptr [rax], al ; cmp al, 0xca ; cld ; call rdx
0x00000000004af486 : add byte ptr [rax], al ; cmp byte ptr [rbp - 9], ah ; jmp qword ptr [rbx]
0x00000000004b0a32 : add byte ptr [rax], al ; cmp byte ptr [rcx], dl ; add byte ptr [rax - 0x17], cl ; stc ; call qword ptr [rdx]
0x00000000004b3332 : add byte ptr [rax], al ; cmp byte ptr [rdx], bh ; add al, bh ; and bh, ah ; jmp qword ptr [rcx]
0x000000000047fa2c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000421737 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x421708 ; ret
0x00000000004b0292 : add byte ptr [rax], al ; cwde ; add byte ptr [r8], al ; ret 0xfff9
0x00000000004add92 : add byte ptr [rax], al ; cwde ; and al, 0 ; add al, cl ; retf 0xfff6
0x000000000049e21a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a226e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049f3c6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004b11c2 : add byte ptr [rax], al ; enter 0x58, 0 ; cli ; call qword ptr [rax]
0x000000000049ebc6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049efc6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a246e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a266e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a286e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a2a6e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a2c6e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a2e6e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a306e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a326e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a346e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004b50d2 : add byte ptr [rax], al ; fcom dword ptr [rdi + 0x35c80000] ; std ; jmp qword ptr [rcx]
0x00000000004adcd2 : add byte ptr [rax], al ; fsub dword ptr [rbx] ; add byte ptr [rax], al ; pop rax ; retf 0xfff6
0x0000000000400a58 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004adade : add byte ptr [rax], al ; in al, 0x21 ; add byte ptr [rax], al ; in al, dx ; ret 0xfff6
0x00000000004b0c22 : add byte ptr [rax], al ; in al, dx ; cld ; stc ; jmp qword ptr [rdx]
0x00000000004adae2 : add byte ptr [rax], al ; in al, dx ; ret 0xfff6
0x00000000004b0492 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000048dd7b : add byte ptr [rax], al ; ja 0x48dd88 ; sbb eax, eax ; ret
0x0000000000414996 : add byte ptr [rax], al ; je 0x4149a1 ; ret
0x00000000004265e0 : add byte ptr [rax], al ; je 0x4265af ; ret
0x0000000000473d89 : add byte ptr [rax], al ; je 0x473d95 ; ret
0x000000000048d206 : add byte ptr [rax], al ; je 0x48d1f4 ; add rsp, 0x18 ; ret
0x000000000048d296 : add byte ptr [rax], al ; je 0x48d27a ; ret
0x000000000048d2d7 : add byte ptr [rax], al ; je 0x48d2e8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b1d6e : add byte ptr [rax], al ; je 0x4b1ddf ; add byte ptr [rax], al ; sbb al, 0xc0 ; cli ; call qword ptr [rdx]
0x00000000004ac022 : add byte ptr [rax], al ; jl 0x4abfde ; cmc ; call rsp
0x00000000004afe76 : add byte ptr [rax], al ; jl 0x4afec8 ; add byte ptr [rax], al ; mov dl, 0xf9 ; call qword ptr [rdx]
0x0000000000411687 : add byte ptr [rax], al ; jmp 0x411650
0x000000000044c8d1 : add byte ptr [rax], al ; jmp 0x44c763
0x000000000045e37f : add byte ptr [rax], al ; jmp 0x45e348
0x0000000000485c78 : add byte ptr [rax], al ; jmp 0x485c42
0x000000000044db9b : add byte ptr [rax], al ; jmp rax
0x000000000041c05e : add byte ptr [rax], al ; jne 0x41c071 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042eb42 : add byte ptr [rax], al ; jne 0x42ea58 ; ret
0x000000000044bcdd : add byte ptr [rax], al ; jne 0x44bd0d ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044ca95 : add byte ptr [rax], al ; jne 0x44cab1 ; add rsp, 0x28 ; ret
0x000000000044ccc5 : add byte ptr [rax], al ; jne 0x44cd13 ; add rsp, 0x58 ; ret
0x000000000044d055 : add byte ptr [rax], al ; jne 0x44d0ab ; add rsp, 0x68 ; ret
0x000000000044d9c4 : add byte ptr [rax], al ; jne 0x44d9df ; add rsp, 0x28 ; ret
0x000000000045bfed : add byte ptr [rax], al ; jne 0x45bffe ; add rsp, 0x18 ; ret
0x00000000004758ba : add byte ptr [rax], al ; jne 0x47590b ; add rsp, 0x58 ; ret
0x00000000004759ec : add byte ptr [rax], al ; jne 0x475a13 ; add rsp, 0x38 ; ret
0x0000000000481d98 : add byte ptr [rax], al ; jne 0x481dab ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481e93 : add byte ptr [rax], al ; jne 0x481ecb ; add rsp, 0x38 ; ret
0x0000000000481f53 : add byte ptr [rax], al ; jne 0x481f86 ; add rsp, 0x68 ; ret
0x00000000004820b4 : add byte ptr [rax], al ; jne 0x4820f6 ; add rsp, 0x78 ; ret
0x0000000000482383 : add byte ptr [rax], al ; jne 0x4823b6 ; add rsp, 0x68 ; ret
0x00000000004843bf : add byte ptr [rax], al ; jne 0x484403 ; leave ; ret
0x000000000048504b : add byte ptr [rax], al ; jne 0x48505c ; add rsp, 0x38 ; ret
0x000000000048512e : add byte ptr [rax], al ; jne 0x48514c ; add rsp, 0x38 ; ret
0x00000000004878f9 : add byte ptr [rax], al ; jne 0x487904 ; pop rbx ; ret
0x0000000000488489 : add byte ptr [rax], al ; jne 0x4884a4 ; add rsp, 0x38 ; ret
0x000000000048e1a2 : add byte ptr [rax], al ; jne 0x48e1c5 ; ret
0x00000000004abcaf : add byte ptr [rax], al ; jnp 0x4abcac ; call qword ptr [rdx]
0x00000000004ab96a : add byte ptr [rax], al ; jo 0x4ab977 ; add byte ptr [rax], al ; sub al, 0x53 ; cmc ; jmp qword ptr [rdx]
0x00000000004ac00e : add byte ptr [rax], al ; jo 0x4abfca ; cmc ; call qword ptr [rdx]
0x00000000004ac46a : add byte ptr [rax], al ; jo 0x4ac482 ; add byte ptr [rax], al ; add byte ptr [rsi - 0xa], al ; call rsp
0x00000000004b04ee : add byte ptr [rax], al ; jo 0x4b04c3 ; stc ; call qword ptr [rbx]
0x00000000004b097e : add byte ptr [rax], al ; jo 0x4b096f ; stc ; jmp qword ptr [rcx]
0x00000000004b196a : add byte ptr [rax], al ; jo 0x4b19d7 ; add byte ptr [rax], al ; nop ; cmc ; std ; jmp qword ptr [rdi]
0x00000000004b492e : add byte ptr [rax], al ; jo 0x4b4938 ; std ; jmp qword ptr [rdx]
0x00000000004b58fe : add byte ptr [rax], al ; jo 0x4b588b ; std ; call qword ptr [rbx]
0x00000000004b0e86 : add byte ptr [rax], al ; lahf ; div ah ; jmp qword ptr [rbx]
0x00000000004482ae : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000004482be : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000004482ce : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000004482de : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000004482ee : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044820d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044822e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044823e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044824e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000044825e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000044826e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000044827e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000004481ba : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000044828e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000044829e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044821e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000045089e : add byte ptr [rax], al ; lea rax, [rip + 0x269b79] ; ret
0x000000000046cb1a : add byte ptr [rax], al ; lea rsi, [rip + 0x24af1d] ; jmp rax
0x0000000000400dba : add byte ptr [rax], al ; leave ; ret
0x00000000004b04ea : add byte ptr [rax], al ; lock add byte ptr [r8], al ; jo 0x4b04c7 ; stc ; call qword ptr [rbx]
0x00000000004afeda : add byte ptr [rax], al ; loopne 0x4aff2c ; add byte ptr [rax], al ; mov bl, 0xf9 ; call qword ptr [rdx]
0x00000000004b108e : add byte ptr [rax], al ; loopne 0x4b1094 ; std ; jmp qword ptr [rdx]
0x00000000004b19aa : add byte ptr [rax], al ; mov ah, 0xa2 ; cli ; jmp rax
0x00000000004afaaa : add byte ptr [rax], al ; mov al, 0x41 ; add byte ptr [rax], al ; xor bh, bh ; clc ; call qword ptr [rax]
0x00000000004b02aa : add byte ptr [rax], al ; mov al, 0x49 ; add byte ptr [rax], al ; nop ; ret 0xfff9
0x00000000004b538e : add byte ptr [rax], al ; mov al, 0x58 ; std ; call qword ptr [rdx]
0x00000000004afc4e : add byte ptr [rax], al ; mov al, 0x76 ; stc ; jmp qword ptr [rbx]
0x00000000004b1a2e : add byte ptr [rax], al ; mov al, 0xa4 ; cli ; call qword ptr [rdi]
0x00000000004abcaa : add byte ptr [rax], al ; mov al, 3 ; add byte ptr [rax], al ; add byte ptr [rbx - 0xb], bh ; call qword ptr [rdx]
0x000000000044718e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004459de : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004afede : add byte ptr [rax], al ; mov bl, 0xf9 ; call qword ptr [rdx]
0x00000000004b413e : add byte ptr [rax], al ; mov byte ptr [rax], r8b ; add byte ptr [rdx + rcx*8], bh ; cld ; call rdx
0x00000000004b5c82 : add byte ptr [rax], al ; mov byte ptr [rbx - 0x66a80000], ah ; std ; call qword ptr [rdx]
0x00000000004af482 : add byte ptr [rax], al ; mov byte ptr [rbx], bh ; add byte ptr [rax], al ; cmp byte ptr [rbp - 9], ah ; jmp qword ptr [rbx]
0x00000000004afa82 : add byte ptr [rax], al ; mov byte ptr [rcx], al ; add byte ptr [rax], cl ; fdivp st(0) ; call qword ptr [rax]
0x00000000004b0d06 : add byte ptr [rax], al ; mov byte ptr [rcx], cl ; cli ; call qword ptr [rax]
0x0000000000414a3e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000447c7e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044765e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004afbd6 : add byte ptr [rax], al ; mov byte ptr [rdx - 7], al ; jmp qword ptr [rax]
0x00000000004afe7a : add byte ptr [rax], al ; mov dl, 0xf9 ; call qword ptr [rdx]
0x00000000004afeca : add byte ptr [rax], al ; mov dl, 0xf9 ; jmp rbx
0x0000000000472efb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b2fc : add byte ptr [rax], al ; mov dword ptr [rip + 0x29e628], eax ; ret
0x000000000044766e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042581e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044db1e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x000000000048869e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000044cf65 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000047565e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000047567e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000004afeb2 : add byte ptr [rax], al ; mov eax, 0x68000045 ; mov dl, 0xf9 ; call qword ptr [rax]
0x000000000047566e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047568e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044daee : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044dabe : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000044f2a0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040fefe : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000044c7a3 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000413d49 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004845fb : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044ce7e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484804 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041a41e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f61e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f639 ; ret
0x000000000048f84e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f869 ; ret
0x000000000040fec9 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047e78f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000469b62 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000467301 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044769e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048d004 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048d02c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044c4fe : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000437b3e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043825e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044f356 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004b1eb6 : add byte ptr [rax], al ; mov esp, 0x74000065 ; retf 0xfffa
0x000000000044f50e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484fc8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481d10 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488502 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004885d6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b754 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d32e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484618 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000041b2bc : add byte ptr [rax], al ; mov qword ptr [rip + 0x29e643], rax ; ret
0x000000000041b29c : add byte ptr [rax], al ; mov qword ptr [rip + 0x29e65b], rax ; ret
0x00000000004019b0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004199ae : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045c09e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000047498e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047499e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004749ae : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004749be : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004749ce : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004749de : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004749ee : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cd23 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041389e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000481bce : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c53e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004733fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041a76e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d2ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d33e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d39e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d38e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d34e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000045ae9e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x261131] ; ret
0x00000000004529ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26a021] ; ret
0x000000000041a74e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x29eae9] ; ret
0x000000000048b07e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000044400e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000415e24 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4a8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004167a2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a77e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041fd4e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047fb8a : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x000000000044a45f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044e7f9 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x0000000000410ce1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000049217e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004918de : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000473ee3 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x450917
0x00000000004702bf : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043809e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000459887 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x459844
0x0000000000422396 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048dd1e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004255fe : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000048104e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048b135 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000470474 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000040354d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000040304e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000414cfe : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044b64e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000437cce : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004383ae : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043833e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b196e : add byte ptr [rax], al ; nop ; cmc ; std ; jmp qword ptr [rdi]
0x000000000048540c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044f1ec : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x0000000000474efc : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x00000000004b108a : add byte ptr [rax], al ; nop ; push rdi ; add byte ptr [rax], al ; loopne 0x4b1098 ; std ; jmp qword ptr [rdx]
0x00000000004b02ae : add byte ptr [rax], al ; nop ; ret 0xfff9
0x000000000044f429 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004b5106 : add byte ptr [rax], al ; or al, 0x98 ; add byte ptr [rax], al ; add al, 0x36 ; std ; jmp rsp
0x00000000004b0d02 : add byte ptr [rax], al ; or byte ptr [rax + rax], dl ; mov byte ptr [rcx], cl ; cli ; call qword ptr [rax]
0x00000000004b4a02 : add byte ptr [rax], al ; or byte ptr [rcx + 0x5080000], dl ; std ; jmp rdx
0x00000000004b14a6 : add byte ptr [rax], al ; or byte ptr [rdi - 6], cl ; call qword ptr [rdi]
0x00000000004aff02 : add byte ptr [rax], al ; or byte ptr [rsi], al ; add byte ptr [rax - 0x4d], ch ; stc ; call qword ptr [rbx]
0x00000000004afa86 : add byte ptr [rax], al ; or dh, bl ; clc ; call qword ptr [rax]
0x000000000040fff0 : add byte ptr [rax], al ; or qword ptr [rsp], 0x20 ; call 0x45c2c9
0x00000000004aff52 : add byte ptr [rax], al ; pop rax ; add byte ptr [rax], r8b ; test al, 0xb4 ; stc ; call qword ptr [rbx]
0x00000000004b5c86 : add byte ptr [rax], al ; pop rax ; cdq ; std ; call qword ptr [rdx]
0x00000000004adcd6 : add byte ptr [rax], al ; pop rax ; retf 0xfff6
0x000000000044dbae : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a96 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004672ab : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045affa : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x00000000004162d3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419285 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411fda : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400f86 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b1246 : add byte ptr [rax], al ; pop rcx ; add byte ptr [rax], al ; xor bh, dl ; jmp qword ptr [rdx]
0x00000000004adcc2 : add byte ptr [rax], al ; pop rsp ; retf 0xfff6
0x00000000004afc4a : add byte ptr [rax], al ; push rax ; add byte ptr [r8], al ; mov al, 0x76 ; stc ; jmp qword ptr [rbx]
0x00000000004b064a : add byte ptr [rax], al ; push rax ; add byte ptr [r8], r8b ; rcl ah, 1 ; stc ; jmp qword ptr [rcx]
0x00000000004adcfe : add byte ptr [rax], al ; push rax ; retf 0xfff6
0x00000000004b045e : add byte ptr [rax], al ; push rax ; retf 0xfff9
0x00000000004ade9e : add byte ptr [rax], al ; push rax ; sal dh, 1 ; call qword ptr [rsi]
0x00000000004adcea : add byte ptr [rax], al ; push rsp ; retf 0xfff6
0x00000000004ad552 : add byte ptr [rax], al ; pushfq ; stosb byte ptr [rdi], al ; idiv bh ; retf
0x00000000004b064e : add byte ptr [rax], al ; rcl ah, 1 ; stc ; jmp qword ptr [rcx]
0x00000000004b30be : add byte ptr [rax], al ; rcl byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x0000000000400a5e : add byte ptr [rax], al ; ret
0x0000000000498446 : add byte ptr [rax], al ; ret 0
0x000000000049f3be : add byte ptr [rax], al ; ret 0x10
0x00000000004a108e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1826 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0096 : add byte ptr [rax], al ; ret 0x24
0x00000000004a0586 : add byte ptr [rax], al ; ret 0x33
0x000000000049ebbe : add byte ptr [rax], al ; ret 0xa
0x000000000049efbe : add byte ptr [rax], al ; ret 0xd
0x00000000004b0296 : add byte ptr [rax], al ; ret 0xfff9
0x00000000004b405a : add byte ptr [rax], al ; ret 0xfffc
0x00000000004a2462 : add byte ptr [rax], al ; ret 1
0x00000000004a2662 : add byte ptr [rax], al ; ret 2
0x00000000004a2862 : add byte ptr [rax], al ; ret 3
0x00000000004a2a62 : add byte ptr [rax], al ; ret 4
0x00000000004a2c62 : add byte ptr [rax], al ; ret 5
0x000000000049e766 : add byte ptr [rax], al ; ret 6
0x00000000004a3062 : add byte ptr [rax], al ; ret 7
0x00000000004a3262 : add byte ptr [rax], al ; ret 8
0x00000000004a3462 : add byte ptr [rax], al ; ret 9
0x000000000049846a : add byte ptr [rax], al ; retf
0x0000000000498466 : add byte ptr [rax], al ; retf 0
0x000000000049f51e : add byte ptr [rax], al ; retf 0x11
0x00000000004a10c6 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1866 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004a00d6 : add byte ptr [rax], al ; retf 0x24
0x00000000004a05c6 : add byte ptr [rax], al ; retf 0x33
0x000000000049ed1e : add byte ptr [rax], al ; retf 0xb
0x000000000049f11e : add byte ptr [rax], al ; retf 0xe
0x00000000004adc9a : add byte ptr [rax], al ; retf 0xfff6
0x000000000049f73e : add byte ptr [rax], al ; retf 1
0x00000000004a2672 : add byte ptr [rax], al ; retf 2
0x00000000004a2872 : add byte ptr [rax], al ; retf 3
0x000000000049e5c6 : add byte ptr [rax], al ; retf 4
0x00000000004a2c72 : add byte ptr [rax], al ; retf 5
0x00000000004a2e72 : add byte ptr [rax], al ; retf 6
0x00000000004a3072 : add byte ptr [rax], al ; retf 7
0x00000000004a3272 : add byte ptr [rax], al ; retf 8
0x00000000004a3472 : add byte ptr [rax], al ; retf 9
0x00000000004a2a5e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000049ee66 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b46ba : add byte ptr [rax], al ; ror byte ptr [rbp - 0x16700000], 0xfc ; jmp qword ptr [rcx]
0x00000000004b30ba : add byte ptr [rax], al ; sal byte ptr [rdi], 0 ; rcl byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x00000000004b1d72 : add byte ptr [rax], al ; sbb al, 0xc0 ; cli ; call qword ptr [rdx]
0x00000000004b1d46 : add byte ptr [rax], al ; sbb al, al ; cli ; call qword ptr [rbx]
0x0000000000420dcc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004ab96e : add byte ptr [rax], al ; sub al, 0x53 ; cmc ; jmp qword ptr [rdx]
0x00000000004ac616 : add byte ptr [rax], al ; sub byte ptr [rbx - 0xa], cl ; jmp qword ptr [rax]
0x00000000004ae7f6 : add byte ptr [rax], al ; sub byte ptr [rdi + rsi*8], bl ; jmp rsi
0x00000000004af722 : add byte ptr [rax], al ; sub byte ptr [rsi], bh ; add byte ptr [rax], al ; clc ; jns 0x4af72b ; jmp qword ptr [rbx]
0x000000000042fa8c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000419af6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000449fa1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000047b6ad : add byte ptr [rax], al ; syscall
0x00000000004b14a2 : add byte ptr [rax], al ; test al, 0x5b ; add byte ptr [rax], al ; or byte ptr [rdi - 6], cl ; call qword ptr [rdi]
0x00000000004aff56 : add byte ptr [rax], al ; test al, 0xb4 ; stc ; call qword ptr [rbx]
0x000000000044f149 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042e38e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004b048e : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [r8], al ; insb byte ptr [rdi], dx ; retf
0x00000000004afaae : add byte ptr [rax], al ; xor bh, bh ; clc ; call qword ptr [rax]
0x00000000004b124a : add byte ptr [rax], al ; xor bh, dl ; jmp qword ptr [rdx]
0x00000000004b492a : add byte ptr [rax], al ; xor byte ptr [rax + 0x1700000], dl ; std ; jmp qword ptr [rdx]
0x00000000004b412a : add byte ptr [rax], al ; xor byte ptr [rax - 0x35e00000], cl ; cld ; jmp qword ptr [rcx]
0x00000000004b420e : add byte ptr [rax], al ; xor ch, cl ; cld ; jmp qword ptr [rsi]
0x000000000045dd37 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475e16 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x0000000000410fc3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4b5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000411576 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044cdae : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042e2da : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044d88a : add byte ptr [rax], al ; xor edi, edi ; syscall
0x000000000045adc6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000044805e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3333 : add byte ptr [rax], bh ; jp 0x4b333f ; add al, bh ; and bh, ah ; jmp qword ptr [rcx]
0x0000000000480f8e : add byte ptr [rax], bh ; retf 0x850f
0x00000000004af723 : add byte ptr [rax], ch ; add byte ptr ds:[rax], al ; clc ; jns 0x4af72a ; jmp qword ptr [rbx]
0x00000000004ae7f7 : add byte ptr [rax], ch ; sbb al, 0xf7 ; jmp rsi
0x00000000004b14a7 : add byte ptr [rax], cl ; cli ; call qword ptr [rdi]
0x00000000004afa87 : add byte ptr [rax], cl ; fdivp st(0) ; call qword ptr [rax]
0x000000000048ba7e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x230769], 8 ; ret
0x00000000004b0d03 : add byte ptr [rax], cl ; push rsp ; add byte ptr [rax], al ; mov byte ptr [rcx], cl ; cli ; call qword ptr [rax]
0x000000000048ba85 : add byte ptr [rax], cl ; ret
0x00000000004ab96b : add byte ptr [rax], dh ; add byte ptr [rax], al ; sub al, 0x53 ; cmc ; jmp qword ptr [rdx]
0x0000000000494f7c : add byte ptr [rax], dh ; cli ; call qword ptr [rax + 0x20fffa2f]
0x00000000004b412b : add byte ptr [rax], dh ; mov byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0xfffc
0x00000000004b492b : add byte ptr [rax], dh ; nop ; add byte ptr [rax], al ; jo 0x4b493b ; std ; jmp qword ptr [rdx]
0x00000000004928ff : add byte ptr [rax], dh ; or bh, dh ; jmp qword ptr [rax]
0x00000000004b4057 : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret 0xfffc
0x00000000004af73f : add byte ptr [rax], dl ; jp 0x4af73e ; jmp qword ptr [rbx]
0x00000000004b1c1f : add byte ptr [rax], dl ; std ; call rdx
0x000000000044e6ed : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041509d : add byte ptr [rax], r8b ; call 0x414999
0x000000000042581d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044db1d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x000000000047565d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044daed : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x000000000041a8ad : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041a41d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044768d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004476cd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000422395 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400a95 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484d1d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a5d : add byte ptr [rax], r8b ; ret
0x00000000004aff55 : add byte ptr [rax], r8b ; test al, 0xb4 ; stc ; call qword ptr [rbx]
0x0000000000449a5d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000044ca96 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048512f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e1a3 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759ed : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x000000000044bcde : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481f54 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481e94 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000041517a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000045adc7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000004820b5 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004843c0 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044dbaf : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000044ccc6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000004758bb : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x00000000004184d7 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d056 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000004147b7 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x0000000000482fef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482edf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044d9c5 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048848a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004878fa : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045bfee : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048504c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041c05f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d2d8 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000049008e : add byte ptr [rbp + rax - 0x18], dh ; retf 0xfcbd
0x00000000004afe77 : add byte ptr [rbp + rax*2], bh ; add byte ptr [rdx + rsi*4 - 7], al ; call qword ptr [rdx]
0x000000000048d1f0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049efb7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000478b4b : add byte ptr [rbp + rcx*4 + 0x25], cl ; retf
0x0000000000478b5d : add byte ptr [rbp + rcx*4 + 0x35], cl ; sti ; retf 2
0x00000000004210bb : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047356e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000473668 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000473762 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000048586e : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487d6c : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004115ee : add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x92d
0x00000000004909f4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044f14a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f263 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000044c337 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000486bf4 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000482b6f : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000046a029 : add byte ptr [rbp - 0x75], cl ; je 0x46a05a ; and byte ptr [rax + 1], cl ; ret
0x0000000000429d5d : add byte ptr [rbp - 0x77], cl ; retf
0x00000000004508b5 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f5c7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000043fc59 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004915c3 : add byte ptr [rbx + 0x22836a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048542d : add byte ptr [rbx + 0x236d6c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fe15 : add byte ptr [rbx + 0x23a4eb0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000425a1f : add byte ptr [rbx + 0x29652a15], cl ; add bh, dh ; ret 0
0x000000000042230f : add byte ptr [rbx + 0x29761e3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041a7e7 : add byte ptr [rbx + 0x2a168505], al ; add byte ptr [rcx], al ; ret
0x000000000041bddf : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000045affb : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000044769f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000004471cf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x0000000000437b3f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000423a9f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000414488 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004162d4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004080e1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000411fdb : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040304f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f61f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044dde4 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x0000000000473d8a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000048d297 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000045d801 : add byte ptr [rbx + rcx*4 + 0x35], cl ; jmp rsi
0x0000000000484597 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488397 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000495a9c : add byte ptr [rbx + rdi*8], bl ; call qword ptr [rax]
0x00000000004b0c1f : add byte ptr [rbx + rdx*2], ah ; add byte ptr [rax], al ; in al, dx ; cld ; stc ; jmp qword ptr [rdx]
0x00000000004ab96f : add byte ptr [rbx + rdx*2], ch ; cmc ; jmp qword ptr [rdx]
0x00000000004ac023 : add byte ptr [rbx + rsi*4 - 0xb], bh ; call rsp
0x000000000044b6c8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000044b6d6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000044b6cf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000044b6e4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000044b6dd : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000044b6c1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x00000000004733b9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046e29f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044b93e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000402980 : add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x00000000004672ac : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000449686 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000409225 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ccf1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040cf56 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000040c104 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x0000000000412c78 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000409f9c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000409352 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x00000000004093be : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000040c16f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000040c212 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000414d07 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000048f03f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x00000000004abcb0 : add byte ptr [rbx - 0xb], bh ; call qword ptr [rdx]
0x000000000047b787 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046171d : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000468565 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042cd75 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000041366f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000004135d6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489af2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000443c1f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041209d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000041b280 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000414cf0 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x0000000000472efc : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000004304de : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048b136 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000040354e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042ed3c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000447518 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000461d89 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046db6a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485ae6 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046a878 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046eb04 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000004630af : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000468117 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046d12a : add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000449d8f : add byte ptr [rcx + 1], cl ; ret
0x0000000000410435 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c385 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000041b25d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004044f2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000047589c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004afe03 : add byte ptr [rcx + rbp*4 - 7], ch ; call rsp
0x00000000004b1247 : add byte ptr [rcx + rbx*2], cl ; add byte ptr [rdx + rsi - 6], ah ; jmp qword ptr [rdx]
0x0000000000418b84 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000049217f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000044400f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048dd1f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004918df : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000425fef : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x0000000000421738 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x421707 ; ret
0x0000000000494a3c : add byte ptr [rcx + rdi*8 - 1], bh ; jo 0x494ac6 ; stc ; jmp rax
0x00000000004588df : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045c162 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047f19b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f238 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004104a7 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044e7fa : add byte ptr [rcx - 0x75], cl ; jge 0x44e805 ; call r12
0x000000000044e82a : add byte ptr [rcx - 0x75], cl ; jge 0x44e835 ; call r12
0x000000000049228f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044f2b7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046d52e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046c047 : add byte ptr [rcx - 0x77], al ; retf
0x000000000045ba6b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045fd67 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000406b20 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491932 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479e04 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044f1bf : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048aaba : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048abc9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000004729bb : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048adcf : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x0000000000462542 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045c537 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000042ce0f : add byte ptr [rcx - 0x7d], cl ; jmp 0x42ce2b
0x000000000041ef17 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041b49f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045c7ae : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x0000000000428b9f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004274af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044dda2 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000042e562 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042e588 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000045737b : add byte ptr [rcx], 0 ; add al, ch ; lodsb al, byte ptr [rsi] ; retf 0xfffa
0x0000000000458e24 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000048b58a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000449f9f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000410eaf : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b0b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fe1b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041a7ed : add byte ptr [rcx], al ; ret
0x00000000004508cc : add byte ptr [rcx], bh ; ret
0x00000000004b1a57 : add byte ptr [rcx], bl ; add ah, al ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rcx]
0x00000000004780bc : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000405a65 : add byte ptr [rcx], dh ; imul al ; ret
0x000000000044da75 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000410fc4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042de6c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000475a2a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a61 ; ret
0x0000000000482d0f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490abf30
0x00000000004168af : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4168c9 ; ret
0x00000000004508eb : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000043598a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048d005 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048d02d : add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd7c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004ac01f : add byte ptr [rdi + rax], ah ; add byte ptr [rax], al ; jl 0x4abfe1 ; cmc ; call rsp
0x0000000000482567 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000402b3f : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x00000000004646e5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x0000000000494a60 : add byte ptr [rdi - 0x780f0007], al ; stc ; jmp rax
0x0000000000495474 : add byte ptr [rdi - 6], dl ; call qword ptr [rax + 0x20fffa56]
0x0000000000494dec : add byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x000000000044a1f6 : add byte ptr [rdi], ah ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000040fed6 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481136 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000437306 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000044b597 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043833f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004383af : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000045776b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000458874 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000045885f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000458889 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000044b64f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000042874f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414cff : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042eacf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042e60f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000046384b : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042de9f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042decf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042debf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042deaf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046db64 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047bae3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045bd6b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000466943 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000042cd6f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040febb : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000413186 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x0000000000423cae : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046acd8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042270e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476923 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000452d34 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000457379 : add byte ptr [rdx + 0x180], bh ; call 0x403e38
0x000000000045739d : add byte ptr [rdx + 0x19f], bh ; call 0x403e38
0x00000000004573bc : add byte ptr [rdx + 0x1be], bh ; call 0x403e38
0x000000000045735a : add byte ptr [rdx + 0x1d0], bh ; call 0x403e38
0x000000000045733b : add byte ptr [rdx + 0x1da], bh ; call 0x403e38
0x000000000044718f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x00000000004459df : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d207 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c21c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb44 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000414997 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000049ebb7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004b4143 : add byte ptr [rdx + rcx*8], bh ; cld ; call rdx
0x000000000045a630 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045a62f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000495154 : add byte ptr [rdx + rdi*8], dh ; call qword ptr [rax + 0x20fffa33]
0x00000000004b124b : add byte ptr [rdx + rsi - 6], ah ; jmp qword ptr [rdx]
0x00000000004afecb : add byte ptr [rdx + rsi*4 - 7], ah ; jmp rbx
0x00000000004afe7b : add byte ptr [rdx + rsi*4 - 7], al ; call qword ptr [rdx]
0x00000000004959a4 : add byte ptr [rdx - 6], dh ; call qword ptr [rax]
0x0000000000495b30 : add byte ptr [rdx], ah ; sti ; call qword ptr [rax]
0x0000000000495ad8 : add byte ptr [rip + 0x1d10fffb], bl ; sti ; jmp qword ptr [rax]
0x0000000000494de8 : add byte ptr [rip + 0x780fffa], 0xfa ; call qword ptr [rax]
0x000000000044f357 : add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000485362 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042f044 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046478a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000046750a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x2ce8
0x000000000041c447 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000041be7f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004647b3 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x83e8
0x0000000000464751 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004674ac : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042ddd4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041c446 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004265e1 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004593f0 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x00000000004593ef : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004b510b : add byte ptr [rsi + rsi], al ; std ; jmp rsp
0x0000000000496980 : add byte ptr [rsi - 0x6cdb0005], dl ; sti ; jmp rax
0x000000000048540d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044f1ed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x0000000000474efd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004ac470 : add byte ptr [rsi - 0xa], al ; call rsp
0x00000000004265a7 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004b1f37 : add byte ptr [rsi], bh ; add byte ptr [rax], al ; add al, 0xf0 ; cli ; call qword ptr [rsi]
0x0000000000495afc : add byte ptr [rsi], bl ; sti ; jmp qword ptr [rax]
0x0000000000419175 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000400fbe : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004560ac : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004add37 : add byte ptr [rsp], bh ; add byte ptr [rax], al ; retf 0xfff6
0x00000000004b1d6f : add byte ptr [rsp], dh ; add byte ptr [rax + rax*8], bl ; cli ; call qword ptr [rdx]
0x00000000004ae7f5 : add byte ptr cs:[rax], al ; sub byte ptr [rdi + rsi*8], bl ; jmp rsi
0x00000000004af73d : add byte ptr ds:[rax], al ; adc byte ptr [rdx - 9], bh ; jmp qword ptr [rbx]
0x00000000004af725 : add byte ptr ds:[rax], al ; clc ; jns 0x4af728 ; jmp qword ptr [rbx]
0x000000000044c465 : add byte ptr es:[rax + 0x39], cl ; ret
0x00000000004508b4 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x00000000004b41a0 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x47ffff78], ch ; retf 0xfffc
0x000000000044f147 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b1d5d : add byte ptr fs:[rax], al ; and al, al ; cli ; call qword ptr [rax]
0x00000000004b1d71 : add byte ptr fs:[rax], al ; sbb al, 0xc0 ; cli ; call qword ptr [rdx]
0x00000000004b1d45 : add byte ptr fs:[rax], al ; sbb al, al ; cli ; call qword ptr [rbx]
0x000000000049efc3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004176e2 : add ch, al ; ret
0x00000000004177e9 : add ch, al ; ret 0xffff
0x000000000044388f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004a9abc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a9abd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b40d5 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x000000000047327a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000494ab4 : add ch, byte ptr [rdi - 0x502d0007] ; stc ; call rdx
0x0000000000424e3a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x000000000046a8b3 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004aced7 : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000048be77 : add ch, cl ; retf 0xfffc
0x0000000000494c98 : add ch, dl ; stc ; jmp rax
0x000000000044b678 : add cl, al ; call 0xffffffff84073f90
0x00000000004a8e8a : add cl, bl ; retf 0xea91
0x0000000000494c80 : add cl, bl ; stc ; call rax
0x0000000000445a07 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000046b092 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000045861e : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046a5e6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000458878 : add cl, byte ptr [rax + 0x39] ; retf
0x000000000043558a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000044b364 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041f0eb : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041ed48 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000042687c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000413774 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000413693 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004541bc : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000458bb6 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000445a08 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000445975 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485665 : add cl, byte ptr [rax - 0x77] ; je 0x485696 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e7b4 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000041a402 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004441d0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000444233 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000048415d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048be73 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004727c0 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000438182 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000045b928 : add cl, byte ptr [rcx + 0x39] ; retf
0x00000000004552ea : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000406b99 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000044a08b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000477f87 : add cl, ch ; jmp 0x477f91
0x000000000044bbb7 : add cl, ch ; ret
0x00000000004600aa : add cl, ch ; ret 0xfffa
0x0000000000458098 : add cl, ch ; ret 0xfffd
0x000000000040c180 : add cl, ch ; retf
0x000000000043dd0a : add cl, ch ; retf 0xfffe
0x0000000000400dbb : add cl, cl ; ret
0x00000000004a8d43 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a8d42 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000495a6c : add dh, 0xfa ; call rax
0x00000000004a2c6b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000046b388 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045fbb2 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004ab39d : add dh, bh ; jmp rsp
0x00000000004a7b7e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x0000000000494d98 : add dh, bh ; stc ; jmp rax
0x00000000004a20b7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000438333 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x000000000042661e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004ad409 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000495028 : add dh, byte ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa31]
0x000000000048f5c4 : add dh, cl ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f5d9 ; ret
0x000000000041ce78 : add dh, dh ; ret
0x00000000004544ee : add dh, dh ; ret 0x4801
0x00000000004247af : add dh, dh ; ret 0x4804
0x000000000047c6c8 : add dh, dh ; ret 0x7403
0x000000000044da5f : add dh, dh ; ret 0x7404
0x00000000004480b7 : add dh, dh ; ret 0x7501
0x00000000004480c4 : add dh, dh ; ret 0x7502
0x00000000004480d1 : add dh, dh ; ret 0x7504
0x0000000000448089 : add dh, dh ; ret 0x7510
0x0000000000448096 : add dh, dh ; ret 0x7520
0x000000000042684c : add dh, dh ; ret 0x7540
0x0000000000424ad3 : add dh, dh ; ret 0xf02
0x00000000004034a8 : add dh, dh ; ret 0xf04
0x000000000041cda9 : add dh, dh ; ret 0xf08
0x0000000000467f71 : add dh, dh ; ret 0xf40
0x0000000000467f57 : add dh, dh ; ret 0xf50
0x0000000000494ec1 : add dl, bh ; call rax
0x0000000000494ea1 : add dl, bh ; jmp qword ptr [rax]
0x0000000000479a8d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000471347 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000470165 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000453103 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000447191 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000466b6a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000466b2f : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000459d68 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000458be5 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000418d7d : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fc59 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047fc6b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045c7ff : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000465f4a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045e1f3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045e17d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000458863 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000419058 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000045a7a0 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048e093 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048c67e : add dword ptr [rax + 1], ecx ; retf
0x000000000047a909 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000482027 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040fe0a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000479285 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041feae : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000479257 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044dde7 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000475970 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a893b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a89a7 ; retf
0x00000000004625c3 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000404f5f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000424e84 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x0000000000471348 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004459e1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000041b171 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x29e7d7 ; ret
0x0000000000445972 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f3a3 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d045 ; ret
0x000000000045f4b0 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040827c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000453667 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000416146 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045e5cc : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x0000000000485a42 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047f3a2 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d045 ; ret
0x00000000004111e6 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045cc69 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000470166 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000404fa9 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000453c56 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x00000000004707b7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000041070b : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x000000000046b0f9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045fbf5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000044d125 : add dword ptr [rax - 1], edi ; jmp 0x44d0f6
0x0000000000407cb0 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004265df : add dword ptr [rax], 0 ; je 0x4265b0 ; ret
0x000000000045737c : add dword ptr [rax], eax ; add al, ch ; lodsb al, byte ptr [rsi] ; retf 0xfffa
0x000000000045735d : add dword ptr [rax], eax ; add al, ch ; retf
0x0000000000412424 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044b501 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000041ba2a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000004694a3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000458618 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000478084 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000420aed : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000047239b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000475b7d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044c939 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e95a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000459886 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048cea5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000458e25 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000044a45e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000472e59 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000413328 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000421130 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000469778 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044ec1c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004594e2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042da47 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420785 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000004262fe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004429bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042da75 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040fad3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000451d31 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a20ba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a126a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a1092 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a108a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1822 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a10ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a10c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1862 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x0000000000403d08 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 6
0x000000000048d007 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cf5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048dd79 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48dd8a ; sbb eax, eax ; ret
0x0000000000411685 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x411652
0x000000000045e37d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45e34a
0x00000000004621dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475ec2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044f29e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000044c7a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047e78d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d610 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484616 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004702bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000419283 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048693e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fe21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004699e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044cdeb : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000415178 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000042b338 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048cdf6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000451562 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040c16d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000049228d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000462540 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004780ba : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000405a63 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; imul al ; ret
0x00000000004480b5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000004480c2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000004480cf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000448087 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000448094 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004480a1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004034a6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000426878 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004259dc : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000004258f3 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000041209c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000400c97 : add dword ptr [rax], eax ; nop ; pop rbp ; ret
0x00000000004080e0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044fb91 : add dword ptr [rax], esp ; jmp rdx
0x00000000004a8e84 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000400b0c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000467a30 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x000000000044c2d9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044e59d : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045fa32 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a926a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000004381f2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a7e4a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046d565 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000489179 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040f7fe : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004761ec : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x0000000000469b1f : add dword ptr [rcx + 0x25103e0d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045d6c2 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044e2f3 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044dda6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000041044a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000445a11 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046ff5e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045776f : add dword ptr [rcx - 0x77], eax ; retf
0x0000000000402b78 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044f985 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000468631 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x00000000004789cb : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000047578a : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000041209b : add dword ptr [rcx], eax ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000416dd3 : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000465a43 : add dword ptr [rcx], edi ; retf
0x00000000004a8d95 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000044b1f2 : add dword ptr [rdi + 0x15], esi ; jb 0x44b200 ; mov byte ptr [rdi], cl ; ret
0x00000000004b409d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b4035 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b4069 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b4046 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b407a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b40ae : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b0b4d : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000459d60 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047e897 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x00000000004206ab : add dword ptr [rdi], ecx ; ret 0x8948
0x000000000044b941 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004576d1 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000479a8e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x000000000044a1ec : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043b07d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048546b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a8a6f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004b322c : add dword ptr [rdx], 0x4a ; ret
0x00000000004b5cbc : add dword ptr [rdx], 0x55 ; ret
0x00000000004af388 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5c78 : add dword ptr [rdx], 0x76 ; ret
0x00000000004acf7a : add dword ptr [rdx], eax ; retf
0x000000000041a7e8 : add dword ptr [rip + 0x2a1685], 1 ; ret
0x00000000004aced3 : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004459f2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000419179 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000400c96 : add dword ptr ss:[rax], eax ; nop ; pop rbp ; ret
0x000000000048a10d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045bff0 : add eax, 0x18c48348 ; ret
0x0000000000427169 : add eax, 0x1bcb2 ; cmove rax, rdx ; ret
0x0000000000425a79 : add eax, 0x1d9d2 ; cmove rax, rdx ; ret
0x00000000004259d9 : add eax, 0x1df32 ; cmove rax, rdx ; ret
0x0000000000425a09 : add eax, 0x1e0a2 ; cmove rax, rdx ; ret
0x000000000044cb1a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042e33a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000048f6e1 : add eax, 0x22ccde ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f5d1 : add eax, 0x22cdee ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000487840 : add eax, 0x2350b2 ; jne 0x487876 ; ret
0x0000000000426550 : add eax, 0x2351b ; cmove rax, rdx ; ret
0x0000000000485611 : add eax, 0x23734a ; ret
0x0000000000484a99 : add eax, 0x23760a ; ret
0x0000000000484a7e : add eax, 0x237625 ; add rsp, 8 ; ret
0x00000000004268d9 : add eax, 0x23aa2 ; cmovne rax, rdx ; ret
0x0000000000426799 : add eax, 0x23bd2 ; cmovne rax, rdx ; ret
0x000000000047f50c : add eax, 0x23ced7 ; mov qword ptr [rsi], rax ; ret
0x000000000047f49b : add eax, 0x23cf50 ; ret
0x000000000047f462 : add eax, 0x23cf89 ; add rsp, 8 ; ret
0x000000000047f3a6 : add eax, 0x23d045 ; ret
0x0000000000426639 : add eax, 0x23d42 ; cmovne rax, rdx ; ret
0x0000000000426940 : add eax, 0x23deb ; cmovne rax, rdx ; ret
0x0000000000426800 : add eax, 0x23f1b ; cmovne rax, rdx ; ret
0x00000000004266a0 : add eax, 0x2408b ; cmovne rax, rdx ; ret
0x000000000042691f : add eax, 0x2423c ; cmovne rax, rdx ; ret
0x00000000004267df : add eax, 0x2436c ; cmovne rax, rdx ; ret
0x000000000042667f : add eax, 0x244dc ; cmovne rax, rdx ; ret
0x0000000000425910 : add eax, 0x245fb ; cmovne rax, rdx ; ret
0x000000000042670b : add eax, 0x249d0 ; cmovne rax, rdx ; ret
0x000000000046dcc7 : add eax, 0x24a174 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046dc74 : add eax, 0x24a1c7 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046d747 : add eax, 0x24a1f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046dae6 : add eax, 0x24a355 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046daa1 : add eax, 0x24a39a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046da5c : add eax, 0x24a3df ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046da0d : add eax, 0x24a42e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004266ee : add eax, 0x24b4d ; cmovne rax, rdx ; ret
0x000000000042673f : add eax, 0x24c7c ; cmovne rax, rdx ; ret
0x0000000000462138 : add eax, 0x255103 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004624e7 : add eax, 0x255254 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462499 : add eax, 0x2552a2 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004623ea : add eax, 0x255351 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046238e : add eax, 0x2553ad ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004620ee : add eax, 0x25564d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004620a0 : add eax, 0x25569b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461c47 : add eax, 0x2557f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000045aea2 : add eax, 0x261131 ; ret
0x00000000004508a2 : add eax, 0x269b79 ; ret
0x00000000004529a2 : add eax, 0x26a021 ; ret
0x0000000000455dff : add eax, 0x29480000 ; ret 0x349
0x00000000004268b9 : add eax, 0x295692 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000426779 : add eax, 0x2957d2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000426619 : add eax, 0x295932 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004218c7 : add eax, 0x2980b4 ; ret
0x00000000004218d1 : add eax, 0x29a5f6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041b7ed : add eax, 0x29e18e ; ret
0x000000000041b2e8 : add eax, 0x29e623 ; ret
0x000000000041b2ff : add eax, 0x29e628 ; ret
0x000000000041b2c0 : add eax, 0x29e643 ; ret
0x000000000041b2a0 : add eax, 0x29e65b ; ret
0x000000000041b196 : add eax, 0x29e7cd ; ret
0x000000000041b186 : add eax, 0x29e7d5 ; ret
0x000000000041b136 : add eax, 0x29e7dd ; ret
0x000000000041b126 : add eax, 0x29e7f5 ; ret
0x000000000041a752 : add eax, 0x29eae9 ; ret
0x000000000041b7a1 : add eax, 0x2a0726 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041b315 : add eax, 0x2a0bda ; ret
0x000000000041a84d : add eax, 0x2a1622 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040414e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b24a4 : add eax, 0x3400e4e ; ret
0x000000000048504e : add eax, 0x38c48348 ; ret
0x000000000041f03e : add eax, 0x39480000 ; ret 0xf275
0x000000000042e35a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000447228 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000445a58 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000447726 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004472a9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000445a99 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004851f0 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a2c5d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000472e3a : add eax, 0x5c415d5b ; ret
0x00000000004a2c6d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042e37a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000427139 : add eax, 0x6df2 ; cmove rax, rdx ; ret
0x0000000000494e09 : add eax, 0x750fffa ; cli ; jmp rax
0x0000000000426579 : add eax, 0x7682 ; cmove rax, rdx ; ret
0x0000000000494de9 : add eax, 0x780fffa ; cli ; call qword ptr [rax]
0x000000000042d687 : add eax, 0x83480000 ; ret 0x4910
0x0000000000440fb1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042d6b5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041eede : add eax, 0x83480000 ; retf 0x4901
0x00000000004265dd : add eax, 0x835e ; je 0x4265b2 ; ret
0x00000000004603b5 : add eax, 0x83ffffef ; ret
0x000000000044722b : add eax, 0x8428d48 ; ret
0x000000000040fed8 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000402043 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491930 : add eax, 0x89490000 ; ret 0x8349
0x000000000042aeb8 : add eax, 0x894d0000 ; retf
0x0000000000481138 : add eax, 0x940fc085 ; ret 0x3d
0x0000000000473d39 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042fd7a : add eax, 0xc0310000 ; ret
0x00000000004472ad : add eax, 0xc428d48 ; ret
0x0000000000447d8d : add eax, 0xc478d48 ; ret
0x00000000004588e2 : add eax, 0xe9000000 ; ret
0x000000000048d2da : add eax, 0xf7148948 ; ret
0x00000000004381e3 : add eax, 0xf7f0ff3 ; ret
0x000000000048f5ea : add eax, 0xffff50e9 ; push rbx ; ret
0x0000000000451d15 : add eax, 1 ; push rax ; call rbx
0x0000000000474961 : add eax, 1 ; ret
0x0000000000474958 : add eax, 2 ; ret
0x0000000000474971 : add eax, 3 ; ret
0x000000000045bf09 : add eax, dword ptr [0] ; ret
0x000000000047b788 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000489921 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489f7c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004500de : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041e4d8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041ce26 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004010cb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041cfaa : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000421caa : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421e70 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042d867 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000441151 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d895 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004528f4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004abcad : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jnp 0x4abcae ; call qword ptr [rdx]
0x000000000044dbac : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000004749b3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044d0bb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042d818 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044b93c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489af0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x00000000004630ad : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044f2b5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f355 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000047c6c6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041cda7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046fe44 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000047058b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000004705f9 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044b620 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d38c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b4049 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008ba : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000475b3a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004577b0 : add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004ad6aa : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486db3 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b407d : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b40b1 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b21ba : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c406 : add eax, dword ptr [rsi] ; call rax
0x000000000048af16 : add eax, eax ; jmp rax
0x00000000004044f4 : add eax, ebp ; jmp rax
0x000000000047900f : add eax, ebp ; retf
0x00000000004874a0 : add eax, ebp ; retf 0xfff3
0x000000000047c727 : add eax, ebx ; call rax
0x00000000004509ac : add eax, ebx ; jmp rax
0x00000000004432d8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046fe4b : add eax, ecx ; jmp rax
0x000000000042dc89 : add eax, ecx ; ret
0x0000000000443d1d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042e1b6 : add eax, ecx ; vzeroupper ; ret
0x000000000042dc86 : add eax, edi ; add rax, rcx ; ret
0x000000000042e1b3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000047047b : add eax, edi ; jmp rax
0x000000000047074f : add eax, edi ; mov rdx, r8 ; jmp 0x470723
0x000000000042deb4 : add eax, edi ; ret
0x00000000004853a0 : add eax, edi ; sub rax, r8 ; ret
0x0000000000443dd5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044a09a : add eax, edi ; sub rax, rsi ; ret
0x000000000042e32a : add eax, edi ; vzeroupper ; ret
0x000000000040428a : add eax, edx ; jmp rax
0x0000000000443aa6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047465b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000044b5cc : add eax, esi ; jmp rax
0x000000000041a4ad : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c18d : add eax, esp ; jmp rax
0x00000000004643c8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004a79d7 : add ebp, ebp ; retf
0x00000000004b4931 : add ebp, edi ; jmp qword ptr [rdx]
0x000000000047c402 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a53a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000488770 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000418bc1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b406e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000045157f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x4515e8 ; pop r12 ; ret
0x0000000000482861 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042ea9b : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000004383a3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000044b1d7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x44b1cc ; ret
0x0000000000445a45 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000045a7dd : add ecx, dword ptr [rax + 0x39] ; ret
0x000000000045888d : add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004103ae : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045463a : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x450918
0x0000000000445a49 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e857 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x00000000004531f3 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004371c4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048bc4f : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000410da1 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480e1a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483330 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000438112 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b403a : add ecx, dword ptr [rbx + 3] ; ret
0x00000000004476c4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000445a46 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000044c2df : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044c33d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004ac3c1 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x00000000004671f9 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000456e15 : add ecx, ebp ; retf 0xfff6
0x00000000004303ab : add ecx, ebx ; jmp r9
0x000000000042ed42 : add ecx, ebx ; jmp rcx
0x000000000044b5f4 : add ecx, esi ; jmp rcx
0x000000000048e19e : add edi, dword ptr [rax + 4] ; jne 0x48e1c9 ; ret
0x0000000000403554 : add edi, ebx ; jmp rdi
0x00000000004303a8 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000494ec9 : add edi, edx ; call rax
0x0000000000494e25 : add edi, edx ; jmp qword ptr [rax]
0x000000000040f88c : add edi, edx ; jmp rdi
0x00000000004741eb : add edi, esp ; call 0x400494
0x0000000000493174 : add edx, dword ptr [rbx] ; idiv edi ; ret 0xf712
0x0000000000462139 : add edx, dword ptr [rcx + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000487264 : add edx, eax ; jmp 0x487272
0x0000000000483592 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000004142e0 : add edx, ecx ; jmp 0x4142f2
0x0000000000494ec5 : add edx, edi ; call rax
0x0000000000494e21 : add edx, edi ; jmp qword ptr [rax]
0x0000000000494e41 : add edx, edi ; jmp rax
0x000000000040f5a3 : add edx, edi ; jmp rdx
0x000000000046a198 : add edx, esp ; call qword ptr [r10 + rax*8]
0x00000000004577aa : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x000000000045bbe6 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000403055 : add esi, eax ; jmp rsi
0x00000000004382c3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a3f5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044cacc : add esi, ebx ; ret
0x0000000000420dd0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000044b6fe : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004303a5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004186f1 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004128e1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d0ff : add esp, 0x10 ; pop rbx ; ret
0x0000000000413fe5 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449f9d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482738 : add esp, 0x110 ; pop rbx ; ret
0x000000000040ff1e : add esp, 0x118 ; ret
0x000000000045c23a : add esp, 0x148 ; ret
0x000000000041c209 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004214bb : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000421ad6 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004506ca : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413975 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045bff2 : add esp, 0x18 ; ret
0x00000000004191fd : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000418ddd : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000419236 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004827b9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418b4f : add esp, 0x20 ; pop rbx ; ret
0x000000000044c122 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044ca9a : add esp, 0x28 ; ret
0x0000000000452a88 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048498f : add esp, 0x30 ; pop rbx ; ret
0x000000000048ad06 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040fdd4 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004181fe : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004759f1 : add esp, 0x38 ; ret
0x000000000048859c : add esp, 0x40 ; pop rbx ; ret
0x0000000000481ccc : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000044c772 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488683 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481c5a : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044ccca : add esp, 0x58 ; ret
0x000000000044cbbc : add esp, 0x68 ; ret
0x0000000000473e54 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044cf4f : add esp, 0x78 ; ret
0x0000000000469b5e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000004754d3 : add esp, 0x80 ; pop rbx ; ret
0x0000000000417ac8 : add esp, 0x80 ; ret
0x000000000044f09d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400f82 : add esp, 0x88 ; pop rbx ; ret
0x00000000004016ff : add esp, 0x98 ; ret
0x00000000004755f3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000045aff6 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000411e47 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000411fd6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000411aa4 : add esp, 0xd8 ; ret
0x0000000000413cef : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd2b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041236e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044e6e0 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044d91c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004187a9 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004884d9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004157b4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000403ee3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000425959 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a90cb : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000458b9a : add qword ptr [rax + 0x39], rcx ; retf
0x000000000045776e : add qword ptr [rcx - 0x77], r8 ; retf
0x00000000004383a2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438332 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004382c2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004741ea : add r15, r12 ; call 0x400495
0x000000000042d894 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004577af : add r8, qword ptr [rcx - 0x77] ; retf
0x0000000000425912 : add r8b, byte ptr [r8] ; cmovne rax, rdx ; ret
0x00000000004508e9 : add r8b, byte ptr [r8] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4508df
0x0000000000426681 : add r8b, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004303aa : add r9, r11 ; jmp r9
0x00000000004a8e89 : add r9b, bl ; retf 0xea91
0x000000000045a7be : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045a7dc : add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004671f8 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000474960 : add rax, 1 ; ret
0x0000000000474957 : add rax, 2 ; ret
0x0000000000474970 : add rax, 3 ; ret
0x000000000045bf08 : add rax, qword ptr [0] ; ret
0x000000000047c405 : add rax, qword ptr [r14] ; call rax
0x000000000047d38b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486db2 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045bf07 : add rax, qword ptr fs:[0] ; ret
0x000000000047c726 : add rax, r11 ; call rax
0x000000000048c18c : add rax, r12 ; jmp rax
0x00000000004044f3 : add rax, r13 ; jmp rax
0x000000000048ca8d : add rax, r14 ; jmp rax
0x000000000048b13b : add rax, r15 ; jmp rax
0x000000000048af15 : add rax, r8 ; jmp rax
0x000000000048c6c5 : add rax, r9 ; jmp rax
0x0000000000450a23 : add rax, rbp ; jmp rax
0x00000000004509ab : add rax, rbx ; jmp rax
0x00000000004432d7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046fe4a : add rax, rcx ; jmp rax
0x000000000042dc88 : add rax, rcx ; ret
0x0000000000443d1c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042e1b5 : add rax, rcx ; vzeroupper ; ret
0x000000000042dc85 : add rax, rdi ; add rax, rcx ; ret
0x000000000042e1b2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000047047a : add rax, rdi ; jmp rax
0x000000000042deb3 : add rax, rdi ; ret
0x000000000048539f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000443dd4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044a099 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042e329 : add rax, rdi ; vzeroupper ; ret
0x0000000000404289 : add rax, rdx ; jmp rax
0x0000000000443aa5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000044b5cb : add rax, rsi ; jmp rax
0x000000000047c401 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000458bb9 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000042ed41 : add rcx, r11 ; jmp rcx
0x000000000044b5f3 : add rcx, rsi ; jmp rcx
0x000000000040f88b : add rdi, r10 ; jmp rdi
0x0000000000403553 : add rdi, r11 ; jmp rdi
0x00000000004303a7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000046a197 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000483591 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000487263 : add rdx, rax ; jmp 0x487273
0x00000000004142df : add rdx, rcx ; jmp 0x4142f3
0x000000000040f5a2 : add rdx, rdi ; jmp rdx
0x0000000000403054 : add rsi, r8 ; jmp rsi
0x00000000004186f0 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004128e0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d0fe : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482737 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040ff1d : add rsp, 0x118 ; ret
0x000000000045c239 : add rsp, 0x148 ; ret
0x000000000041c208 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004214ba : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000421ad5 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000413974 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045bff1 : add rsp, 0x18 ; ret
0x00000000004191fc : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000418ddc : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000419235 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004827b8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418b4e : add rsp, 0x20 ; pop rbx ; ret
0x000000000044ca99 : add rsp, 0x28 ; ret
0x0000000000452a87 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048498e : add rsp, 0x30 ; pop rbx ; ret
0x000000000048ad05 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004181fd : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004759f0 : add rsp, 0x38 ; ret
0x000000000048859b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481ccb : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488682 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481c59 : add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000044ccc9 : add rsp, 0x58 ; ret
0x000000000044cbbb : add rsp, 0x68 ; ret
0x0000000000473e53 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044cf4e : add rsp, 0x78 ; ret
0x00000000004754d2 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000417ac7 : add rsp, 0x80 ; ret
0x000000000044f09c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400f81 : add rsp, 0x88 ; pop rbx ; ret
0x00000000004016fe : add rsp, 0x98 ; ret
0x00000000004755f2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000411e46 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000411fd5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000411aa3 : add rsp, 0xd8 ; ret
0x0000000000413cee : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd2a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041236d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044e6df : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044d91b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004187a8 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004884d8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000403ee2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000425958 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048546a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004add95 : and al, 0 ; add al, cl ; retf 0xfff6
0x000000000046cb21 : and al, 0 ; jmp rax
0x000000000046d74a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d378 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000488471 : and al, 0x10 ; call 0x484ea4
0x000000000048ef30 : and al, 0x10 ; call r14
0x000000000044dd08 : and al, 0x10 ; call rax
0x00000000004826fb : and al, 0x10 ; call rdx
0x000000000041ea8c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040b878 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x408389
0x0000000000473572 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048ed18 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401335 : and al, 0x18 ; call rax
0x0000000000475810 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x0000000000451c98 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000047348d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047436f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x00000000004826f6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000040fff5 : and al, 0x20 ; call 0x45c2c4
0x0000000000454377 : and al, 0x20 ; call r15
0x00000000004565ae : and al, 0x20 ; call rax
0x0000000000474030 : and al, 0x20 ; call rbx
0x000000000044d036 : and al, 0x20 ; je 0x44d069 ; mov eax, 0x48 ; syscall
0x0000000000454242 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7c04 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000421ad3 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000454372 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000424983 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000454c53 : and al, 0x30 ; call r14
0x0000000000454e2b : and al, 0x30 ; call rbx
0x000000000047421e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00000000004560aa : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000455115 : and al, 0x38 ; call r12
0x000000000045574d : and al, 0x38 ; call r14
0x0000000000458711 : and al, 0x38 ; call r15
0x000000000045495b : and al, 0x38 ; call rbx
0x0000000000473f08 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000454667 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000454c4e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000454e26 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046866c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045a62e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000000004593ee : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481cc9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c57 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000456b8c : and al, 0x40 ; call r15
0x0000000000459338 : and al, 0x40 ; call rbx
0x00000000004565a9 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000455110 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000455748 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045870c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000454956 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000486db1 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000418718 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048ade8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aaec : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000453a56 : and al, 0x48 ; mov edi, ebx ; call 0x40049e
0x00000000004153f4 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048de1e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000456b87 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000459333 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048ddcf : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489d37 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489ce5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x000000000045463e : and al, 0x50 ; call 0x450914
0x000000000045463d : and al, 0x50 ; call 0x450915
0x00000000004b0c20 : and al, 0x53 ; add byte ptr [rax], al ; in al, dx ; cld ; stc ; jmp qword ptr [rdx]
0x00000000004793f5 : and al, 0x5f ; add al, ch ; retf
0x0000000000406c81 : and al, 0x60 ; jmp 0x4066fc
0x000000000042239b : and al, 0x68 ; call rax
0x0000000000464d3e : and al, 0x83 ; ret
0x000000000041917b : and al, 0x83 ; retf 0x4c01
0x000000000045aced : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041b283 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000406b1c : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000468427 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x0000000000496984 : and al, 0x93 ; sti ; jmp rax
0x0000000000454b6e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049217b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918db : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004555fb : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000454ff0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000045adc3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cf5b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044d0fc : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044d07f : and al, 0xc ; jne 0x44d050 ; neg eax ; jmp 0x44d050
0x000000000044d07e : and al, 0xc ; jne 0x44d051 ; neg eax ; jmp 0x44d051
0x000000000044cfa3 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000418702 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x414998
0x0000000000401330 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479e00 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000418cdc : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x000000000048aee8 : and al, 0xd8 ; ret
0x000000000041a2f3 : and al, 0xe9 ; ret 0xfffd
0x0000000000455a0e : and al, 0xf6 ; ret
0x0000000000495249 : and al, 0xfa ; call rdx
0x00000000004953c5 : and al, 0xfa ; jmp qword ptr [rax]
0x00000000004ac020 : and al, 7 ; add byte ptr [rax], al ; jl 0x4abfe0 ; cmc ; call rsp
0x0000000000418e0d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040b87d : and al, 8 ; call 0x408384
0x000000000040b87c : and al, 8 ; call 0x408385
0x000000000041f0a6 : and al, 8 ; call 0x41b344
0x000000000041024f : and al, 8 ; call rax
0x000000000041ea91 : and al, 8 ; call rcx
0x000000000048ea1c : and al, 8 ; jmp 0x48ea36
0x000000000044dd03 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000413310 : and al, 8 ; mov rdi, r15 ; call rax
0x00000000004b1d60 : and al, al ; cli ; call qword ptr [rax]
0x000000000048f5d4 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004909f3 : and al, byte ptr [rax] ; jne 0x4909dd ; pop rbx ; ret
0x000000000048f5c6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f5d7 ; ret
0x000000000048f6d6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f6e7 ; ret
0x000000000041b756 : and al, byte ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000044424a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004149ed : and al, ch ; pop rbp ; retf
0x000000000045bd07 : and al, ch ; ret
0x0000000000425733 : and al, ch ; retf
0x00000000004b0920 : and al, ch ; stc ; call qword ptr [rcx]
0x00000000004b3339 : and bh, ah ; jmp qword ptr [rcx]
0x000000000046a8b1 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004565af : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000495b31 : and bh, bl ; call qword ptr [rax]
0x0000000000495b49 : and bh, bl ; call rax
0x0000000000495b4d : and bh, bl ; jmp rax
0x0000000000495b51 : and bh, bl ; push rax ; and bh, bl ; call qword ptr [rax]
0x0000000000494c7c : and bh, dl ; stc ; inc dword ptr [rax] ; fyl2xp1 ; call rax
0x00000000004704bb : and bl, ch ; retf 0x9066
0x00000000004135a9 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004135d9 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041df5f : and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000041353e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042e1c6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004431ea : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042e33c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000004135da : and byte ptr [rax + 1], cl ; ret
0x00000000004010d1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000046776e : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000443978 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000443a9d : and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000443c5e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000454243 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000477368 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000403754 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x403768 ; call rax
0x0000000000452f86 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d456 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004691a4 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041df60 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000414f12 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004949f0 : and byte ptr [rax - 7], ah ; jmp qword ptr [rax + 0x20fff961]
0x000000000046147b : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048d429 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044b6da : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049243c : and byte ptr [rbp - 0x77], cl ; ret
0x0000000000492307 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004949e8 : and byte ptr [rbp - 7], bl ; jmp qword ptr [rax + 0x20fff95e]
0x00000000004a99a8 : and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004827bb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000469403 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x00000000004135aa : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004ac5f0 : and byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000004949f8 : and byte ptr [rbx - 7], ah ; jmp qword ptr [rax + 0x20fff964]
0x00000000004b1c1c : and byte ptr [rbx], ah ; add byte ptr [rax], dl ; std ; call rdx
0x0000000000494e24 : and byte ptr [rbx], al ; cli ; jmp qword ptr [rax]
0x000000000045f0a0 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004191ff : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x000000000041353f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000047f644 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004b0a1c : and byte ptr [rcx], dl ; add byte ptr [rax - 0x17], dl ; stc ; call qword ptr [rax]
0x00000000004949d8 : and byte ptr [rdi - 7], dl ; jmp qword ptr [rax + 0x20fff958]
0x000000000044a641 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000411ffb : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000448090 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000494ea8 : and byte ptr [rdx + rdi*8], al ; jmp qword ptr [rax]
0x00000000004949e0 : and byte ptr [rdx - 7], bl ; jmp qword ptr [rax + 0x20fff95b]
0x0000000000494ea4 : and byte ptr [rdx], al ; cli ; jmp qword ptr [rax]
0x00000000004ad6ad : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000044e77c : and byte ptr [rdx], bh ; std ; push rbx ; ret
0x0000000000414993 : and byte ptr [rsi + 0x2a], al ; add byte ptr [rax], al ; je 0x4149a4 ; ret
0x000000000042edda : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b21bd : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000494a00 : and byte ptr [rsi - 7], ah ; jmp qword ptr [rax + 0x20fff967]
0x0000000000478b47 : and byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; retf
0x0000000000474952 : and ch, 0xf ; je 0x474979 ; add rax, 2 ; ret
0x000000000044b698 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000494f18 : and ch, 0xf9 ; call rax
0x000000000042687a : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000044380b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000047493d : and cl, 0xf ; je 0x474965 ; ret
0x000000000041984a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044fc81 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f444 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000425ff3 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000495734 : and cl, byte ptr [rbp - 6] ; jmp qword ptr [rdx + 0x22fffa4c]
0x000000000042e61d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000495724 : and cl, byte ptr [rdi - 6] ; jmp qword ptr [rdx + 0x22fffa4e]
0x0000000000473d3a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000049572c : and cl, byte ptr [rsi - 6] ; jmp qword ptr [rdx + 0x22fffa4d]
0x0000000000495a74 : and cl, cl ; cli ; push qword ptr [rax - 0x36] ; cli ; inc eax ; retf
0x0000000000494cb0 : and cl, dl ; stc ; jmp rax
0x000000000044c50d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044f4f9 : and dh, al ; sub byte ptr [rcx], al ; ret
0x000000000046a8b0 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000049571c : and dl, byte ptr [rax - 6] ; jmp qword ptr [rdx + 0x22fffa4f]
0x000000000041a84e : and dl, byte ptr [rsi] ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b4130 : and dl, cl ; cld ; jmp qword ptr [rcx]
0x0000000000494c10 : and dl, dl ; stc ; jmp rax
0x000000000046a428 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004adae1 : and dword ptr [rax], eax ; add ah, ch ; ret 0xfff6
0x000000000046a429 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9722 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000419a07 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000419a5f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041a88e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000004a67d9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9721 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045bf0b : and eax, 0 ; ret
0x00000000004953c1 : and eax, 0x24b0fffa ; cli ; jmp qword ptr [rax]
0x00000000004952fd : and eax, 0x2564fffa ; cli ; call rsp
0x00000000004843bc : and eax, 0x28 ; jne 0x484406 ; leave ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x0000000000410cb8 : and eax, 0x30 ; call rax
0x0000000000410bf2 : and eax, 0x30 ; call rdx
0x0000000000410cde : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000045dce8 : and eax, 0x3d394800 ; jmp rdx
0x000000000044b61d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000044b668 : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000484a7f : and eax, 0x48002376 ; add esp, 8 ; ret
0x0000000000461c4a : and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044b713 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x000000000044b6b7 : and eax, 0x7ff80000 ; ret
0x000000000045700b : and eax, 0x833fe283 ; retf 0x4180
0x000000000044f337 : and eax, 0xc ; cmp eax, 4 ; je 0x44f348 ; ret
0x000000000045beac : and eax, 0xf3087400 ; ret
0x000000000048285c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004878f8 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047f465 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000485468 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000487843 : and eax, dword ptr [rax] ; jne 0x487873 ; ret
0x0000000000484eba : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484a95 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x23760a], rax ; ret
0x000000000047f50f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f3a9 : and eax, dword ptr [rax] ; ret
0x000000000047bc12 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000041b63c : and eax, dword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000455dfe : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000419a08 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000419a60 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044f2d2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44f2e5 ; ret
0x00000000004a7ed4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x0000000000495b2d : and ebx, edi ; inc dword ptr [rax] ; and bh, bl ; call qword ptr [rax]
0x0000000000495b21 : and ebx, edi ; inc eax ; and ebx, edi ; jmp rax
0x0000000000495b25 : and ebx, edi ; jmp rax
0x0000000000430355 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042fa88 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044ea2a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x0000000000495b75 : and edi, ebx ; call qword ptr [rax]
0x0000000000495b6d : and edi, ebx ; call rax
0x0000000000495b71 : and edi, ebx ; push rax ; and edi, ebx ; call qword ptr [rax]
0x0000000000495211 : and edi, edx ; call qword ptr [rdx]
0x0000000000495391 : and edi, edx ; call rax
0x0000000000495351 : and edi, edx ; jmp rax
0x000000000049520d : and edi, edx ; ljmp [rbx - 6] ; call qword ptr [rdx]
0x000000000049538d : and edi, edx ; push qword ptr [rax] ; and edi, edx ; call rax
0x00000000004142dc : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x4142f6
0x000000000041b2e9 : and esp, esi ; sub dword ptr [rax], eax ; ret
0x000000000045bd06 : and r8b, bpl ; ret
0x00000000004142db : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4142f7
0x000000000044f4f8 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000474497 : bnd je 0x4744a6 ; test edx, edx ; jne 0x474498 ; ret
0x000000000042df8a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042deb0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042e3a1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042dec0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042ded0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042dea0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042ddff : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000442e63 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000443946 : bsf eax, edx ; ret
0x0000000000474547 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000443aa2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000442f80 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000443992 : bsf rax, rdx ; ret
0x0000000000474546 : bsf rax, rdx ; shr rax, 2 ; ret
0x00000000004434a7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000044372b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000443639 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000443535 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000004434a6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000044372a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000443638 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000443534 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047dd5b : call 0x110a60ab
0x000000000046af86 : call 0x2146af84
0x000000000046b0fc : call 0x2146b0fa
0x000000000046b38b : call 0x2146b389
0x000000000046b850 : call 0x2146b84e
0x000000000046ba0e : call 0x2146ba0c
0x000000000046bfdf : call 0x2146bfdd
0x000000000046c218 : call 0x2146c216
0x00000000004b2f38 : call 0x244b2b4d
0x0000000000473a0b : call 0x40043a
0x000000000045e894 : call 0x40043e
0x0000000000478b88 : call 0x40048f
0x00000000004741ed : call 0x400492
0x0000000000453a5a : call 0x40049a
0x000000000044bf4c : call 0x4004ae
0x0000000000469d12 : call 0x4004af
0x0000000000462f25 : call 0x4004c6
0x0000000000457341 : call 0x403e32
0x00000000004174d7 : call 0x403e39
0x000000000040b87f : call 0x408382
0x00000000004234f9 : call 0x40ff52
0x00000000004104fb : call 0x410196
0x00000000004177ea : call 0x413a32
0x0000000000418708 : call 0x414992
0x00000000004150a0 : call 0x414996
0x000000000041f0a8 : call 0x41b342
0x0000000000423b25 : call 0x41fd62
0x0000000000404de1 : call 0x4218e2
0x000000000040c17c : call 0x4221a6
0x0000000000483b98 : call 0x43fe87
0x00000000004007e8 : call 0x44b586
0x00000000004006b1 : call 0x44ba46
0x0000000000412fbe : call 0x44f292
0x0000000000412956 : call 0x44f382
0x0000000000402ec9 : call 0x44f388
0x00000000004174b8 : call 0x44f389
0x0000000000454640 : call 0x450912
0x000000000040fff7 : call 0x45c2c2
0x0000000000462772 : call 0x45ea12
0x0000000000488473 : call 0x484ea2
0x0000000000489942 : call 0x488717
0x000000000045e3f6 : call 0x49086d4a
0x0000000000482d14 : call 0x490abf2b
0x00000000004a911a : call 0x4c14bad5
0x0000000000453957 : call 0x4d07c2ab
0x00000000004829ec : call 0x4d0abc03
0x000000000043792a : call 0x4fc28928
0x0000000000437929 : call 0x4fc28929
0x000000000043a44a : call 0x4fc2b448
0x000000000043a449 : call 0x4fc2b449
0x000000000047b6f1 : call 0x86c0385
0x000000000046db0d : call 0xa3f5e49
0x0000000000456d7b : call 0xffffffff810ff0a1
0x0000000000457026 : call 0xffffffff810ff34c
0x0000000000400d5d : call 0xffffffff84020e81
0x000000000044b67a : call 0xffffffff84073f8e
0x00000000004a907a : call 0xffffffffab585b70
0x00000000004a7243 : call 0xffffffffaf0d10b9
0x0000000000404ec3 : call 0xffffffffc255dc14
0x0000000000465f49 : call 0xffffffffc27fa753
0x000000000041fe60 : call 0xffffffffc2cb4679
0x0000000000420fa0 : call 0xffffffffc2cb57b9
0x0000000000421d5a : call 0xffffffffc2cb6573
0x000000000042385d : call 0xffffffffc2cb8076
0x0000000000423d62 : call 0xffffffffc2cb857b
0x000000000042429e : call 0xffffffffc2cb8ab7
0x000000000047e34a : call 0xffffffffc2d12f54
0x000000000041fce0 : call 0xffffffffc37b44ea
0x00000000004210a9 : call 0xffffffffc37b58b3
0x000000000046be1e : call 0xffffffffc3cabe26
0x0000000000444337 : call 0xffffffffc414cc88
0x0000000000444257 : call 0xffffffffc43ccba8
0x00000000004b4538 : call 0xffffffffc44b4220
0x0000000000484474 : call 0xffffffffca94cfc9
0x0000000000488274 : call 0xffffffffca950dc9
0x0000000000484481 : call 0xffffffffce9ccfdb
0x0000000000488281 : call 0xffffffffce9d0ddb
0x000000000044e6e5 : call 0xffffffffe1444448
0x0000000000466c9c : call 0xfffffffffc1155a8
0x0000000000403d0c : call 2
0x000000000046a19a : call qword ptr [r10 + rax*8]
0x0000000000489b90 : call qword ptr [r14]
0x0000000000401ad0 : call qword ptr [r15 + rbx*8]
0x000000000049489b : call qword ptr [rax + 0x20fff90b]
0x0000000000494cab : call qword ptr [rax + 0x20fff9de]
0x0000000000494c0b : call qword ptr [rax + 0x20fff9df]
0x0000000000494f7f : call qword ptr [rax + 0x20fffa2f]
0x0000000000495157 : call qword ptr [rax + 0x20fffa33]
0x0000000000495477 : call qword ptr [rax + 0x20fffa56]
0x000000000041053e : call qword ptr [rax + 0x458b41]
0x0000000000495a5f : call qword ptr [rax - 0x1f00053e]
0x0000000000494ef7 : call qword ptr [rax - 0x1f000611]
0x0000000000494d7f : call qword ptr [rax - 0x1f000636]
0x0000000000494d2b : call qword ptr [rax - 0x1f00063d]
0x000000000049540f : call qword ptr [rax - 0x2f0005fa]
0x0000000000494c07 : call qword ptr [rax - 0x6f000623]
0x0000000000494d4b : call qword ptr [rax]
0x000000000040121e : call qword ptr [rbx + 0x10]
0x0000000000410db0 : call qword ptr [rbx]
0x0000000000496187 : call qword ptr [rcx - 0x1d000499]
0x0000000000489d40 : call qword ptr [rcx]
0x0000000000401ad1 : call qword ptr [rdi + rbx*8]
0x0000000000496113 : call qword ptr [rdi]
0x000000000049502b : call qword ptr [rdx + 0x22fffa31]
0x0000000000495523 : call qword ptr [rdx + 0x22fffa58]
0x000000000046a19b : call qword ptr [rdx + rax*8]
0x000000000049504b : call qword ptr [rdx]
0x0000000000494fc7 : call qword ptr [rsi + 0x26fffa2e]
0x00000000004954bf : call qword ptr [rsi + 0x26fffa55]
0x0000000000489b91 : call qword ptr [rsi]
0x000000000047c7e7 : call r10
0x000000000040092c : call r11
0x000000000044dc00 : call r12
0x0000000000451fa0 : call r14
0x000000000044e142 : call r15
0x0000000000495a6f : call rax
0x000000000040092d : call rbx
0x000000000041ea93 : call rcx
0x000000000044e143 : call rdi
0x0000000000410bf7 : call rdx
0x000000000040225c : call rsi
0x000000000044dc01 : call rsp
0x000000000042b967 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048c6c4 : cdq ; add rax, r9 ; jmp rax
0x00000000004a8f80 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000495c5c : cdq ; pop rdx ; sti ; jmp rsi
0x0000000000462773 : cdq ; ret 0xffff
0x00000000004093bb : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004b5c89 : cdq ; std ; call qword ptr [rdx]
0x00000000004826ea : cdq ; std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000047d879 : clc ; add al, 0x75 ; retf
0x0000000000478064 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ae7f4 : clc ; add byte ptr cs:[rax], al ; sub byte ptr [rdi + rsi*8], bl ; jmp rsi
0x000000000046b091 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041f0ea : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041ed47 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e7b3 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040f7fd : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048876f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000004531f2 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042dc87 : clc ; add rax, rcx ; ret
0x000000000042e1b4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004b3338 : clc ; and bh, ah ; jmp qword ptr [rcx]
0x00000000004afa62 : clc ; call qword ptr [rax]
0x0000000000424e88 : clc ; cmovne rax, rcx ; ret
0x00000000004302f9 : clc ; cmp rcx, rax ; jne 0x43032b ; xor eax, eax ; ret
0x00000000004302f8 : clc ; cmp rcx, rax ; jne 0x43032c ; xor eax, eax ; ret
0x0000000000476a46 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047fa30 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000425850 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473cd0 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fc54 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048cbae : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000403dbc : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004710f9 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000041332d : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000478b8b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000492275 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000462d46 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000460cee : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004600a3 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000402982 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000044b6ba : clc ; jg 0x44b689 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000044b716 : clc ; jg 0x44b716 ; int1 ; mov eax, eax ; ret
0x0000000000457507 : clc ; jg 0x457496 ; ret 0xdb76
0x0000000000457507 : clc ; jg 0x45749a ; ret 0xdb76
0x00000000004052ab : clc ; jmp 0x404fca
0x00000000004052aa : clc ; jmp 0x404fcb
0x00000000004afa76 : clc ; jmp qword ptr [rsi]
0x0000000000461c4f : clc ; jmp rax
0x00000000004af728 : clc ; jns 0x4af725 ; jmp qword ptr [rbx]
0x000000000048d653 : clc ; leave ; ret
0x00000000004a7be2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000414a14 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000431df7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432767 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004376b7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432967 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000437627 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432b67 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000437597 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431e13 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044b1fe : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000044b37d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043b04c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044a48a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d7d1 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000470750 : clc ; mov rdx, r8 ; jmp 0x470722
0x0000000000414a2c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041cc56 : clc ; pop rbp ; pop r12 ; ret
0x0000000000472e37 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004755c3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000414a45 : clc ; ret
0x00000000004417d4 : clc ; rol ch, 1 ; jns 0x4417b5 ; retf 0xead3
0x0000000000441924 : clc ; rol ch, 1 ; jns 0x441905 ; retf 0xead3
0x0000000000441a74 : clc ; rol ch, 1 ; jns 0x441a55 ; retf 0xead3
0x0000000000441bc4 : clc ; rol ch, 1 ; jns 0x441ba5 ; retf 0xead3
0x0000000000441d14 : clc ; rol ch, 1 ; jns 0x441cf5 ; retf 0xead3
0x0000000000441e64 : clc ; rol ch, 1 ; jns 0x441e45 ; retf 0xead3
0x0000000000441fb4 : clc ; rol ch, 1 ; jns 0x441f95 ; retf 0xead3
0x0000000000442104 : clc ; rol ch, 1 ; jns 0x4420e5 ; retf 0xead3
0x0000000000442254 : clc ; rol ch, 1 ; jns 0x442235 ; retf 0xead3
0x00000000004423a4 : clc ; rol ch, 1 ; jns 0x442385 ; retf 0xead3
0x00000000004424f4 : clc ; rol ch, 1 ; jns 0x4424d5 ; retf 0xead3
0x0000000000442644 : clc ; rol ch, 1 ; jns 0x442625 ; retf 0xead3
0x0000000000442794 : clc ; rol ch, 1 ; jns 0x442775 ; retf 0xead3
0x00000000004428e4 : clc ; rol ch, 1 ; jns 0x4428c5 ; retf 0xead3
0x0000000000442a34 : clc ; rol ch, 1 ; jns 0x442a15 ; retf 0xead3
0x0000000000482f2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047465f : clc ; shr rax, 2 ; ret
0x0000000000481b9d : clc ; std ; jbe 0x481bad ; ret
0x00000000004853a1 : clc ; sub rax, r8 ; ret
0x0000000000443dd6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000044a09b : clc ; sub rax, rsi ; ret
0x000000000042e32b : clc ; vzeroupper ; ret
0x000000000044b61f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004142de : cld ; add rdx, rcx ; jmp 0x4142f4
0x00000000004b4146 : cld ; call rdx
0x00000000004a48b6 : cld ; inc dword ptr [rax - 0x7f00034c] ; mov ah, 0xfc ; jmp qword ptr [rax]
0x000000000044b6fc : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044b66a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000400db4 : cld ; jl 0x400d4d ; mov eax, 0 ; leave ; ret
0x00000000004a4c26 : cld ; jmp qword ptr [rax + 0x8fffcbb]
0x00000000004a48be : cld ; jmp qword ptr [rax]
0x00000000004b2f3a : cld ; jmp qword ptr [rbx]
0x00000000004b333a : cld ; jmp qword ptr [rcx]
0x00000000004b4212 : cld ; jmp qword ptr [rsi]
0x00000000004a4c2e : cld ; jmp rax
0x00000000004a4b02 : cld ; jmp rsp
0x00000000004a8965 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a8934 ; retf
0x0000000000432582 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432785 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432985 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432b85 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b206 : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000044b388 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000043b05e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000044a498 : cld ; mov dword ptr [rdi], esi ; ret
0x000000000044a492 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004321b6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437846 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432396 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004377c6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432576 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437746 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431fd6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004378c6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044d207 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000431e61 : cld ; ret
0x000000000040b880 : cld ; retf 0xffff
0x00000000004a7083 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000494eb9 : cld ; stc ; call qword ptr [rax]
0x00000000004b0c25 : cld ; stc ; jmp qword ptr [rdx]
0x0000000000494db5 : cld ; stc ; push rax ; std ; stc ; call rax
0x00000000004ab36d : cld ; std ; jmp qword ptr [rax]
0x00000000004a7096 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000044ad22 : cld ; vzeroupper ; ret
0x00000000004176e1 : cli ; add ch, al ; ret
0x00000000004177e8 : cli ; add ch, al ; ret 0xffff
0x000000000046a5e5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000413692 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000044b1f1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x44b201 ; mov byte ptr [rdi], cl ; ret
0x000000000044a1eb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043b07c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044c2de : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044c33c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a9079 : cli ; call 0xffffffffab585b71
0x0000000000494f7e : cli ; call qword ptr [rax + 0x20fffa2f]
0x0000000000495156 : cli ; call qword ptr [rax + 0x20fffa33]
0x0000000000495476 : cli ; call qword ptr [rax + 0x20fffa56]
0x0000000000495a5e : cli ; call qword ptr [rax - 0x1f00053e]
0x000000000049540e : cli ; call qword ptr [rax - 0x2f0005fa]
0x0000000000494dee : cli ; call qword ptr [rax]
0x00000000004b1d4a : cli ; call qword ptr [rbx]
0x00000000004b1a4a : cli ; call qword ptr [rcx]
0x00000000004b14aa : cli ; call qword ptr [rdi]
0x000000000049502a : cli ; call qword ptr [rdx + 0x22fffa31]
0x0000000000495522 : cli ; call qword ptr [rdx + 0x22fffa58]
0x000000000049504a : cli ; call qword ptr [rdx]
0x0000000000494fc6 : cli ; call qword ptr [rsi + 0x26fffa2e]
0x00000000004954be : cli ; call qword ptr [rsi + 0x26fffa55]
0x0000000000494fa6 : cli ; call qword ptr [rsi]
0x0000000000495a6e : cli ; call rax
0x00000000004b1416 : cli ; call rcx
0x000000000049503a : cli ; call rdx
0x0000000000494f8e : cli ; call rsi
0x0000000000495102 : cli ; call rsp
0x000000000044f7a5 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045e7fe : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f5d0 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045d7b5 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000473087 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494dea : cli ; inc dword ptr [rax + 0x10fffa07] ; cli ; stc ; call rax
0x0000000000494f8a : cli ; inc dword ptr [rax + 0x2e] ; cli ; call rsi
0x0000000000495162 : cli ; inc dword ptr [rax + 0x32] ; cli ; call rax
0x0000000000495482 : cli ; inc dword ptr [rax + 0x55] ; cli ; call rax
0x000000000049565a : cli ; inc dword ptr [rax + 0x59] ; cli ; call rax
0x0000000000494ece : cli ; inc dword ptr [rax - 0x3f000621] ; jrcxz 0x494ed9 ; call qword ptr [rax]
0x0000000000495a5a : cli ; inc dword ptr [rax - 0x3f] ; cli ; call qword ptr [rax - 0x1f00053e]
0x0000000000495a8a : cli ; inc dword ptr [rax - 0x44] ; cli ; call rax
0x00000000004959a2 : cli ; inc dword ptr [rax] ; jb 0x4959a6 ; call qword ptr [rax]
0x0000000000495472 : cli ; inc dword ptr [rax] ; push rdi ; cli ; call qword ptr [rax + 0x20fffa56]
0x0000000000495152 : cli ; inc dword ptr [rax] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa33]
0x0000000000494f7a : cli ; inc dword ptr [rax] ; xor dl, bh ; call qword ptr [rax + 0x20fffa2f]
0x00000000004559bd : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000458ca5 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004950fe : cli ; inc dword ptr [rdi + rbp - 6] ; call rsp
0x0000000000495036 : cli ; inc dword ptr [rdx + 0x30] ; cli ; call rdx
0x000000000049552e : cli ; inc dword ptr [rdx + 0x57] ; cli ; call rdx
0x000000000049551e : cli ; inc dword ptr [rdx] ; pop rcx ; cli ; call qword ptr [rdx + 0x22fffa58]
0x0000000000495026 : cli ; inc dword ptr [rdx] ; xor bh, dl ; call qword ptr [rdx + 0x22fffa31]
0x0000000000494f92 : cli ; inc dword ptr [rsi + 0x34] ; cli ; call rsi
0x00000000004955f6 : cli ; inc dword ptr [rsi + rdx*2 - 6] ; call rsp
0x00000000004954ba : cli ; inc dword ptr [rsi] ; push rsi ; cli ; call qword ptr [rsi + 0x26fffa55]
0x0000000000495992 : cli ; inc eax ; imul edi, edx, 0xfa6bd0ff ; jmp rax
0x0000000000495a7a : cli ; inc eax ; retf
0x000000000043b037 : cli ; jg 0x43b04a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000044a1b6 : cli ; jg 0x44a1c8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044a7e9 : cli ; jg 0x44a7fc ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044ac51 : cli ; jg 0x44ac64 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044b372 : cli ; jg 0x44b382 ; vzeroupper ; ret
0x000000000044b548 : cli ; jg 0x44b558 ; vzeroupper ; ret
0x0000000000494e22 : cli ; jmp qword ptr [rax]
0x000000000049573e : cli ; jmp qword ptr [rdx + 0x12fffa4b]
0x0000000000495736 : cli ; jmp qword ptr [rdx + 0x22fffa4c]
0x000000000049572e : cli ; jmp qword ptr [rdx + 0x22fffa4d]
0x0000000000495726 : cli ; jmp qword ptr [rdx + 0x22fffa4e]
0x000000000049571e : cli ; jmp qword ptr [rdx + 0x22fffa4f]
0x000000000049502e : cli ; jmp qword ptr [rdx]
0x0000000000494fca : cli ; jmp qword ptr [rsi]
0x0000000000494e0e : cli ; jmp rax
0x000000000040f5a4 : cli ; jmp rdx
0x0000000000494fba : cli ; jmp rsi
0x00000000004950e6 : cli ; jmp rsp
0x000000000049520e : cli ; ljmp [rbx - 6] ; call qword ptr [rdx]
0x000000000049534a : cli ; ljmp [rdx + 0x3afffa23] ; and edi, edx ; jmp rax
0x0000000000495506 : cli ; ljmp [rsp + rdx*2 + 0x543cfffa] ; cli ; jmp rdx
0x000000000045831c : cli ; loopne 0x458399 ; jae 0x4582af ; retf 0xb941
0x0000000000432988 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000040f886 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042e638 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042d0e6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9501 : cli ; push 0x6e ; ja 0x4a948e ; ret 0x48f
0x0000000000494f86 : cli ; push qword ptr [rax + 0x40fffa2e] ; cli ; call rsi
0x000000000049515e : cli ; push qword ptr [rax + 0x40fffa32] ; xor bh, dl ; call rax
0x000000000049547e : cli ; push qword ptr [rax + 0x40fffa55] ; push rbp ; cli ; call rax
0x0000000000495656 : cli ; push qword ptr [rax + 0x40fffa59] ; pop rcx ; cli ; call rax
0x000000000049587e : cli ; push qword ptr [rax + 0x4b] ; cli ; jmp rax
0x0000000000495896 : cli ; push qword ptr [rax + 0x50] ; cli ; jmp rax
0x0000000000495a76 : cli ; push qword ptr [rax - 0x36] ; cli ; inc eax ; retf
0x0000000000495a1e : cli ; push qword ptr [rax - 0x51] ; cli ; call qword ptr [rax]
0x00000000004959fe : cli ; push qword ptr [rax - 0x5e] ; cli ; call qword ptr [rax]
0x0000000000494e4e : cli ; push qword ptr [rax - 7] ; stc ; push qword ptr [rax] ; sti ; stc ; call qword ptr [rax]
0x000000000049538e : cli ; push qword ptr [rax] ; and edi, edx ; call rax
0x0000000000494dce : cli ; push qword ptr [rax] ; cli ; stc ; push rax ; sti ; stc ; call rax
0x0000000000495a16 : cli ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call rax
0x0000000000494e6e : cli ; push qword ptr [rax] ; stc ; stc ; push rax ; cli ; stc ; call rax
0x00000000004950fa : cli ; push qword ptr [rdi + rbp + 0x2f44fffa] ; cli ; call rsp
0x0000000000495032 : cli ; push qword ptr [rdx + 0x42fffa30] ; xor dl, bh ; call rdx
0x000000000049552a : cli ; push qword ptr [rdx + 0x42fffa57] ; push rdi ; cli ; call rdx
0x00000000004952d6 : cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004955f2 : cli ; push qword ptr [rsi + rdx*2 + 0x5644fffa] ; cli ; call rsp
0x000000000049587a : cli ; push rax ; cli ; push qword ptr [rax + 0x4b] ; cli ; jmp rax
0x00000000004959fa : cli ; push rax ; jg 0x495a02 ; push qword ptr [rax - 0x5e] ; cli ; call qword ptr [rax]
0x000000000049599e : cli ; push rax ; outsd dx, dword ptr [rsi] ; cli ; inc dword ptr [rax] ; jb 0x4959aa ; call qword ptr [rax]
0x0000000000495892 : cli ; push rax ; push rax ; cli ; push qword ptr [rax + 0x50] ; cli ; jmp rax
0x00000000004952d2 : cli ; push rsp ; sub bh, dl ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x000000000044b129 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7fa5 : cli ; ret 0xac65
0x0000000000404de2 : cli ; retf 1
0x000000000044f25b : cli ; setae al ; ret
0x00000000004508b2 : cli ; shl byte ptr [rsi], 0 ; test eax, eax ; je 0x4508c9 ; ret
0x0000000000494db1 : cli ; stc ; call qword ptr [rax]
0x0000000000494df1 : cli ; stc ; call rax
0x0000000000494d91 : cli ; stc ; jmp qword ptr [rax]
0x0000000000494eb5 : cli ; stc ; push qword ptr [rax] ; cld ; stc ; call qword ptr [rax]
0x0000000000494dd1 : cli ; stc ; push rax ; sti ; stc ; call rax
0x00000000004a7e50 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004439e9 : cli ; test rdx, rdx ; je 0x443a09 ; bsf rax, rdx ; ret
0x0000000000443bb8 : cli ; test rdx, rdx ; je 0x443be9 ; bsf rax, rdx ; ret
0x00000000004a6bea : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000493180 : cmc ; adc esi, edi ; call rsi
0x00000000004abcb2 : cmc ; call qword ptr [rdx]
0x00000000004ac0b2 : cmc ; call rax
0x00000000004ac026 : cmc ; call rsp
0x00000000004ac1ca : cmc ; jmp qword ptr [rax]
0x00000000004ab972 : cmc ; jmp qword ptr [rdx]
0x00000000004a9929 : cmc ; mov ch, 0xab ; ret
0x00000000004377ca : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043220e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004711b7 : cmc ; mov rbp, rax ; jmp 0x471184
0x0000000000449573 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a67d7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004b1971 : cmc ; std ; jmp qword ptr [rdi]
0x0000000000449577 : cmc ; sub eax, edx ; ret
0x00000000004a8f65 : cmc ; xlatb ; ret 0x4e27
0x000000000041b109 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000041b108 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000044b644 : cmove eax, ecx ; pop rbx ; ret
0x00000000004733e1 : cmove eax, ecx ; ret
0x0000000000425853 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000044b60c : cmove eax, edx ; pop rbx ; ret
0x00000000004259df : cmove eax, edx ; ret
0x0000000000416b5f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e8b8 : cmove ecx, eax ; mov rax, rcx ; ret
0x00000000004733e0 : cmove r8, rcx ; ret
0x000000000044b643 : cmove rax, rcx ; pop rbx ; ret
0x0000000000425852 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000044b60b : cmove rax, rdx ; pop rbx ; ret
0x00000000004259de : cmove rax, rdx ; ret
0x000000000047e8b7 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000041854b : cmovg eax, ecx ; test rdx, rdx ; jne 0x418549 ; ret
0x0000000000471efb : cmovg eax, ecx ; test rdx, rdx ; jne 0x471ef9 ; ret
0x0000000000424e8a : cmovne eax, ecx ; ret
0x000000000044b69c : cmovne eax, edx ; pop rbx ; ret
0x000000000042588f : cmovne eax, edx ; ret
0x00000000004430b4 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000424e89 : cmovne rax, rcx ; ret
0x000000000044b69b : cmovne rax, rdx ; pop rbx ; ret
0x000000000042588e : cmovne rax, rdx ; ret
0x00000000004430b3 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042dc48 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000004073d8 : cmovs eax, dword ptr [rbx - 0x76b70f1d] ; fucomip st(0) ; ret
0x000000000045401c : cmovs eax, edx ; ret
0x000000000048dcc8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000473148 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x473149 ; lea eax, [rdx + rdi] ; ret
0x000000000044b5ee : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000044b680 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000044a088 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000495350 : cmp ah, byte ptr [rbx] ; cli ; jmp rax
0x0000000000488500 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004add38 : cmp al, 0x24 ; add byte ptr [rax], al ; retf 0xfff6
0x0000000000458e42 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000452d32 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000418717 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000418706 : cmp al, 0x24 ; call 0x414994
0x000000000048de1d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d2ec : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d27d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000426920 : cmp al, 0x42 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a7be0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000049550c : cmp al, 0x54 ; cli ; jmp rdx
0x00000000004b1f38 : cmp al, 0x66 ; add byte ptr [rax], al ; add al, 0xf0 ; cli ; call qword ptr [rsi]
0x00000000004a6ae3 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004a95cb : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x0000000000403551 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040f889 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x00000000004a4b00 : cmp al, 0xba ; cld ; jmp rsp
0x00000000004b4144 : cmp al, 0xca ; cld ; call rdx
0x000000000044eb0d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004604e5 : cmp al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000042675a : cmp al, 2 ; add bh, dh ; ret 0
0x00000000004268db : cmp al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000449a36 : cmp al, byte ptr [rsi - 1] ; jne 0x449a5c ; xor eax, eax ; ret
0x000000000042dea6 : cmp al, dh ; ret
0x000000000042dea5 : cmp al, r14b ; ret
0x000000000048b066 : cmp bh, 0x10 ; jne 0x48b08f ; xor eax, eax ; ret
0x000000000048e206 : cmp bh, 0x10 ; jne 0x48e225 ; xor eax, eax ; ret
0x000000000048f066 : cmp bh, 0x10 ; jne 0x48f085 ; xor eax, eax ; ret
0x000000000048fad6 : cmp bh, 0x10 ; jne 0x48faff ; xor eax, eax ; ret
0x000000000048e1ec : cmp bh, 0x30 ; jne 0x48e221 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f04c : cmp bh, 0x30 ; jne 0x48f081 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000044e77d : cmp bh, ch ; push rbx ; ret
0x0000000000412a72 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000041443f : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476e53 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000041273e : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000414ee9 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040188b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x00000000004829ae : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042dee7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000004718c5 : cmp byte ptr [rax + 1], cl ; ret
0x0000000000471350 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045ba6f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045c347 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000454668 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045c4c4 : cmp byte ptr [rax - 0x75], cl ; jl 0x45c4f5 ; and byte ptr [rax + 1], cl ; ret
0x0000000000412a73 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047e2d9 : cmp byte ptr [rax - 0x77], cl ; retf
0x0000000000413300 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x00000000004710f6 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000455f74 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042ded6 : cmp byte ptr [rax], ah ; ret
0x0000000000418b83 : cmp byte ptr [rax], al ; je 0x418b95 ; ret
0x000000000048d1ef : cmp byte ptr [rax], al ; je 0x48d218 ; add rsp, 0x18 ; ret
0x000000000044a022 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000442c50 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042dec6 : cmp byte ptr [rax], dl ; ret
0x000000000042dec5 : cmp byte ptr [rax], r10b ; ret
0x000000000042ded5 : cmp byte ptr [rax], r12b ; ret
0x0000000000442c4f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004af488 : cmp byte ptr [rbp - 9], ah ; jmp qword ptr [rbx]
0x00000000004b4079 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b40ad : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b4045 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048ad08 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040fdd6 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000418200 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004acf74 : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x000000000048908d : cmp byte ptr [rbx], ah ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000472e70 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d2eb : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d2fe ; mov qword ptr [rax], rdx ; ret
0x000000000040628b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000045b797 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004801a6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004a5ce8 : cmp byte ptr [rcx - 3], dh ; jmp qword ptr [rax]
0x00000000004b0a34 : cmp byte ptr [rcx], dl ; add byte ptr [rax - 0x17], cl ; stc ; call qword ptr [rdx]
0x0000000000418b48 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042f7cd : cmp byte ptr [rdi], dl ; ret
0x00000000004302e0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004302c9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004302b2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ed6e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d27c : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d2a5 ; mov rax, qword ptr [rax] ; ret
0x00000000004b3334 : cmp byte ptr [rdx], bh ; add al, bh ; and bh, ah ; jmp qword ptr [rcx]
0x000000000048c824 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x00000000004afb61 : cmp cl, bh ; jmp rdx
0x0000000000488de2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x00000000004309b1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000430b01 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000430c51 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000430da1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000430ef1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000431041 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000431191 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x00000000004312e1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000431431 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000431581 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x00000000004316d1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000431821 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000431971 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x0000000000431ac1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000431c11 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000435bea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x0000000000435d6a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x0000000000435eea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043606a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004361ea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043636a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004364ea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000043666a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x00000000004367ea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000043696a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000436aea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x0000000000436c6a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x0000000000436dea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x0000000000436f6a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004370ea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004a99a6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000406b47 : cmp cl, ch ; ret 0xfffb
0x00000000004430b1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044b52a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000048b065 : cmp dil, 0x10 ; jne 0x48b090 ; xor eax, eax ; ret
0x000000000048e205 : cmp dil, 0x10 ; jne 0x48e226 ; xor eax, eax ; ret
0x000000000048f065 : cmp dil, 0x10 ; jne 0x48f086 ; xor eax, eax ; ret
0x000000000048fad5 : cmp dil, 0x10 ; jne 0x48fb00 ; xor eax, eax ; ret
0x000000000044b1f0 : cmp dl, 1 ; ja 0x44b213 ; jb 0x44b202 ; mov byte ptr [rdi], cl ; ret
0x000000000043b07b : cmp dl, 1 ; jb 0x43b08d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044a1ea : cmp dl, 1 ; jb 0x44a1f8 ; mov byte ptr [rdi], cl ; ret
0x0000000000424ef5 : cmp dl, al ; jne 0x424ee8 ; sub rax, 0x10 ; ret
0x0000000000424ef4 : cmp dl, r8b ; jne 0x424ee9 ; sub rax, 0x10 ; ret
0x0000000000472e18 : cmp dword ptr [rax + 0x30], 0 ; je 0x472e27 ; ret
0x000000000042c7c7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042cfa7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000410d81 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000437308 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000418b81 : cmp dword ptr [rdi + 0x38], 0 ; je 0x418b97 ; ret
0x000000000047fa2f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000472e36 : cmp eax, -1 ; je 0x472e49 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000481b9c : cmp eax, -3 ; jbe 0x481bae ; ret
0x00000000004878f5 : cmp eax, 0x23168d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000462189 : cmp eax, 0x2551b2 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000414992 : cmp eax, 0x2a4620 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405b7a : cmp eax, 0x2b33f0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044dc22 : cmp eax, 0x7d8b48 ; call r12
0x000000000044f97f : cmp eax, 0x83482f74 ; ret
0x000000000044f7a6 : cmp eax, 0x83497174 ; ret
0x0000000000443794 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000458312 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004a6ecb : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000426942 : cmp eax, 0xf480002 ; ret 0x66c3
0x000000000042663b : cmp eax, 0xf480002 ; ret 0xfc3
0x000000000044cac6 : cmp eax, 0xfffff000 ; ja 0x44cad8 ; ret
0x000000000044cb14 : cmp eax, 0xfffff000 ; ja 0x44cb28 ; ret
0x000000000044cd1f : cmp eax, 0xfffff000 ; ja 0x44cd88 ; ret
0x000000000044cdb5 : cmp eax, 0xfffff000 ; ja 0x44cdc8 ; ret
0x000000000044cdf2 : cmp eax, 0xfffff000 ; ja 0x44ce58 ; ret
0x000000000044ce88 : cmp eax, 0xfffff000 ; ja 0x44cea0 ; ret
0x000000000044ceb8 : cmp eax, 0xfffff000 ; ja 0x44ced0 ; ret
0x000000000044d0c2 : cmp eax, 0xfffff000 ; ja 0x44d110 ; ret
0x000000000044d138 : cmp eax, 0xfffff000 ; ja 0x44d150 ; ret
0x000000000044d891 : cmp eax, 0xfffff000 ; ja 0x44d8a8 ; ret
0x000000000045c2ce : cmp eax, 0xfffff000 ; ja 0x45c2e8 ; ret
0x00000000004756b6 : cmp eax, 0xfffff000 ; ja 0x4756c8 ; ret
0x000000000047570a : cmp eax, 0xfffff000 ; ja 0x475720 ; ret
0x000000000044ca38 : cmp eax, 0xfffff001 ; jae 0x44ca47 ; ret
0x000000000044dac8 : cmp eax, 0xfffff001 ; jae 0x44dad7 ; ret
0x000000000044daf8 : cmp eax, 0xfffff001 ; jae 0x44db07 ; ret
0x000000000044db28 : cmp eax, 0xfffff001 ; jae 0x44db37 ; ret
0x000000000044f1cb : cmp eax, 0xfffff001 ; jae 0x44f1da ; ret
0x000000000044f1f8 : cmp eax, 0xfffff001 ; jae 0x44f207 ; ret
0x0000000000475638 : cmp eax, 0xfffff001 ; jae 0x475647 ; ret
0x00000000004886a8 : cmp eax, 0xfffff001 ; jae 0x4886b7 ; ret
0x000000000044bbab : cmp eax, 2 ; je 0x44bbbf ; xor eax, eax ; ret
0x000000000044f33a : cmp eax, 4 ; je 0x44f345 ; ret
0x0000000000426899 : cmp eax, dword ptr [r10] ; add bh, dh ; ret 0
0x000000000042689a : cmp eax, dword ptr [rdx] ; add bh, dh ; ret 0
0x000000000042679b : cmp eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004a8d97 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000047074b : cmp eax, ecx ; jg 0x470768 ; add eax, edi ; mov rdx, r8 ; jmp 0x470727
0x000000000044a03f : cmp eax, ecx ; jle 0x44a07f ; movsxd rax, ecx ; ret
0x0000000000449a53 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041a88b : cmp eax, edx ; jae 0x41a8b7 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e24 : cmp eax, esi ; je 0x487e35 ; ret
0x000000000046426f : cmp eax, esp ; je 0x4640a6 ; jmp 0x464244
0x000000000047074a : cmp eax, r9d ; jg 0x470769 ; add eax, edi ; mov rdx, r8 ; jmp 0x470728
0x00000000004599bc : cmp ebp, ebx ; jb 0x459a2e ; mov rdx, rax ; jmp 0x459985
0x000000000044f2d6 : cmp ebx, 0xa ; je 0x44f2e1 ; ret
0x00000000004508ee : cmp ebx, eax ; setne dl ; jmp 0x4508da
0x0000000000473d85 : cmp ecx, 0xc00 ; je 0x473d99 ; ret
0x000000000044f501 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44f4f6 ; ret
0x000000000048725e : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x48726f ; add rdx, rax ; jmp 0x487278
0x0000000000482668 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xfe8
0x0000000000451df2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047fa78 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa28 ; xor eax, eax ; ret
0x00000000004733de : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000004302fb : cmp ecx, eax ; jne 0x430329 ; xor eax, eax ; ret
0x000000000047e808 : cmp ecx, eax ; jne 0x47e7b2 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004843c2 : cmp ecx, ecx ; ret
0x000000000047314a : cmp ecx, esi ; jne 0x473147 ; lea eax, [rdx + rdi] ; ret
0x000000000047e7f6 : cmp ecx, esi ; jne 0x47e7d5 ; ret
0x00000000004671e0 : cmp edi, eax ; ja 0x4671c7 ; mov eax, r9d ; ret
0x0000000000475a2e : cmp edi, edx ; ja 0x475a5d ; ret
0x000000000044a3f2 : cmp edi, edx ; jb 0x44a3ff ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004671df : cmp edi, r8d ; ja 0x4671c8 ; mov eax, r9d ; ret
0x000000000042173a : cmp edx, eax ; jne 0x421705 ; ret
0x000000000044b1db : cmp edx, ecx ; jne 0x44b1c8 ; ret
0x000000000044b342 : cmp edx, ecx ; jne 0x44b32e ; vzeroupper ; ret
0x000000000044b505 : cmp edx, ecx ; jne 0x44b4e9 ; vzeroupper ; ret
0x000000000044f25a : cmp edx, edi ; setae al ; ret
0x0000000000474496 : cmp edx, esi ; je 0x4744a7 ; test edx, edx ; jne 0x474499 ; ret
0x000000000041a8c9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000045bbe4 : cmp esi, 3 ; je 0x45bbf6 ; ret
0x000000000044a7d5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8f64 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000419aea : cmp esi, ecx ; jne 0x419ae7 ; lea eax, [rdx + rdi] ; ret
0x0000000000472e17 : cmp qword ptr [rax + 0x30], 0 ; je 0x472e28 ; ret
0x0000000000418b80 : cmp qword ptr [rdi + 0x38], 0 ; je 0x418b98 ; ret
0x000000000044f2d5 : cmp r11d, 0xa ; je 0x44f2e2 ; ret
0x00000000004599bb : cmp r13, r11 ; jb 0x459a2f ; mov rdx, rax ; jmp 0x459986
0x000000000044cac5 : cmp rax, -0x1000 ; ja 0x44cad9 ; ret
0x000000000044cb13 : cmp rax, -0x1000 ; ja 0x44cb29 ; ret
0x000000000044cd1e : cmp rax, -0x1000 ; ja 0x44cd89 ; ret
0x000000000044cdb4 : cmp rax, -0x1000 ; ja 0x44cdc9 ; ret
0x000000000044cdf1 : cmp rax, -0x1000 ; ja 0x44ce59 ; ret
0x000000000044ce87 : cmp rax, -0x1000 ; ja 0x44cea1 ; ret
0x000000000044ceb7 : cmp rax, -0x1000 ; ja 0x44ced1 ; ret
0x000000000044d0c1 : cmp rax, -0x1000 ; ja 0x44d111 ; ret
0x000000000044d137 : cmp rax, -0x1000 ; ja 0x44d151 ; ret
0x000000000044d890 : cmp rax, -0x1000 ; ja 0x44d8a9 ; ret
0x000000000045c2cd : cmp rax, -0x1000 ; ja 0x45c2e9 ; ret
0x00000000004756b5 : cmp rax, -0x1000 ; ja 0x4756c9 ; ret
0x0000000000475709 : cmp rax, -0x1000 ; ja 0x475721 ; ret
0x000000000044ca37 : cmp rax, -0xfff ; jae 0x44ca48 ; ret
0x000000000044dac7 : cmp rax, -0xfff ; jae 0x44dad8 ; ret
0x000000000044daf7 : cmp rax, -0xfff ; jae 0x44db08 ; ret
0x000000000044db27 : cmp rax, -0xfff ; jae 0x44db38 ; ret
0x000000000044f1ca : cmp rax, -0xfff ; jae 0x44f1db ; ret
0x000000000044f1f7 : cmp rax, -0xfff ; jae 0x44f208 ; ret
0x0000000000475637 : cmp rax, -0xfff ; jae 0x475648 ; ret
0x00000000004886a7 : cmp rax, -0xfff ; jae 0x4886b8 ; ret
0x000000000047fa2e : cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000481b9b : cmp rax, -3 ; jbe 0x481baf ; ret
0x000000000041a88a : cmp rax, rdx ; jae 0x41a8b8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e23 : cmp rax, rsi ; je 0x487e36 ; ret
0x000000000044f500 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44f4f7 ; ret
0x000000000047fa77 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47fa29 ; xor eax, eax ; ret
0x00000000004733dd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e807 : cmp rcx, r8 ; jne 0x47e7b3 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004302fa : cmp rcx, rax ; jne 0x43032a ; xor eax, eax ; ret
0x0000000000473149 : cmp rcx, rsi ; jne 0x473148 ; lea eax, [rdx + rdi] ; ret
0x000000000047e7f5 : cmp rcx, rsi ; jne 0x47e7d6 ; ret
0x0000000000475a2d : cmp rdi, rdx ; ja 0x475a5e ; ret
0x000000000044a3f1 : cmp rdi, rdx ; jb 0x44a400 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000421739 : cmp rdx, r8 ; jne 0x421706 ; ret
0x000000000044b1da : cmp rdx, rcx ; jne 0x44b1c9 ; ret
0x000000000044b1d9 : cmp rdx, rcx ; jne 0x44b1ca ; ret
0x000000000044b341 : cmp rdx, rcx ; jne 0x44b32f ; vzeroupper ; ret
0x000000000044b504 : cmp rdx, rcx ; jne 0x44b4ea ; vzeroupper ; ret
0x000000000044f259 : cmp rdx, rdi ; setae al ; ret
0x0000000000419ae9 : cmp rsi, rcx ; jne 0x419ae8 ; lea eax, [rdx + rdi] ; ret
0x000000000042fd79 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x00000000004a6f96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6f62 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000494b1c : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov al, 0xf9 ; jmp qword ptr [rsi + 0x26fff9b1]
0x0000000000494b4c : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov bh, 0xf9 ; jmp qword ptr [rdi]
0x0000000000494b30 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov bl, 0xf9 ; jmp qword ptr [rsi]
0x0000000000494b20 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov cl, 0xf9 ; jmp qword ptr [rsi]
0x0000000000494b28 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dl, 0xf9 ; jmp qword ptr [rsi]
0x0000000000440a66 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a90b1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000421869 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041eedd : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x000000000047cb48 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x00000000004129a9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004a6a7f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000004b0294 : cwde ; add byte ptr [r8], al ; ret 0xfff9
0x00000000004b5109 : cwde ; add byte ptr [rax], al ; add al, 0x36 ; std ; jmp rsp
0x000000000048b0e0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041c17c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048b175 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004129aa : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000454b6f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049217c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918dc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004add94 : cwde ; and al, 0 ; add al, cl ; retf 0xfff6
0x00000000004371bc : cwde ; xor byte ptr [rax], ch ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000445751 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000445752 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044ad1d : dec byte ptr [rax + 0x7f] ; jl 0x44ad42 ; cld ; vzeroupper ; ret
0x000000000045eff9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x00000000004149e7 : dec byte ptr [rax - 0x77] ; fild word ptr [rbx + 0x5de820e5] ; retf
0x0000000000480e7f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x1de8
0x0000000000473be0 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480e1d : dec byte ptr [rax - 0x7d] ; ret
0x00000000004028a5 : dec byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000044dd72 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000410726 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044e403 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004741e6 : dec byte ptr [rcx + rcx*4 - 0x11] ; add r15, r12 ; call 0x400499
0x00000000004102d7 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000481b99 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x481bb1 ; ret
0x0000000000459d63 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000041656e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000041333d : dec dword ptr [rax + 0x29] ; ret
0x0000000000445892 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482b61 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482ca1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000004207c5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047644b : dec dword ptr [rax + 0x39] ; ret
0x000000000041517d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000489349 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041fb65 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041fb37 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x000000000048485e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000046012c : dec dword ptr [rax + 0x63] ; retf
0x0000000000470162 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000443729 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047fa31 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000425851 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473da9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045c34b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000473cd1 : dec dword ptr [rax + 1] ; ret
0x0000000000494bcf : dec dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax]
0x0000000000405353 : dec dword ptr [rax - 0x39] ; ret
0x000000000044c9bf : dec dword ptr [rax - 0x39] ; ret 0
0x000000000044c964 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045f060 : dec dword ptr [rax - 0x39] ; ret 0xac60
0x000000000044c8d7 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000469d16 : dec dword ptr [rax - 0x39] ; ret 0xffa8
0x000000000044cc55 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000044c82c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000048be8f : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000459c74 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fc55 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000420c18 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c382 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x00000000004822ca : dec dword ptr [rax - 0x75] ; jl 0x4822fa ; sbb al, ch ; retf
0x000000000045257c : dec dword ptr [rax - 0x75] ; jne 0x452516 ; call rsi
0x000000000046a52b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048cbaf : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044e005 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000481ddc : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004218c4 : dec dword ptr [rax - 0x77] ; add eax, 0x2980b4 ; ret
0x000000000048a537 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f5d1 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041992a : dec dword ptr [rax - 0x77] ; out 0x31, eax ; imul al ; retf
0x0000000000403dbd : dec dword ptr [rax - 0x77] ; ret
0x0000000000475a1e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000047ce07 : dec dword ptr [rax - 0x77] ; ret 0x28e8
0x00000000004210bf : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042651b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000046f0b6 : dec dword ptr [rax - 0x77] ; ret 0x69e8
0x000000000047597d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x0000000000420e3c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004257c7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045c172 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046edc0 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x000000000044c756 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004787ec : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000425f96 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044da85 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x000000000044c8b1 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x0000000000459c8d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044c89d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x00000000004263a8 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046ce39 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000475f5c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x00000000004710fa : dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000407b5f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000041332e : dec dword ptr [rax - 0x77] ; retf
0x0000000000477f8c : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000463284 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000412ca9 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000477eed : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046e27f : dec dword ptr [rax - 0x77] ; retf 0xc148
0x000000000046ad23 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000481b9a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x481bb0 ; ret
0x0000000000402b7c : dec dword ptr [rax - 0x7d] ; ret
0x0000000000457a91 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045617b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000000004080ab : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000459d64 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048e177 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040fcdc : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x0000000000402588 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044eb10 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043730c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000047715d : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048eb74 : dec dword ptr [rax - 9] ; ret
0x000000000045b9e5 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x00000000004a5bff : dec dword ptr [rax] ; push -3 ; jmp rax
0x0000000000462f64 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047cc36 : dec dword ptr [rbp + rcx*4 + 0x2d] ; retf 0x28e
0x0000000000464b05 : dec dword ptr [rbp + rcx*4 + 0x35] ; retf
0x00000000004691ad : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004548ed : dec dword ptr [rbp - 0x77] ; retf
0x000000000045d7b6 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004261d3 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400fe4 : dec dword ptr [rbx + 0x2baf7115] ; add bh, dh ; ret 0
0x0000000000424e3d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000473088 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047261b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048c7a8 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048c7c6 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048c827 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x00000000004617a3 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000462ebf : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c4a9 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048ae1a : dec dword ptr [rcx + 0x39] ; retf
0x000000000048c832 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046c645 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046c1c7 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046e96e : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x00000000004044ed : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000048c7fb : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048c7f0 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047c725 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x0000000000481abd : dec dword ptr [rcx + rcx*4 + 0x2d] ; ret
0x000000000045b66a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x0000000000452579 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000045b7c1 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045ba9f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045ee56 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046e1a3 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041df5c : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000492276 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004895a7 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000041059f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000461707 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c7f0 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x0000000000406af1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d190 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046c194 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041e2f6 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000046150f : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000461a0b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x0000000000496f3f : dec dword ptr [rdi - 0x64] ; sti ; lcall [rdx] ; pushfq ; sti ; call rdx
0x000000000045401b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000045667f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004498e0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460cef : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d8ea : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000461477 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004233cc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000041a8cb : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000049319b : dec dword ptr [rdx + 0x7cfff713] ; adc esi, edi ; jmp qword ptr [rax]
0x000000000045c868 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000445891 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004b0e89 : div ah ; jmp qword ptr [rbx]
0x0000000000480e88 : div bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443ab2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000473da6 : div byte ptr [rbp - 3] ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000047e855 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045bbe1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x45bbf9 ; ret
0x00000000004546b2 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x00000000004671f6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x00000000004711b6 : div ebp ; mov rbp, rax ; jmp 0x471185
0x000000000044b718 : div ecx ; mov eax, eax ; ret
0x000000000044b6ff : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004711b5 : div r13 ; mov rbp, rax ; jmp 0x471186
0x00000000004671f5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042e3d7 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e7b0 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000449a54 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004838eb : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000044574e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044588e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004761e0 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042e1b7 : enter -0x73b, 0x77 ; ret
0x0000000000407a17 : enter -0x76b3, -0x19 ; jmp 0x4079ec
0x000000000047e8ba : enter -0x76b8, -0x38 ; ret
0x0000000000465a3f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000042eb84 : enter -2, -1 ; ret
0x0000000000494d3d : enter -7, 0x20 ; retf 0xfff9
0x000000000049e21c : enter 0, 0 ; retf
0x00000000004a2270 : enter 0, 0 ; retf 0
0x000000000049f3c8 : enter 0x10, 0 ; retf
0x000000000047074c : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x470726
0x00000000004432d9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046d07c : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000004846b1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000443d1e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000042873d : enter 0x31c3, -0x40 ; ret
0x000000000044a040 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004b11c4 : enter 0x58, 0 ; cli ; call qword ptr [rax]
0x00000000004a971c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049ebc8 : enter 0xa, 0 ; retf
0x000000000049efc8 : enter 0xd, 0 ; retf
0x000000000042fe26 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000442ca1 : enter 0xf66, -0x15 ; ret
0x00000000004a2470 : enter 1, 0 ; retf 1
0x000000000049f780 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a2670 : enter 2, 0 ; retf 2
0x00000000004a2870 : enter 3, 0 ; retf 3
0x00000000004a2a70 : enter 4, 0 ; retf 4
0x00000000004a2c70 : enter 5, 0 ; retf 5
0x00000000004a2e70 : enter 6, 0 ; retf 6
0x00000000004a3070 : enter 7, 0 ; retf 7
0x00000000004a3270 : enter 8, 0 ; retf 8
0x00000000004a3470 : enter 9, 0 ; retf 9
0x000000000048d293 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000411fd8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411aa6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000045b595 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x00000000004671e3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000426680 : fadd qword ptr [rdx + rax] ; cmovne rax, rdx ; ret
0x000000000046da5d : fbld tbyte ptr [rbx - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x000000000042f971 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000490864 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8d58 : fcmovb st(0), st(3) ; ret
0x0000000000443e3b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045fed6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004b50d4 : fcom dword ptr [rdi + 0x35c80000] ; std ; jmp qword ptr [rcx]
0x000000000048d299 : fcomi st(3) ; ret
0x00000000004127c9 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004167a6 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044d921 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a9ad9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a7d40 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000488598 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048867f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000494ca9 : fdiv st(1), st(0) ; call qword ptr [rax + 0x20fff9de]
0x0000000000494ce9 : fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000494c89 : fdiv st(1), st(0) ; call rax
0x000000000048aee9 : fdiv st(3) ; ret
0x00000000004afa89 : fdivp st(0) ; call qword ptr [rax]
0x0000000000494cad : fdivp st(1) ; jmp qword ptr [rax]
0x0000000000494ccd : fdivp st(1) ; jmp rax
0x0000000000494ce1 : fdivr st(1) ; call qword ptr [rax]
0x00000000004a7095 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000449a58 : fdivr st(7) ; ret
0x00000000004793f2 : ffreep st(6) ; and al, 0x5f ; add al, ch ; retf
0x0000000000411338 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000004727c3 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x000000000045733d : fiadd dword ptr [rcx] ; add byte ptr [rax], al ; call 0x403e36
0x00000000004145ca : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000004a9926 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000004881f5 : fidivr dword ptr [rax + 1] ; ret
0x0000000000465fd2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x00000000004149ea : fild word ptr [rbx + 0x5de820e5] ; retf
0x00000000004259db : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041bd6c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000458829 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480e77 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x0000000000466b6d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000004868e4 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000466b32 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042cf06 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046d4ed : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000406cd4 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x000000000041b316 : fimul dword ptr [rbx] ; sub al, byte ptr [rax] ; ret
0x00000000004541bf : fimul word ptr [rax + 1] ; ret
0x000000000048453c : fimul word ptr [rbp + 0x11] ; retf
0x00000000004844fe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x484558
0x00000000004882fe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x488358
0x0000000000423b21 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41fd66
0x000000000044ce1f : fistp qword ptr [rax + 1] ; syscall
0x00000000004187ae : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000004722f0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000485a1e : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a3c
0x000000000045bdf7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004834f1 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000004679bc : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f646 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004780be : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c6c0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000048350b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000458507 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d764 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000422fbb : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004080ce : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000405491 : fisttp qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045b15a : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480e82 : fisttp word ptr [rax - 0x77] ; ret 0x1de8
0x0000000000401ad3 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000048358f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044d0dd : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x0000000000441d9d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042fd41 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fa41 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425a7b : fld dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000483804 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7d81 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000443762 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x00000000004437c2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042dde9 : fldenv [rsi + 0xf] ; je 0x42de46 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042e0c7 : fldenv [rsi + 0xf] ; je 0x42e124 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042fdc1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dce1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000458213 : fldl2t ; retf 0xfffd
0x00000000004699dc : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004845a4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041ce6f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000449d27 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000414238 : fmul dword ptr [rax - 0x77] ; ret
0x00000000004103b1 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489af4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044f9cc : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000477160 : fmul dword ptr [rcx + 0x21] ; ret
0x000000000046a3c0 : fmul dword ptr [rdi] ; ret
0x0000000000486d82 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048f12e : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004274f9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043ba1f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000460acf : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045b358 : fmul qword ptr [rdi] ; ret 0xc389
0x000000000048f6e2 : fmulp st(4) ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000443760 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004599bd : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x459984
0x00000000004a95ca : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040fe29 : fpatan ; ret
0x000000000042fb41 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a7a67 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7de0 : fstp st(0) ; ret 0xde5d
0x00000000004a6fab : fstp st(3), st(0) ; retf 0xeb83
0x00000000004adcd4 : fsub dword ptr [rbx] ; add byte ptr [rax], al ; pop rax ; retf 0xfff6
0x000000000044ca48 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000044cad8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042fe41 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004445c4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000049520c : fsub qword ptr [rbx] ; cli ; ljmp [rbx - 6] ; call qword ptr [rdx]
0x00000000004a9398 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x0000000000449e6b : fsub qword ptr [rsi + 0xf] ; jmp 0x449e37
0x000000000042fc41 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000442dbc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000044d084 : fsubr st(3) ; ret 0xf66
0x00000000004a9ab8 : fucom st(5) ; loop 0x4a9b11 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000041b137 : fucom st(7) ; sub dword ptr [rax], eax ; ret
0x000000000047a2f1 : fucomi st(3) ; ret 0x1f0f
0x00000000004073df : fucomip st(0) ; ret
0x0000000000473cdf : fucomip st(0) ; retf
0x000000000048b591 : fucomip st(1) ; ret
0x00000000004a90fe : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494c61 : fyl2xp1 ; call qword ptr [rax]
0x0000000000494c81 : fyl2xp1 ; call rax
0x000000000044e141 : hlt ; call r15
0x00000000004a7e68 : hlt ; jmp 0x4a7e3d
0x00000000004b0e8a : hlt ; jmp qword ptr [rbx]
0x00000000004b3db2 : hlt ; jmp qword ptr [rcx]
0x000000000043774a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004323fe : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044c50e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449563 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a5a : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000461c48 : hlt ; push rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000494f09 : hlt ; stc ; jmp qword ptr [rax]
0x00000000004a7fa3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004952d4 : hlt ; sub bh, dl ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x0000000000449567 : hlt ; sub eax, edx ; ret
0x000000000045ee5c : idiv bh ; call rax
0x00000000004600a4 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045fbb6 : idiv bh ; jmp qword ptr [rax]
0x00000000004ad556 : idiv bh ; retf
0x0000000000403d06 : idiv byte ptr [rdi + 1] ; call 8
0x0000000000454016 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000049317a : idiv edi ; adc al, 0x14 ; idiv edi ; cmc ; adc esi, edi ; call rsi
0x000000000049315a : idiv edi ; adc byte ptr [rbx], dl ; idiv edi ; ret 0xf712
0x0000000000493172 : idiv edi ; add edx, dword ptr [rbx] ; idiv edi ; ret 0xf712
0x000000000045f176 : idiv edi ; call qword ptr [rax]
0x000000000049317e : idiv edi ; cmc ; adc esi, edi ; call rsi
0x000000000046012a : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045f05e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac60
0x000000000046bb61 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000492952 : idiv edi ; in al, dx ; or al, 0xf7 ; call rsp
0x000000000046adbd : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049315e : idiv edi ; ret 0xf712
0x000000000049318a : idiv edi ; ret 0xf713
0x0000000000405a67 : imul al ; ret
0x000000000041992f : imul al ; retf
0x0000000000478b87 : imul al ; sti ; js 0x478b8c ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004480c1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000042b337 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x00000000004694a2 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x000000000042ad37 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000004743b3 : imul ebx, dword ptr [rsi], 0x39480024 ; ret
0x000000000042c097 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042d277 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x000000000042aa37 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ad6af : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000406c84 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000495995 : imul edi, edx, 0xfa6bd0ff ; jmp rax
0x000000000042a437 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x000000000042a137 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000429e37 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x000000000041a33e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044753c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004adae0 : in al, 0x21 ; add byte ptr [rax], al ; in al, dx ; ret 0xfff6
0x000000000041bdc8 : in al, 0x29 ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004a93e1 : in al, 0x4c ; pop rax ; retf
0x000000000044424c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044f7a3 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000045f750 : in al, 0xf ; lahf ; ret
0x000000000043772a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044b1de : in al, 0xf3 ; ret
0x00000000004559bc : in al, 0xfa ; inc dword ptr [rcx - 0x77] ; ret
0x000000000041428e : in al, 5 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000412f29 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rbp ; ret
0x000000000042272b : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rbx ; retf
0x0000000000452f30 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000405094 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x4a1
0x000000000042458b : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000045fbf4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045fa31 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004b0c24 : in al, dx ; cld ; stc ; jmp qword ptr [rdx]
0x0000000000416b61 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004323fa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437b2a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000492954 : in al, dx ; or al, 0xf7 ; call rsp
0x0000000000420e5f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042d2f4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004adae4 : in al, dx ; ret 0xfff6
0x00000000004a95cd : in al, dx ; retf 0xae32
0x000000000048de79 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a8f4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a94fe : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9491 ; ret 0x48f
0x00000000004a94fd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9492 ; ret 0x48f
0x000000000044c7a6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004a7c03 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000484862 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6e99 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c3ba : in eax, 0x83 ; call qword ptr [rcx]
0x00000000004649bd : in eax, 0xdf ; loopne 0x46494e ; ret
0x00000000004a9ab9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a7c5a : in eax, 0xe5 ; retf 0x2a91
0x0000000000400b37 : in eax, 0xe8 ; ret
0x0000000000474953 : in eax, 0xf ; je 0x474978 ; add rax, 2 ; ret
0x000000000044b699 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004377aa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000494f19 : in eax, 0xf9 ; call rax
0x00000000004a8f81 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000404e7d : in eax, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000042687b : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000467f68 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x000000000046b0f8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x0000000000473e2b : in eax, dx ; je 0x473e78 ; mov rdi, rbp ; call 0x450918
0x000000000044dbfa : in eax, dx ; jne 0x44dc17 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044e765 : in eax, dx ; jne 0x44e78f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044e798 : in eax, dx ; jne 0x44e7e8 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044e7c4 : in eax, dx ; jne 0x44e848 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049077c : in eax, dx ; jne 0x490767 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004908af : in eax, dx ; jne 0x490891 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490b02 : in eax, dx ; jne 0x490aef ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449d82 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000043220a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437baa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000482cd7 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000418552 : in eax, dx ; ret
0x00000000004a79d8 : in eax, dx ; retf
0x0000000000449ed2 : in eax, dx ; sub rax, 1 ; ret
0x000000000044a1e8 : inc bl ; cmp dl, 1 ; jb 0x44a1fa ; mov byte ptr [rdi], cl ; ret
0x0000000000418b42 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044dd8c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x000000000045bbe5 : inc byte ptr [rbx] ; je 0x45bbf5 ; ret
0x000000000047f2f8 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494deb : inc dword ptr [rax + 0x10fffa07] ; cli ; stc ; call rax
0x0000000000494f8b : inc dword ptr [rax + 0x2e] ; cli ; call rsi
0x0000000000495163 : inc dword ptr [rax + 0x32] ; cli ; call rax
0x0000000000495483 : inc dword ptr [rax + 0x55] ; cli ; call rax
0x0000000000494d8b : inc dword ptr [rax + 0x58fff9ce] ; cli ; stc ; jmp qword ptr [rax]
0x000000000049565b : inc dword ptr [rax + 0x59] ; cli ; call rax
0x0000000000494e1f : inc dword ptr [rax + 1] ; cli ; jmp qword ptr [rax]
0x0000000000494ef3 : inc dword ptr [rax - 0x12] ; stc ; call qword ptr [rax - 0x1f000611]
0x0000000000494c4b : inc dword ptr [rax - 0x21] ; stc ; call rax
0x0000000000494c47 : inc dword ptr [rax - 0x23] ; stc ; inc dword ptr [rax - 0x21] ; stc ; call rax
0x0000000000494cdf : inc dword ptr [rax - 0x28] ; stc ; call qword ptr [rax]
0x0000000000494c77 : inc dword ptr [rax - 0x2b] ; stc ; jmp qword ptr [rax]
0x0000000000494f03 : inc dword ptr [rax - 0x2f00060d] ; hlt ; stc ; jmp qword ptr [rax]
0x0000000000494f17 : inc dword ptr [rax - 0x2f00061b] ; out 0xf9, al ; jmp qword ptr [rax]
0x0000000000494d7b : inc dword ptr [rax - 0x37] ; stc ; call qword ptr [rax - 0x1f000636]
0x0000000000494d27 : inc dword ptr [rax - 0x3e] ; stc ; call qword ptr [rax - 0x1f00063d]
0x0000000000494ecf : inc dword ptr [rax - 0x3f000621] ; jrcxz 0x494ed8 ; call qword ptr [rax]
0x0000000000495a5b : inc dword ptr [rax - 0x3f] ; cli ; call qword ptr [rax - 0x1f00053e]
0x0000000000495a8b : inc dword ptr [rax - 0x44] ; cli ; call rax
0x0000000000494a4f : inc dword ptr [rax - 0x7d] ; stc ; push qword ptr [rax] ; test cl, bh ; jmp qword ptr [rax]
0x00000000004a48b7 : inc dword ptr [rax - 0x7f00034c] ; mov ah, 0xfc ; jmp qword ptr [rax]
0x000000000046b84d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x00000000004600e5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000461719 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004600a6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000044b63f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000430357 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000494ebf : inc dword ptr [rax] ; add dl, bh ; call rax
0x0000000000495b2f : inc dword ptr [rax] ; and bh, bl ; call qword ptr [rax]
0x0000000000494c7f : inc dword ptr [rax] ; fyl2xp1 ; call rax
0x00000000004959a3 : inc dword ptr [rax] ; jb 0x4959a5 ; call qword ptr [rax]
0x0000000000494a3b : inc dword ptr [rax] ; jl 0x494a40 ; push qword ptr [rax + 0x7d] ; stc ; jmp rax
0x0000000000495473 : inc dword ptr [rax] ; push rdi ; cli ; call qword ptr [rax + 0x20fffa56]
0x0000000000495a9b : inc dword ptr [rax] ; sbb al, 0xfb ; call qword ptr [rax]
0x0000000000495ad7 : inc dword ptr [rax] ; sbb eax, 0x1d10fffb ; sti ; jmp qword ptr [rax]
0x0000000000494a5f : inc dword ptr [rax] ; xchg ecx, edi ; push rax ; xchg ecx, edi ; jmp rax
0x0000000000495153 : inc dword ptr [rax] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa33]
0x0000000000494f7b : inc dword ptr [rax] ; xor dl, bh ; call qword ptr [rax + 0x20fffa2f]
0x0000000000458504 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004a5ce3 : inc dword ptr [rbp + 0x38fffd7a] ; jno 0x4a5cf0 ; jmp qword ptr [rax]
0x0000000000407a13 : inc dword ptr [rbp + 0x4dc879c0] ; mov edi, esp ; jmp 0x4079f0
0x000000000047bd6f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004826ec : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000404a80 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400927 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040f7fb : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e3e9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000048c5e3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x0000000000460064 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x0000000000464788 : inc dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004647b1 : inc dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x83e8
0x000000000044b6fd : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044b66b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f2f9 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461432 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046e1a9 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000488124 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000462071 : inc dword ptr [rcx + 0xf] ; mov esi, 0x3d8d48c7 ; ret
0x0000000000481032 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x000000000041482b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x0000000000470bf1 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x470bc7
0x0000000000494af3 : inc dword ptr [rcx - 0x4c] ; stc ; call rcx
0x00000000004559be : inc dword ptr [rcx - 0x77] ; ret
0x0000000000458ca6 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000402983 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046ef66 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044da77 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000046adbf : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004664cf : inc dword ptr [rcx] ; retf
0x00000000004950ff : inc dword ptr [rdi + rbp - 6] ; call rsp
0x0000000000495037 : inc dword ptr [rdx + 0x30] ; cli ; call rdx
0x000000000049552f : inc dword ptr [rdx + 0x57] ; cli ; call rdx
0x000000000049551f : inc dword ptr [rdx] ; pop rcx ; cli ; call qword ptr [rdx + 0x22fffa58]
0x0000000000494ab3 : inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; stc ; call rdx
0x0000000000495027 : inc dword ptr [rdx] ; xor bh, dl ; call qword ptr [rdx + 0x22fffa31]
0x000000000044257d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000494f93 : inc dword ptr [rsi + 0x34] ; cli ; call rsi
0x00000000004955f7 : inc dword ptr [rsi + rdx*2 - 6] ; call rsp
0x0000000000494b3b : inc dword ptr [rsi - 0x4b] ; stc ; call rsi
0x000000000048e1c2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x0000000000494b47 : inc dword ptr [rsi] ; mov bh, 0xf9 ; jmp qword ptr [rsi + 0x27fff9b7]
0x00000000004954bb : inc dword ptr [rsi] ; push rsi ; cli ; call qword ptr [rsi + 0x26fffa55]
0x0000000000495b23 : inc eax ; and ebx, edi ; jmp rax
0x0000000000495993 : inc eax ; imul edi, edx, 0xfa6bd0ff ; jmp rax
0x0000000000494ed3 : inc eax ; jrcxz 0x494ed4 ; call qword ptr [rax]
0x0000000000495a7b : inc eax ; retf
0x0000000000495acb : inc eax ; sbb al, 0xfb ; call rax
0x000000000042ecac : inc ebp ; std ; xlatb ; ret 0xe883
0x00000000004733ec : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000449a59 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000494aef : inc ecx ; mov bl, 0xf9 ; inc dword ptr [rcx - 0x4c] ; stc ; call rcx
0x00000000004267e0 : insb byte ptr [rdi], dx ; add al, byte ptr [r8] ; cmovne rax, rdx ; ret
0x000000000042da74 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048ea1b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x48ea37
0x0000000000495210 : insb byte ptr [rdi], dx ; and edi, edx ; call qword ptr [rdx]
0x00000000004647b0 : insb byte ptr [rdi], dx ; inc dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x83e8
0x00000000004a9abe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000045e7f5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004b0494 : insb byte ptr [rdi], dx ; retf
0x00000000004a8e86 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000494a11 : insb byte ptr [rdi], dx ; stc ; jmp qword ptr [rax + 0x10fff96d]
0x0000000000456676 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000040c20f : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042713b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000485467 : insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000490932 : insd dword ptr [rdi], dx ; js 0x4909af ; ret 0x8b48
0x00000000004a9abf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a7e6d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000048f92f : insd dword ptr [rdi], dx ; retf 0x22
0x0000000000494a15 : insd dword ptr [rdi], dx ; stc ; call qword ptr [rax]
0x00000000004a8d7f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004541d5 : int 0x19
0x000000000046949a : int 0x80
0x0000000000450abb : int 0xb4
0x0000000000458a46 : int 0xf
0x00000000004267b6 : int1 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000474376 : int1 ; call rbx
0x0000000000459882 : int1 ; je 0x459a31 ; mov rdx, rax ; jmp 0x459849
0x0000000000459c87 : int1 ; je 0x459a31 ; mov rdx, rax ; jmp 0x459c4e
0x0000000000459cfe : int1 ; je 0x459a31 ; mov rdx, rax ; jmp 0x459cc5
0x000000000044a16b : int1 ; jl 0x44a1bc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a18c : int1 ; jl 0x44a1dd ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a19f : int1 ; jl 0x44a1f0 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a274 : int1 ; jl 0x44a2c5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a2cc : int1 ; jl 0x44a31d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000044a369 : int1 ; jl 0x44a3ba ; adc dword ptr [rsi + 7], edx ; ret
0x000000000044b5f5 : int1 ; jmp rcx
0x000000000047314b : int1 ; jne 0x473146 ; lea eax, [rdx + rdi] ; ret
0x000000000047e7f7 : int1 ; jne 0x47e7d4 ; ret
0x00000000004a8d44 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000044b719 : int1 ; mov eax, eax ; ret
0x000000000043759b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004329cf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000449533 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000044b700 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a9496 : int1 ; ret 0x5803
0x0000000000449537 : int1 ; sub eax, edx ; ret
0x0000000000495a89 : iretd ; cli ; inc dword ptr [rax - 0x44] ; cli ; call rax
0x0000000000400926 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000473a04 : iretd ; mov rdx, r13 ; mov rsi, r12 ; call 0x400441
0x00000000004080dd : ja 0x4080be ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000426655 : ja 0x42667b ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000426655 : ja 0x42667d ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000043b4a3 : ja 0x43b4a7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000447687 : ja 0x44768d ; ret
0x00000000004476a3 : ja 0x4476ad ; mov dword ptr [rdi], ecx ; ret
0x00000000004476e4 : ja 0x4476f3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000447769 : ja 0x44777d ; ret
0x00000000004477bf : ja 0x4477d7 ; ret
0x0000000000447841 : ja 0x44785d ; ret
0x0000000000447ca7 : ja 0x447cb1 ; lea rax, [rdi + 2] ; ret
0x0000000000447cc3 : ja 0x447cd1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000447d14 : ja 0x447d27 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000447df9 : ja 0x447e11 ; lea rax, [rdi + 0x10] ; ret
0x0000000000447e6f : ja 0x447e8b ; lea rax, [rdi + 0x14] ; ret
0x0000000000447ef1 : ja 0x447f11 ; lea rax, [rdi + 0x18] ; ret
0x000000000044a474 : ja 0x44a4a5 ; jb 0x44a486 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044a7d4 : ja 0x44a81a ; jb 0x44a7e6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044ac24 : ja 0x44ac82 ; jb 0x44ac36 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044b1f3 : ja 0x44b210 ; jb 0x44b1ff ; mov byte ptr [rdi], cl ; ret
0x000000000044b361 : ja 0x44b398 ; jb 0x44b370 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044b529 : ja 0x44b56e ; jb 0x44b538 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044c50c : ja 0x44c538 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044cacb : ja 0x44cad3 ; ret
0x000000000044cb19 : ja 0x44cb23 ; ret
0x000000000044cd24 : ja 0x44cd83 ; ret
0x000000000044cdba : ja 0x44cdc3 ; ret
0x000000000044cdf7 : ja 0x44ce53 ; ret
0x000000000044ce8d : ja 0x44ce9b ; ret
0x000000000044cebd : ja 0x44cecb ; ret
0x000000000044d0c7 : ja 0x44d10b ; ret
0x000000000044d13d : ja 0x44d14b ; ret
0x000000000044d896 : ja 0x44d8a3 ; ret
0x000000000044fc80 : ja 0x44fcad ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004509a5 : ja 0x4509f9 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045c2d3 : ja 0x45c2e3 ; ret
0x00000000004671e2 : ja 0x4671c5 ; mov eax, r9d ; ret
0x0000000000474e39 : ja 0x474e07 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004756bb : ja 0x4756c3 ; ret
0x000000000047570f : ja 0x47571b ; ret
0x0000000000475a30 : ja 0x475a5b ; ret
0x0000000000478c60 : ja 0x478c5f ; dec dword ptr [rax - 0x77] ; ret
0x0000000000482f8e : ja 0x482fe0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048dd7d : ja 0x48dd86 ; sbb eax, eax ; ret
0x0000000000494a31 : ja 0x494a2e ; jmp qword ptr [rax]
0x00000000004a9504 : ja 0x4a948b ; ret 0x48f
0x00000000004b30bd : ja 0x4b30c5 ; add al, al ; adc edi, esp ; jmp qword ptr [rax]
0x000000000041a88d : jae 0x41a8b5 ; movzx eax, byte ptr [rax] ; ret
0x000000000044ca3d : jae 0x44ca42 ; ret
0x000000000044dacd : jae 0x44dad2 ; ret
0x000000000044dafd : jae 0x44db02 ; ret
0x000000000044db2d : jae 0x44db32 ; ret
0x000000000044f1d0 : jae 0x44f1d5 ; ret
0x000000000044f1fd : jae 0x44f202 ; ret
0x000000000044f504 : jae 0x44f4f3 ; ret
0x000000000045831f : jae 0x4582ac ; retf 0xb941
0x000000000045c07e : jae 0x45c0c5 ; xor eax, eax ; pop rbx ; ret
0x000000000047563d : jae 0x475642 ; ret
0x000000000047fa7b : jae 0x47fa25 ; xor eax, eax ; ret
0x00000000004881f4 : jae 0x4881d7 ; mov eax, 1 ; ret
0x00000000004886ad : jae 0x4886b2 ; ret
0x000000000048ed06 : jae 0x48ed19 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000494a25 : jae 0x494a22 ; call rax
0x00000000004a7ac2 : jae 0x4a7aa4 ; jo 0x4a7b40 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a895e : jae 0x4a8939 ; push rsi ; pop rdx ; je 0x4a892e ; ret 0xacfc
0x00000000004ad40a : jae 0x4ad418 ; ret
0x0000000000412686 : jb 0x4126b7 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041fd17 : jb 0x41fd01 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004309da : jb 0x4309ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b2a : jb 0x430b3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c7a : jb 0x430c8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430dca : jb 0x430dda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f1a : jb 0x430f2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043106a : jb 0x43107a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311ba : jb 0x4311ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043130a : jb 0x43131a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043145a : jb 0x43146a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004315aa : jb 0x4315ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316fa : jb 0x43170a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043184a : jb 0x43185a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043199a : jb 0x4319aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aea : jb 0x431afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c3a : jb 0x431c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004333aa : jb 0x4333ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004334fa : jb 0x43350a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043364a : jb 0x43365a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043379a : jb 0x4337aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004338ea : jb 0x4338fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433a3a : jb 0x433a4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433b8a : jb 0x433b9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433cda : jb 0x433cea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433e2a : jb 0x433e3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433f7a : jb 0x433f8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004340ca : jb 0x4340da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043421a : jb 0x43422a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043436a : jb 0x43437a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004344ba : jb 0x4344ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043460a : jb 0x43461a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b07e : jb 0x43b08a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044a1d5 : jb 0x44a1e4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000044a1e0 : jb 0x44a1f3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000044a1ed : jb 0x44a1f5 ; mov byte ptr [rdi], cl ; ret
0x000000000044a3f4 : jb 0x44a3fd ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a476 : jb 0x44a484 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044a475 : jb 0x44a485 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044a7d6 : jb 0x44a7e4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044ac26 : jb 0x44ac34 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044b1f5 : jb 0x44b1fd ; mov byte ptr [rdi], cl ; ret
0x000000000044b363 : jb 0x44b36e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044b52b : jb 0x44b536 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004599be : jb 0x459a2c ; mov rdx, rax ; jmp 0x459983
0x0000000000484e94 : jb 0x484ebd ; add cl, ch ; retf
0x00000000004959a5 : jb 0x4959a3 ; call qword ptr [rax]
0x00000000004a9118 : jb 0x4a9172 ; call 0x4c14bad7
0x00000000004019b4 : jbe 0x4019c8 ; syscall
0x0000000000411681 : jbe 0x411641 ; mov r11d, 1 ; jmp 0x411656
0x00000000004128df : jbe 0x412932 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422313 : jbe 0x422343 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042657b : jbe 0x426583 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042dee6 : jbe 0x42df25 ; add rax, rdi ; ret
0x000000000042def6 : jbe 0x42df27 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042df06 : jbe 0x42df27 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042df16 : jbe 0x42df27 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042e327 : jbe 0x42e398 ; add rax, rdi ; vzeroupper ; ret
0x00000000004593f2 : jbe 0x4593ec ; ret
0x000000000045e379 : jbe 0x45e339 ; mov r11d, 1 ; jmp 0x45e34e
0x0000000000481b9f : jbe 0x481bab ; ret
0x00000000004a939c : jbe 0x4a936f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a939b : jbe 0x4a9370 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004afc51 : jbe 0x4afc4e ; jmp qword ptr [rbx]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a89 : je 0x400aa0 ; pop rbp ; mov edi, 0x6bac10 ; jmp rax
0x0000000000400acb : je 0x400ae0 ; pop rbp ; mov edi, 0x6bac10 ; jmp rax
0x000000000040225a : je 0x402260 ; call rsi
0x0000000000402356 : je 0x40235c ; call rax
0x000000000040375b : je 0x403761 ; call rax
0x0000000000407cae : je 0x407cbe ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000041443d : je 0x414468 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000414998 : je 0x41499f ; ret
0x000000000041656c : je 0x4165a3 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000418701 : je 0x418730 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x414999
0x0000000000418b85 : je 0x418b93 ; ret
0x0000000000424982 : je 0x4249ae ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000424ad1 : je 0x424b00 ; add dh, dh ; ret 0xf02
0x0000000000424e73 : je 0x424e86 ; lea rax, [rdx - 0x10] ; ret
0x0000000000425080 : je 0x42500d ; retf 0x4c89
0x000000000042507f : je 0x42500e ; retf 0x4c89
0x00000000004265e2 : je 0x4265ad ; ret
0x000000000042ccd3 : je 0x42cc9d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042dbba : je 0x42dbc2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042ddec : je 0x42de43 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042e0ca : je 0x42e121 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ea95 : je 0x42eaa7 ; sbb eax, eax ; or eax, 1 ; ret
0x00000000004300b7 : je 0x4300c1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000432dbf : je 0x432dee ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000432e15 : je 0x432e44 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000432e14 : je 0x432e45 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000043faf3 : je 0x43fabd ; lea r10, [r10 + r9] ; jmp r10
0x0000000000441683 : je 0x44164d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000442e61 : je 0x442e79 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000443944 : je 0x44394e ; bsf eax, edx ; ret
0x0000000000443944 : je 0x44394f ; bsf eax, edx ; ret
0x00000000004439ed : je 0x443a05 ; bsf rax, rdx ; ret
0x00000000004439ed : je 0x443a06 ; bsf rax, rdx ; ret
0x000000000044398c : je 0x443a19 ; bsf rax, rdx ; ret
0x0000000000443bbc : je 0x443be5 ; bsf rax, rdx ; ret
0x0000000000443bbc : je 0x443be6 ; bsf rax, rdx ; ret
0x0000000000443b4c : je 0x443bf9 ; bsf rax, rdx ; ret
0x000000000044a503 : je 0x44a524 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044bbae : je 0x44bbbc ; xor eax, eax ; ret
0x000000000044bba9 : je 0x44bbc9 ; cmp eax, 2 ; je 0x44bbc1 ; xor eax, eax ; ret
0x000000000044bbfd : je 0x44bbe3 ; ret
0x000000000044d038 : je 0x44d067 ; mov eax, 0x48 ; syscall
0x000000000044d3f7 : je 0x44d422 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044d95a : je 0x44d961 ; ret
0x000000000044f2d9 : je 0x44f2de ; ret
0x000000000044f33d : je 0x44f342 ; ret
0x000000000044fb8c : je 0x44fb9f ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004508b8 : je 0x4508c3 ; ret
0x00000000004508d4 : je 0x4508e9 ; mov dword ptr [rip + 0x26845c], edx ; pop rbx ; ret
0x0000000000454955 : je 0x454983 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000045510f : je 0x45513e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004553ff : je 0x45542e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000455747 : je 0x455776 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455986 : je 0x4559b5 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455fee : je 0x45601c ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000456b86 : je 0x456bb5 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000457c12 : je 0x457c41 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045870b : je 0x45873a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000458ab3 : je 0x458ae2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000458ef7 : je 0x458f26 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000459332 : je 0x459360 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004598f4 : je 0x459923 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000459883 : je 0x459a30 ; mov rdx, rax ; jmp 0x459848
0x0000000000459c88 : je 0x459a30 ; mov rdx, rax ; jmp 0x459c4d
0x0000000000459cff : je 0x459a30 ; mov rdx, rax ; jmp 0x459cc4
0x0000000000459c23 : je 0x459c52 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045a137 : je 0x45a166 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000045a572 : je 0x45a5a0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045bbe7 : je 0x45bbf3 ; ret
0x000000000045bbe2 : je 0x45bbf8 ; cmp esi, 3 ; je 0x45bbf8 ; ret
0x000000000045beae : je 0x45bebb ; ret
0x0000000000464271 : je 0x4640a4 ; jmp 0x464242
0x000000000046a02c : je 0x46a057 ; and byte ptr [rax + 1], cl ; ret
0x000000000046dcc8 : je 0x46dc73 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000471fc6 : je 0x472016 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000471fc5 : je 0x472017 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000472e1c : je 0x472e23 ; ret
0x0000000000472e39 : je 0x472e46 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472e73 : je 0x472ed5 ; pop rbp ; pop r12 ; ret
0x0000000000472eff : je 0x472f61 ; pop rbp ; pop r12 ; ret
0x000000000047308a : je 0x4730b4 ; or al, 0xeb ; ret 0x5590
0x0000000000473d8b : je 0x473d93 ; ret
0x0000000000473e2c : je 0x473e77 ; mov rdi, rbp ; call 0x450917
0x000000000047436e : je 0x47439d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000474498 : je 0x4744a5 ; test edx, edx ; jne 0x474497 ; ret
0x0000000000474939 : je 0x474959 ; mov cl, dl ; and cl, 0xf ; je 0x474969 ; ret
0x0000000000474940 : je 0x474962 ; ret
0x0000000000474955 : je 0x474976 ; add rax, 2 ; ret
0x000000000047589d : je 0x4758cf ; mov eax, 0x101 ; syscall
0x0000000000475e12 : je 0x475f11 ; xor eax, eax ; leave ; ret
0x000000000047e856 : je 0x47e863 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000048102d : je 0x480f7f ; sub eax, r8d ; ret
0x0000000000485162 : je 0x485176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485668 : je 0x485693 ; or byte ptr [rax + 1], cl ; ret
0x000000000048725d : je 0x4872a2 ; shl rdx, 5 ; add rdx, rax ; jmp 0x487279
0x0000000000487e26 : je 0x487e33 ; ret
0x000000000048ac6d : je 0x48ac98 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d208 : je 0x48d1f2 ; add rsp, 0x18 ; ret
0x000000000048d1f1 : je 0x48d216 ; add rsp, 0x18 ; ret
0x000000000048d298 : je 0x48d278 ; ret
0x000000000048d2d9 : je 0x48d2e6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f5ca : je 0x48f5d3 ; ret
0x000000000048f603 : je 0x48f614 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f619 ; ret
0x000000000048f6da : je 0x48f6e3 ; ret
0x00000000004906f3 : je 0x4906fe ; call rax
0x00000000004952d8 : je 0x495307 ; cli ; jmp rsp
0x00000000004959a9 : je 0x4959a7 ; jmp qword ptr [rax]
0x00000000004a6ecc : je 0x4a6efa ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a7c28 : je 0x4a7bf3 ; xor al, 0xd8 ; ret
0x00000000004a7e67 : je 0x4a7e64 ; jmp 0x4a7e3e
0x00000000004a8962 : je 0x4a892a ; ret 0xacfc
0x00000000004b1d70 : je 0x4b1ddd ; add byte ptr [rax], al ; sbb al, 0xc0 ; cli ; call qword ptr [rdx]
0x0000000000418b82 : jg 0x418bc2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004325b9 : jg 0x43260c ; ret
0x0000000000432600 : jg 0x432650 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000432605 : jg 0x432658 ; retf
0x000000000043263f : jg 0x43268a ; ret
0x000000000043267f : jg 0x4326ca ; retf
0x00000000004327b9 : jg 0x43280c ; ret 0x894c
0x0000000000432800 : jg 0x432850 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000432805 : jg 0x432858 ; retf 0x894c
0x000000000043283f : jg 0x43288a ; ret 0x894c
0x000000000043287b : jg 0x4328c6 ; retf 0x894c
0x0000000000434f89 : jg 0x434fdc ; ret
0x0000000000434fd0 : jg 0x435020 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000434fd5 : jg 0x435028 ; retf
0x000000000043500f : jg 0x43505a ; ret
0x000000000043504f : jg 0x43509a ; retf
0x0000000000435189 : jg 0x4351dc ; ret 0x894c
0x00000000004351d0 : jg 0x435220 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004351d5 : jg 0x435228 ; retf 0x894c
0x000000000043520f : jg 0x43525a ; ret 0x894c
0x000000000043524b : jg 0x435296 ; retf 0x894c
0x0000000000437578 : jg 0x4375c9 ; loope 0x437577 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004375ef : jg 0x43763a ; ret 0xff2
0x0000000000437608 : jg 0x437659 ; loop 0x437607 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043767f : jg 0x4376ca ; ret
0x0000000000437698 : jg 0x4376e9 ; jrcxz 0x437697 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437728 : jg 0x437779 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377a8 : jg 0x4377f9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437828 : jg 0x437879 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004378a8 : jg 0x4378f9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437928 : jg 0x437979 ; call 0x4fc2892a
0x00000000004379a8 : jg 0x4379f9 ; jmp 0x4fc289aa
0x0000000000437a05 : jg 0x437a55 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000437a0f : jg 0x437a5a ; retf 0xff2
0x0000000000437a85 : jg 0x437ad5 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000437a8f : jg 0x437ada ; retf
0x0000000000437b28 : jg 0x437b79 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437ba8 : jg 0x437bf9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437c38 : jg 0x437c89 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437cb8 : jg 0x437d09 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437d2c : jg 0x437d37 ; ret
0x0000000000437d86 : jg 0x437d99 ; ret
0x0000000000437d81 : jg 0x437dd1 ; psllq mm1, qword ptr [rdi] ; jg 0x437d9e ; ret
0x0000000000437df6 : jg 0x437e09 ; ret
0x0000000000437e66 : jg 0x437e79 ; ret
0x0000000000437e61 : jg 0x437eb1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000437ed6 : jg 0x437ee9 ; ret
0x0000000000437ed1 : jg 0x437f21 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437f46 : jg 0x437f59 ; ret
0x0000000000437f41 : jg 0x437f91 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437fb6 : jg 0x437fc9 ; ret
0x0000000000437fb1 : jg 0x438001 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438026 : jg 0x438039 ; ret
0x0000000000438021 : jg 0x438071 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438096 : jg 0x4380a9 ; ret
0x0000000000438091 : jg 0x4380e1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438106 : jg 0x438119 ; ret
0x0000000000438176 : jg 0x438189 ; ret
0x00000000004381e6 : jg 0x4381f9 ; ret
0x00000000004381e1 : jg 0x438231 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438256 : jg 0x438269 ; ret
0x0000000000438251 : jg 0x4382a1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004382c6 : jg 0x4382d9 ; ret
0x00000000004382c1 : jg 0x438311 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438336 : jg 0x438349 ; ret
0x0000000000438331 : jg 0x438381 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004383a6 : jg 0x4383b9 ; ret
0x00000000004383a1 : jg 0x4383f1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043a098 : jg 0x43a0e9 ; loope 0x43a097 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a10f : jg 0x43a15a ; ret 0xff2
0x000000000043a128 : jg 0x43a179 ; loop 0x43a127 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a19f : jg 0x43a1ea ; ret
0x000000000043a1b8 : jg 0x43a209 ; jrcxz 0x43a1b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a248 : jg 0x43a299 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a2c8 : jg 0x43a319 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a348 : jg 0x43a399 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a3c8 : jg 0x43a419 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a448 : jg 0x43a499 ; call 0x4fc2b44a
0x000000000043a4c8 : jg 0x43a519 ; jmp 0x4fc2b4ca
0x000000000043a525 : jg 0x43a575 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043a52f : jg 0x43a57a ; retf 0xff2
0x000000000043a5a5 : jg 0x43a5f5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043a5af : jg 0x43a5fa ; retf
0x000000000043a648 : jg 0x43a699 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043a6c8 : jg 0x43a719 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043a758 : jg 0x43a7a9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043a7d8 : jg 0x43a829 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043a84c : jg 0x43a857 ; ret
0x000000000043a8a6 : jg 0x43a8b9 ; ret
0x000000000043a8a1 : jg 0x43a8f1 ; psllq mm1, qword ptr [rdi] ; jg 0x43a8be ; ret
0x000000000043a916 : jg 0x43a929 ; ret
0x000000000043a986 : jg 0x43a999 ; ret
0x000000000043a981 : jg 0x43a9d1 ; or eax, 0xf7f0ff3 ; ret
0x000000000043a9f6 : jg 0x43aa09 ; ret
0x000000000043a9f1 : jg 0x43aa41 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043aa66 : jg 0x43aa79 ; ret
0x000000000043aa61 : jg 0x43aab1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043aad6 : jg 0x43aae9 ; ret
0x000000000043aad1 : jg 0x43ab21 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ab46 : jg 0x43ab59 ; ret
0x000000000043ab41 : jg 0x43ab91 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043abb6 : jg 0x43abc9 ; ret
0x000000000043abb1 : jg 0x43ac01 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ac26 : jg 0x43ac39 ; ret
0x000000000043ac96 : jg 0x43aca9 ; ret
0x000000000043ad06 : jg 0x43ad19 ; ret
0x000000000043ad01 : jg 0x43ad51 ; add eax, 0xf7f0ff3 ; ret
0x000000000043ad76 : jg 0x43ad89 ; ret
0x000000000043ad71 : jg 0x43adc1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ade6 : jg 0x43adf9 ; ret
0x000000000043ade1 : jg 0x43ae31 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ae56 : jg 0x43ae69 ; ret
0x000000000043ae51 : jg 0x43aea1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043aec6 : jg 0x43aed9 ; ret
0x000000000043aec1 : jg 0x43af11 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043b024 : jg 0x43b035 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043b038 : jg 0x43b049 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043b4aa : jg 0x43b4a6 ; ret
0x0000000000447756 : jg 0x447761 ; ret
0x0000000000447766 : jg 0x447774 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044777a : jg 0x447789 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000447799 : jg 0x4477a7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004477a9 : jg 0x4477b7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004477b9 : jg 0x4477ca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004477da : jg 0x4477e9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004477fa : jg 0x447809 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044781a : jg 0x447829 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044783a : jg 0x44784c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044787d : jg 0x44788f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044789d : jg 0x4478af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004478bb : jg 0x4478cb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004478db : jg 0x4478eb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004478fb : jg 0x44790b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044791b : jg 0x44792b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000447de6 : jg 0x447df5 ; lea rax, [rdi + 0xf] ; ret
0x0000000000447df6 : jg 0x447e08 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000447e29 : jg 0x447e3b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000447e49 : jg 0x447e5b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000447f6f : jg 0x447fcf ; or eax, 0x1c478d48 ; ret
0x000000000044a1b7 : jg 0x44a1c7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044a1ad : jg 0x44a1cd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000044a644 : jg 0x44a67c ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044a712 : jg 0x44a74a ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044a7ea : jg 0x44a7fb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044a97b : jg 0x44a9a5 ; vzeroupper ; ret
0x000000000044aa22 : jg 0x44aa2c ; vzeroupper ; ret
0x000000000044aaae : jg 0x44aad8 ; vzeroupper ; ret
0x000000000044ab3e : jg 0x44ab48 ; vzeroupper ; ret
0x000000000044ac52 : jg 0x44ac63 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044ae36 : jg 0x44ae60 ; vzeroupper ; ret
0x000000000044ae35 : jg 0x44ae61 ; vzeroupper ; ret
0x000000000044aefc : jg 0x44af06 ; vzeroupper ; ret
0x000000000044aefb : jg 0x44af07 ; vzeroupper ; ret
0x000000000044afcf : jg 0x44aff9 ; vzeroupper ; ret
0x000000000044afce : jg 0x44affa ; vzeroupper ; ret
0x000000000044b0a2 : jg 0x44b0ac ; vzeroupper ; ret
0x000000000044b0a1 : jg 0x44b0ad ; vzeroupper ; ret
0x000000000044b10c : jg 0x44b117 ; ret
0x000000000044b15c : jg 0x44b167 ; ret
0x000000000044b1d3 : jg 0x44b21f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000044b264 : jg 0x44b272 ; vzeroupper ; ret
0x000000000044b2b4 : jg 0x44b2c2 ; vzeroupper ; ret
0x000000000044b373 : jg 0x44b381 ; vzeroupper ; ret
0x000000000044b3f1 : jg 0x44b3ff ; vzeroupper ; ret
0x000000000044b3f0 : jg 0x44b400 ; vzeroupper ; ret
0x000000000044b451 : jg 0x44b45f ; vzeroupper ; ret
0x000000000044b450 : jg 0x44b460 ; vzeroupper ; ret
0x000000000044b53b : jg 0x44b549 ; vzeroupper ; ret
0x000000000044b549 : jg 0x44b557 ; vzeroupper ; ret
0x000000000044b5a0 : jg 0x44b5dd ; ret 0x2b77
0x000000000044b6bb : jg 0x44b688 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000044b717 : jg 0x44b715 ; int1 ; mov eax, eax ; ret
0x0000000000451866 : jg 0x4517ed ; retf
0x0000000000457508 : jg 0x457495 ; ret 0xdb76
0x0000000000457508 : jg 0x457499 ; ret 0xdb76
0x00000000004603b2 : jg 0x4603cb ; test byte ptr [rip - 0x7c000011], al ; ret
0x000000000046a9a2 : jg 0x46a9bb ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046be1a : jg 0x46be33 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046bf17 : jg 0x46bf30 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000047074d : jg 0x470766 ; add eax, edi ; mov rdx, r8 ; jmp 0x470725
0x000000000047f4e7 : jg 0x47f4f9 ; test rdi, rdi ; jne 0x47f4c8 ; ret
0x000000000048aab8 : jg 0x48aac2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004959fd : jg 0x4959ff ; push qword ptr [rax - 0x5e] ; cli ; call qword ptr [rax]
0x000000000041024a : jge 0x410253 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044dc25 : jge 0x44dc2a ; call r12
0x000000000044dc4d : jge 0x44dc52 ; call r12
0x000000000044e13d : jge 0x44e0ed ; mov r12d, r14d ; call r15
0x000000000044e79d : jge 0x44e7a2 ; call r12
0x000000000044e7c9 : jge 0x44e7ce ; call r12
0x000000000044e7fd : jge 0x44e802 ; call r12
0x000000000044e82d : jge 0x44e832 ; call r12
0x000000000044e855 : jge 0x44e85a ; call r12
0x000000000044e885 : jge 0x44e88a ; call r12
0x000000000048d652 : jge 0x48d64f ; leave ; ret
0x000000000048d7d0 : jge 0x48d7d3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d91c : jge 0x48d919 ; leave ; ret
0x000000000048d968 : jge 0x48d96b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048daf7 : jge 0x48dafa ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dc57 : jge 0x48dc54 ; leave ; ret
0x000000000048dca8 : jge 0x48dcab ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000494a41 : jge 0x494a3e ; jmp rax
0x00000000004a6f2a : jge 0x4a6f0b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a8874 : jge 0x4a88e5 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000400db5 : jl 0x400d4c ; mov eax, 0 ; leave ; ret
0x000000000040132f : jl 0x40135d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000406d86 : jl 0x406db1 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040f778 : jl 0x40f7a3 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000419052 : jl 0x41906e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000420a9b : jl 0x420a95 ; ret 0x7508
0x0000000000421d92 : jl 0x421dc2 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000426740 : jl 0x426795 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000426740 : jl 0x426796 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000043afa4 : jl 0x43aff3 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000043afe0 : jl 0x43b02f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043b1de : jl 0x43b22d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000043b345 : jl 0x43b394 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000043b4a7 : jl 0x43b4f6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000044a16c : jl 0x44a1bb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a18d : jl 0x44a1dc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a1a0 : jl 0x44a1ef ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a275 : jl 0x44a2c4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044a2cd : jl 0x44a31c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000044a36a : jl 0x44a3b9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000044ad20 : jl 0x44ad3f ; cld ; vzeroupper ; ret
0x000000000044dd02 : jl 0x44dd30 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451aad : jl 0x451ab9 ; sbb al, ch ; retf
0x0000000000454241 : jl 0x45426f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000454666 : jl 0x454694 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004565a8 : jl 0x4565d6 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000456b8b : jl 0x456bb5 ; call r15
0x00000000004575da : jl 0x457608 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000458efc : jl 0x458f26 ; call r15
0x0000000000459337 : jl 0x459360 ; call rbx
0x00000000004593ed : jl 0x45941a ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x0000000000459b1d : jl 0x459b47 ; or al, 0xe9 ; ret
0x000000000045a13c : jl 0x45a166 ; call r15
0x000000000045a577 : jl 0x45a5a0 ; call rbx
0x000000000045a62d : jl 0x45a65a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045c4c7 : jl 0x45c4f2 ; and byte ptr [rax + 1], cl ; ret
0x000000000045c93e : jl 0x45c969 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045cc86 : jl 0x45ccb1 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000046866b : jl 0x468698 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000469d55 : jl 0x469d80 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047580f : jl 0x47583d ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047b6e5 : jl 0x47b710 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x00000000004822cd : jl 0x4822f7 ; sbb al, ch ; retf
0x00000000004826f5 : jl 0x482723 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000494a3d : jl 0x494a3e ; push qword ptr [rax + 0x7d] ; stc ; jmp rax
0x00000000004a8a72 : jl 0x4a8ad1 ; leave ; retf
0x00000000004ac024 : jl 0x4abfdc ; cmc ; call rsp
0x00000000004afe78 : jl 0x4afec6 ; add byte ptr [rax], al ; mov dl, 0xf9 ; call qword ptr [rdx]
0x000000000044398e : jle 0x443997 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044398e : jle 0x443998 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044a041 : jle 0x44a07d ; movsxd rax, ecx ; ret
0x000000000045bc32 : jle 0x45bc45 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004a6f22 : jle 0x4a6ebb ; xlatb ; retf 0xa1eb
0x00000000004a8ae5 : jle 0x4a8b20 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004273cd : jmp 0x100c9d19
0x0000000000427476 : jmp 0x100c9dc2
0x00000000004275b6 : jmp 0x100c9f02
0x00000000004276f6 : jmp 0x100ca042
0x0000000000427836 : jmp 0x100ca182
0x0000000000427976 : jmp 0x100ca2c2
0x0000000000427ab6 : jmp 0x100ca402
0x0000000000427bf6 : jmp 0x100ca542
0x0000000000427d36 : jmp 0x100ca682
0x0000000000427e76 : jmp 0x100ca7c2
0x0000000000427fb6 : jmp 0x100ca902
0x00000000004280f6 : jmp 0x100caa42
0x0000000000428236 : jmp 0x100cab82
0x0000000000428376 : jmp 0x100cacc2
0x00000000004284b6 : jmp 0x100cae02
0x00000000004285f6 : jmp 0x100caf42
0x0000000000428abd : jmp 0x100cb409
0x0000000000428b66 : jmp 0x100cb4b2
0x0000000000428c86 : jmp 0x100cb5d2
0x0000000000428da6 : jmp 0x100cb6f2
0x0000000000428ec6 : jmp 0x100cb812
0x0000000000428fe6 : jmp 0x100cb932
0x0000000000429106 : jmp 0x100cba52
0x0000000000429226 : jmp 0x100cbb72
0x0000000000429346 : jmp 0x100cbc92
0x0000000000429466 : jmp 0x100cbdb2
0x0000000000429586 : jmp 0x100cbed2
0x00000000004296a6 : jmp 0x100cbff2
0x00000000004297c6 : jmp 0x100cc112
0x00000000004298e6 : jmp 0x100cc232
0x0000000000429a06 : jmp 0x100cc352
0x0000000000429b26 : jmp 0x100cc472
0x0000000000429d3d : jmp 0x100cc689
0x0000000000429e16 : jmp 0x100cc762
0x0000000000429f96 : jmp 0x100cc8e2
0x000000000042a116 : jmp 0x100cca62
0x000000000042a296 : jmp 0x100ccbe2
0x000000000042a416 : jmp 0x100ccd62
0x000000000042a596 : jmp 0x100ccee2
0x000000000042a716 : jmp 0x100cd062
0x000000000042a896 : jmp 0x100cd1e2
0x000000000042aa16 : jmp 0x100cd362
0x000000000042ab96 : jmp 0x100cd4e2
0x000000000042ad16 : jmp 0x100cd662
0x000000000042ae96 : jmp 0x100cd7e2
0x000000000042b016 : jmp 0x100cd962
0x000000000042b196 : jmp 0x100cdae2
0x000000000042b316 : jmp 0x100cdc62
0x000000000042b58d : jmp 0x100cded9
0x000000000042b666 : jmp 0x100cdfb2
0x000000000042b7d6 : jmp 0x100ce122
0x000000000042b946 : jmp 0x100ce292
0x000000000042bab6 : jmp 0x100ce402
0x000000000042bc26 : jmp 0x100ce572
0x000000000042bd96 : jmp 0x100ce6e2
0x000000000042bf06 : jmp 0x100ce852
0x000000000042c076 : jmp 0x100ce9c2
0x000000000042c1e6 : jmp 0x100ceb32
0x000000000042c356 : jmp 0x100ceca2
0x000000000042c4c6 : jmp 0x100cee12
0x000000000042c636 : jmp 0x100cef82
0x000000000042c7a6 : jmp 0x100cf0f2
0x000000000042c916 : jmp 0x100cf262
0x000000000042ca86 : jmp 0x100cf3d2
0x000000000042ccf9 : jmp 0x100cf645
0x000000000042cda6 : jmp 0x100cf6f2
0x000000000042ce96 : jmp 0x100cf7e2
0x000000000042cf86 : jmp 0x100cf8d2
0x000000000042d076 : jmp 0x100cf9c2
0x000000000042d166 : jmp 0x100cfab2
0x000000000042d256 : jmp 0x100cfba2
0x000000000042d346 : jmp 0x100cfc92
0x000000000042d436 : jmp 0x100cfd82
0x000000000042d526 : jmp 0x100cfe72
0x000000000042d616 : jmp 0x100cff62
0x000000000042d706 : jmp 0x100d0052
0x000000000042d7f6 : jmp 0x100d0142
0x000000000042d8e6 : jmp 0x100d0232
0x000000000042d9d6 : jmp 0x100d0322
0x000000000042dac6 : jmp 0x100d0412
0x000000000043b7d7 : jmp 0x100de123
0x000000000043b95c : jmp 0x100de2a8
0x000000000043bb6c : jmp 0x100de4b8
0x000000000043bd7c : jmp 0x100de6c8
0x000000000043bf8c : jmp 0x100de8d8
0x000000000043c19c : jmp 0x100deae8
0x000000000043c3ac : jmp 0x100decf8
0x000000000043c5bc : jmp 0x100def08
0x000000000043c7cc : jmp 0x100df118
0x000000000043c9dc : jmp 0x100df328
0x000000000043cbec : jmp 0x100df538
0x000000000043cdfc : jmp 0x100df748
0x000000000043d00c : jmp 0x100df958
0x000000000043d21c : jmp 0x100dfb68
0x000000000043d42c : jmp 0x100dfd78
0x000000000043d63c : jmp 0x100dff88
0x000000000043da17 : jmp 0x100e0363
0x000000000043db9c : jmp 0x100e04e8
0x000000000043dd9c : jmp 0x100e06e8
0x000000000043df9c : jmp 0x100e08e8
0x000000000043e19c : jmp 0x100e0ae8
0x000000000043e39c : jmp 0x100e0ce8
0x000000000043e59c : jmp 0x100e0ee8
0x000000000043e79c : jmp 0x100e10e8
0x000000000043e99c : jmp 0x100e12e8
0x000000000043eb9c : jmp 0x100e14e8
0x000000000043ed9c : jmp 0x100e16e8
0x000000000043ef9c : jmp 0x100e18e8
0x000000000043f19c : jmp 0x100e1ae8
0x000000000043f39c : jmp 0x100e1ce8
0x000000000043f59c : jmp 0x100e1ee8
0x000000000043f79c : jmp 0x100e20e8
0x000000000043fb5f : jmp 0x100e24ab
0x000000000043fcc8 : jmp 0x100e2614
0x000000000043fe68 : jmp 0x100e27b4
0x0000000000440008 : jmp 0x100e2954
0x00000000004401a8 : jmp 0x100e2af4
0x0000000000440348 : jmp 0x100e2c94
0x00000000004404e8 : jmp 0x100e2e34
0x0000000000440688 : jmp 0x100e2fd4
0x0000000000440828 : jmp 0x100e3174
0x00000000004409c8 : jmp 0x100e3314
0x0000000000440b68 : jmp 0x100e34b4
0x0000000000440d08 : jmp 0x100e3654
0x0000000000440ea8 : jmp 0x100e37f4
0x0000000000441048 : jmp 0x100e3994
0x00000000004411e8 : jmp 0x100e3b34
0x0000000000441388 : jmp 0x100e3cd4
0x00000000004416d5 : jmp 0x100e4021
0x00000000004417de : jmp 0x100e412a
0x000000000044192e : jmp 0x100e427a
0x0000000000441a7e : jmp 0x100e43ca
0x0000000000441bce : jmp 0x100e451a
0x0000000000441d1e : jmp 0x100e466a
0x0000000000441e6e : jmp 0x100e47ba
0x0000000000441fbe : jmp 0x100e490a
0x000000000044210e : jmp 0x100e4a5a
0x000000000044225e : jmp 0x100e4baa
0x00000000004423ae : jmp 0x100e4cfa
0x00000000004424fe : jmp 0x100e4e4a
0x000000000044264e : jmp 0x100e4f9a
0x000000000044279e : jmp 0x100e50ea
0x00000000004428ee : jmp 0x100e523a
0x0000000000442a3e : jmp 0x100e538a
0x00000000004052ac : jmp 0x404fc9
0x0000000000406c83 : jmp 0x4066fa
0x0000000000407a1b : jmp 0x4079e8
0x0000000000411689 : jmp 0x41164e
0x00000000004150a1 : jmp 0x4150a0
0x00000000004167e2 : jmp 0x4167a8
0x00000000004174b3 : jmp 0x416c23
0x000000000041df15 : jmp 0x41d9cb
0x000000000041de9e : jmp 0x41da47
0x0000000000422889 : jmp 0x4225f0
0x0000000000425835 : jmp 0x425803
0x000000000042ce12 : jmp 0x42ce28
0x000000000042f1c8 : jmp 0x42f196
0x000000000042f246 : jmp 0x42f214
0x000000000042f6d8 : jmp 0x42f6a6
0x000000000042f756 : jmp 0x42f724
0x0000000000442ca4 : jmp 0x442c6a
0x0000000000442df8 : jmp 0x442dbd
0x0000000000442ebc : jmp 0x442e82
0x0000000000443008 : jmp 0x442fcd
0x0000000000449d2e : jmp 0x449cf4
0x0000000000449dff : jmp 0x449dc5
0x0000000000449e6e : jmp 0x449e34
0x000000000044b9b8 : jmp 0x44b986
0x000000000044c8d3 : jmp 0x44c761
0x000000000044cc51 : jmp 0x44cbae
0x000000000044cfe1 : jmp 0x44cf41
0x000000000044d085 : jmp 0x44d04a
0x000000000044d12b : jmp 0x44d0f0
0x000000000045e381 : jmp 0x45e346
0x000000000045e41e : jmp 0x45e3e2
0x0000000000460763 : jmp 0x460768
0x0000000000464277 : jmp 0x46423c
0x000000000046bb98 : jmp 0x46bb5e
0x000000000046c6d3 : jmp 0x46c6a1
0x00000000004704c4 : jmp 0x470489
0x00000000004704c3 : jmp 0x47048a
0x0000000000470bf5 : jmp 0x470bc3
0x00000000004711bb : jmp 0x471180
0x0000000000473a13 : jmp 0x4739d9
0x0000000000475851 : jmp 0x4757a3
0x0000000000477f89 : jmp 0x477f8f
0x000000000047a2f2 : jmp 0x47a2b7
0x000000000047e528 : jmp 0x47e4f5
0x0000000000484502 : jmp 0x484554
0x0000000000485c7a : jmp 0x485c40
0x0000000000488302 : jmp 0x488354
0x000000000048ea1e : jmp 0x48ea34
0x00000000004a712a : jmp 0x4a7169
0x00000000004a7e69 : jmp 0x4a7e3c
0x00000000004a8ae9 : jmp 0x4a8ab7
0x00000000004a8e60 : jmp 0x4a8df4
0x00000000004a8e5f : jmp 0x4a8df5
0x00000000004a9036 : jmp 0x4a9004
0x00000000004379aa : jmp 0x4fc289a8
0x00000000004379a9 : jmp 0x4fc289a9
0x000000000043a4ca : jmp 0x4fc2b4c8
0x000000000043a4c9 : jmp 0x4fc2b4c9
0x000000000041d5de : jmp 0xd7b1ded
0x0000000000458cba : jmp 0xffffffff8d8d8cc8
0x00000000004a70d7 : jmp 0xffffffff91148aae
0x000000000041a753 : jmp 0xffffffffc341d146
0x0000000000482f91 : jmp 0xffffffffc357b8e6
0x000000000047bad9 : jmp 0xffffffffeb097d69
0x00000000004755d3 : jmp 0xfffffffff6791863
0x0000000000413bc2 : jmp 0xfffffffffef5bfdf
0x0000000000494a13 : jmp qword ptr [rax + 0x10fff96d]
0x00000000004949d3 : jmp qword ptr [rax + 0x20fff955]
0x00000000004949db : jmp qword ptr [rax + 0x20fff958]
0x00000000004949e3 : jmp qword ptr [rax + 0x20fff95b]
0x00000000004949eb : jmp qword ptr [rax + 0x20fff95e]
0x00000000004949f3 : jmp qword ptr [rax + 0x20fff961]
0x00000000004949fb : jmp qword ptr [rax + 0x20fff964]
0x0000000000494a03 : jmp qword ptr [rax + 0x20fff967]
0x00000000004a4c27 : jmp qword ptr [rax + 0x8fffcbb]
0x0000000000495aef : jmp qword ptr [rax - 0x3f0004e3]
0x0000000000410651 : jmp qword ptr [rax]
0x00000000004a5be3 : jmp qword ptr [rbx - 0x2f000287]
0x00000000004a5c3b : jmp qword ptr [rbx - 0x37000287]
0x00000000004af48b : jmp qword ptr [rbx]
0x000000000049313f : jmp qword ptr [rcx]
0x0000000000469805 : jmp qword ptr [rdi]
0x000000000049573f : jmp qword ptr [rdx + 0x12fffa4b]
0x0000000000495737 : jmp qword ptr [rdx + 0x22fffa4c]
0x000000000049572f : jmp qword ptr [rdx + 0x22fffa4d]
0x0000000000495727 : jmp qword ptr [rdx + 0x22fffa4e]
0x000000000049571f : jmp qword ptr [rdx + 0x22fffa4f]
0x000000000046aa75 : jmp qword ptr [rdx + rax*8]
0x000000000049502f : jmp qword ptr [rdx]
0x0000000000494b1f : jmp qword ptr [rsi + 0x26fff9b1]
0x0000000000494b27 : jmp qword ptr [rsi + 0x26fff9b2]
0x0000000000494b2f : jmp qword ptr [rsi + 0x26fff9b3]
0x0000000000494b4b : jmp qword ptr [rsi + 0x27fff9b7]
0x000000000044b859 : jmp qword ptr [rsi + 0xf]
0x0000000000494b23 : jmp qword ptr [rsi]
0x00000000004273a9 : jmp r10
0x00000000004801a0 : jmp r11
0x00000000004303ad : jmp r9
0x0000000000400a91 : jmp rax
0x00000000004801a1 : jmp rbx
0x00000000004244f2 : jmp rcx
0x0000000000403556 : jmp rdi
0x000000000040f5a5 : jmp rdx
0x0000000000403057 : jmp rsi
0x00000000004950e7 : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x00000000004080fc : jne 0x408110 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040fe28 : jne 0x40fe06 ; ret
0x000000000040ff1b : jne 0x40ff45 ; add rsp, 0x118 ; ret
0x0000000000411aa1 : jne 0x411ab4 ; add rsp, 0xd8 ; ret
0x0000000000411b52 : jne 0x411b65 ; add rsp, 0xd8 ; ret
0x00000000004168b5 : jne 0x4168c3 ; ret
0x00000000004184d8 : jne 0x41852c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000418551 : jne 0x418543 ; ret
0x000000000041946e : jne 0x419463 ; ret
0x0000000000419aa1 : jne 0x419a67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000419aec : jne 0x419ae5 ; lea eax, [rdx + rdi] ; ret
0x000000000041a406 : jne 0x41a3fb ; ret
0x000000000041c060 : jne 0x41c06f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042173c : jne 0x421703 ; ret
0x0000000000424bea : jne 0x424b71 ; ret
0x0000000000424ef7 : jne 0x424ee6 ; sub rax, 0x10 ; ret
0x00000000004289fc : jne 0x4289e6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042de97 : jne 0x42def4 ; xor eax, eax ; ret
0x000000000042de67 : jne 0x42df18 ; xor eax, eax ; ret
0x000000000042e313 : jne 0x42e337 ; xor eax, eax ; vzeroupper ; ret
0x000000000042ea4a : jne 0x42ea55 ; vzeroupper ; ret
0x000000000042eb44 : jne 0x42ea56 ; ret
0x000000000042ec8f : jne 0x42ea59 ; vzeroupper ; ret
0x00000000004302fd : jne 0x430327 ; xor eax, eax ; ret
0x000000000042f8f1 : jne 0x43032b ; xor eax, eax ; ret
0x000000000042f919 : jne 0x430337 ; xor eax, eax ; ret
0x0000000000443ab3 : jne 0x443abe ; xor rax, rax ; ret
0x0000000000444043 : jne 0x444078 ; mov rax, r8 ; vzeroupper ; ret
0x00000000004480d5 : jne 0x448066 ; lea rax, [rdi + 3] ; ret
0x00000000004480a7 : jne 0x448066 ; lea rax, [rdi + 7] ; ret
0x00000000004480a6 : jne 0x448067 ; lea rax, [rdi + 7] ; ret
0x0000000000449834 : jne 0x449a48 ; xor eax, eax ; ret
0x0000000000449a39 : jne 0x449a59 ; xor eax, eax ; ret
0x00000000004498e1 : jne 0x449a5d ; xor eax, eax ; ret
0x0000000000449a51 : jne 0x449a5e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000449b61 : jne 0x449b52 ; ret
0x0000000000449c11 : jne 0x449c02 ; ret
0x0000000000449d81 : jne 0x449d76 ; lea rax, [rcx - 1] ; ret
0x0000000000449ed1 : jne 0x449ec6 ; sub rax, 1 ; ret
0x000000000044b1dd : jne 0x44b1c6 ; ret
0x000000000044b344 : jne 0x44b32c ; vzeroupper ; ret
0x000000000044b507 : jne 0x44b4e7 ; vzeroupper ; ret
0x000000000044b9b2 : jne 0x44b8e7 ; jmp 0x44b98c
0x000000000044bcdf : jne 0x44bd0b ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044ca97 : jne 0x44caaf ; add rsp, 0x28 ; ret
0x000000000044ccc7 : jne 0x44cd11 ; add rsp, 0x58 ; ret
0x000000000044cd18 : jne 0x44cd34 ; xor eax, eax ; syscall
0x000000000044cde8 : jne 0x44ce07 ; mov eax, 1 ; syscall
0x000000000044cf25 : jne 0x44cf8f ; mov eax, 0x48 ; syscall
0x000000000044d081 : jne 0x44d04e ; neg eax ; jmp 0x44d04e
0x000000000044d057 : jne 0x44d0a9 ; add rsp, 0x68 ; ret
0x000000000044d0b8 : jne 0x44d0d7 ; mov eax, 3 ; syscall
0x000000000044d9c6 : jne 0x44d9dd ; add rsp, 0x28 ; ret
0x000000000044dbfb : jne 0x44dc16 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044dc21 : jne 0x44dc67 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044dc49 : jne 0x44dc87 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044e766 : jne 0x44e78e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044e799 : jne 0x44e7e7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044e7c5 : jne 0x44e847 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044e851 : jne 0x44e8b8 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044e881 : jne 0x44e8e9 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044f282 : jne 0x44f279 ; pop rdx ; pop r10 ; ret
0x000000000044f272 : jne 0x44f284 ; nop ; mov eax, 0xca ; syscall
0x000000000045257f : jne 0x452513 ; call rsi
0x000000000045bfef : jne 0x45bffc ; add rsp, 0x18 ; ret
0x000000000045c237 : jne 0x45c28c ; add rsp, 0x148 ; ret
0x0000000000469c52 : jne 0x469c65 ; add rsp, 0xd8 ; ret
0x0000000000471f01 : jne 0x471ef3 ; ret
0x000000000047314c : jne 0x473145 ; lea eax, [rdx + rdi] ; ret
0x0000000000473da7 : jne 0x473dac ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000047449c : jne 0x474493 ; ret
0x00000000004744a3 : jne 0x4744ae ; xor rax, rax ; ret
0x000000000047473b : jne 0x4746f6 ; mov rax, rdx ; ret
0x0000000000475787 : jne 0x4757ed ; mov eax, 0x101 ; syscall
0x00000000004758bc : jne 0x475909 ; add rsp, 0x58 ; ret
0x000000000047593f : jne 0x475952 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004759ee : jne 0x475a11 ; add rsp, 0x38 ; ret
0x000000000047e80a : jne 0x47e7b0 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e7f8 : jne 0x47e7d3 ; ret
0x000000000047f497 : jne 0x47f4b1 ; mov rax, qword ptr [rip + 0x23cf50] ; ret
0x000000000047f4ec : jne 0x47f4c3 ; ret
0x0000000000480fa9 : jne 0x480f81 ; movsx eax, cl ; neg eax ; ret
0x0000000000481d9a : jne 0x481da9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481e95 : jne 0x481ec9 ; add rsp, 0x38 ; ret
0x0000000000481f55 : jne 0x481f84 ; add rsp, 0x68 ; ret
0x00000000004820b6 : jne 0x4820f4 ; add rsp, 0x78 ; ret
0x0000000000482385 : jne 0x4823b4 ; add rsp, 0x68 ; ret
0x00000000004843c1 : jne 0x484401 ; leave ; ret
0x0000000000484861 : jne 0x48484d ; mov rax, rsi ; ret
0x00000000004848e5 : jne 0x4848c5 ; mov rax, rsi ; ret
0x000000000048504d : jne 0x48505a ; add rsp, 0x38 ; ret
0x0000000000485130 : jne 0x48514a ; add rsp, 0x38 ; ret
0x0000000000487846 : jne 0x487870 ; ret
0x0000000000487845 : jne 0x487871 ; ret
0x00000000004878fb : jne 0x487902 ; pop rbx ; ret
0x000000000048848b : jne 0x4884a2 ; add rsp, 0x38 ; ret
0x0000000000488599 : jne 0x4885b3 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488680 : jne 0x48869b ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048b069 : jne 0x48b08c ; xor eax, eax ; ret
0x000000000048b051 : jne 0x48b091 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d280 : jne 0x48d2a1 ; mov rax, qword ptr [rax] ; ret
0x000000000048d2ef : jne 0x48d2fa ; mov qword ptr [rax], rdx ; ret
0x000000000048d64e : jne 0x48d647 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d918 : jne 0x48d911 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dc53 : jne 0x48dc4c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e1a4 : jne 0x48e1c3 ; ret
0x000000000048e1c4 : jne 0x48e1dc ; mov eax, 8 ; ret
0x000000000048e1ef : jne 0x48e21e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e209 : jne 0x48e222 ; xor eax, eax ; ret
0x000000000048f04f : jne 0x48f07e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f069 : jne 0x48f082 ; xor eax, eax ; ret
0x000000000048f609 : jne 0x48f613 ; ret
0x000000000048f624 : jne 0x48f633 ; ret
0x000000000048f854 : jne 0x48f863 ; ret
0x000000000048fad9 : jne 0x48fafc ; xor eax, eax ; ret
0x000000000049077d : jne 0x490766 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490865 : jne 0x490858 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004908b0 : jne 0x490890 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004909f5 : jne 0x4909db ; pop rbx ; ret
0x0000000000490b03 : jne 0x490aee ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491081 : jne 0x491098 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a6f97 : jne 0x4a6f61 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a8f2b : jne 0x4a8f52 ; retf 0x32dd
0x000000000042282f : jno 0x42285f ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425a4b : jno 0x425aae ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000425a4b : jno 0x425ab0 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000042fbae : jno 0x42fbbd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043afa0 : jno 0x43afa9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043b1da : jno 0x43b1e3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043b341 : jno 0x43b352 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043b4a6 : jno 0x43b52a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000004559bb : jno 0x4559a7 ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000482e84 : jno 0x482ed6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a5ce9 : jno 0x4a5cea ; jmp qword ptr [rax]
0x00000000004a7945 : jnp 0x4a7902 ; ret
0x00000000004a8942 : jnp 0x4a89a0 ; retf
0x00000000004a8d49 : jnp 0x4a8d96 ; retf 0x99e0
0x00000000004a99a9 : jnp 0x4a99ea ; retf
0x00000000004abcb1 : jnp 0x4abcaa ; call qword ptr [rdx]
0x0000000000407a16 : jns 0x4079e6 ; mov r15, r12 ; jmp 0x4079ed
0x000000000043afa7 : jns 0x43afaa ; ret
0x000000000043b1e1 : jns 0x43b1e4 ; ret
0x000000000043b348 : jns 0x43b353 ; ret
0x00000000004417d7 : jns 0x4417b2 ; retf 0xead3
0x0000000000441927 : jns 0x441902 ; retf 0xead3
0x0000000000441a77 : jns 0x441a52 ; retf 0xead3
0x0000000000441bc7 : jns 0x441ba2 ; retf 0xead3
0x0000000000441d17 : jns 0x441cf2 ; retf 0xead3
0x0000000000441e67 : jns 0x441e42 ; retf 0xead3
0x0000000000441fb7 : jns 0x441f92 ; retf 0xead3
0x0000000000442107 : jns 0x4420e2 ; retf 0xead3
0x0000000000442257 : jns 0x442232 ; retf 0xead3
0x00000000004423a7 : jns 0x442382 ; retf 0xead3
0x00000000004424f7 : jns 0x4424d2 ; retf 0xead3
0x0000000000442647 : jns 0x442622 ; retf 0xead3
0x0000000000442797 : jns 0x442772 ; retf 0xead3
0x00000000004428e7 : jns 0x4428c2 ; retf 0xead3
0x0000000000442a37 : jns 0x442a12 ; retf 0xead3
0x000000000044e7c6 : jns 0x44e816 ; mov edi, dword ptr [rbp] ; call r12
0x000000000048af3e : jns 0x48af4b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d1ee : jns 0x48d231 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048df5e : jns 0x48df6b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048fb5e : jns 0x48fb6b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a5be5 : jns 0x4a5be6 ; call rax
0x00000000004a5be1 : jns 0x4a5be6 ; jmp qword ptr [rbx - 0x2f000287]
0x00000000004a5bfd : jns 0x4a5c02 ; dec dword ptr [rax] ; push -3 ; jmp rax
0x00000000004a6a4e : jns 0x4a69e4 ; ret 0xf869
0x00000000004a6a4d : jns 0x4a69e5 ; ret 0xf869
0x00000000004a8e5e : jns 0x4a8eb5 ; jmp 0x4a8df6
0x00000000004acd55 : jns 0x4acd4f ; jmp rdi
0x00000000004af729 : jns 0x4af724 ; jmp qword ptr [rbx]
0x00000000004166d4 : jo 0x416725 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416704 : jo 0x416755 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000421868 : jo 0x421819 ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000426877 : jo 0x426883 ; add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x000000000044f512 : jo 0x44f536 ; ret
0x000000000044f561 : jo 0x44f56f ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000456480 : jo 0x45648a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000471f7a : jo 0x471f92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473e56 : jo 0x473eb8 ; pop rbp ; pop r12 ; ret
0x000000000047406d : jo 0x4740cf ; pop rbp ; pop r12 ; ret
0x0000000000482274 : jo 0x4822da ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004949c8 : jo 0x494a1e ; stc ; call qword ptr [rax]
0x0000000000494ac0 : jo 0x494a73 ; stc ; jmp qword ptr [rax]
0x0000000000494a40 : jo 0x494ac2 ; stc ; jmp rax
0x0000000000494bcc : jo 0x494b8c ; stc ; dec dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax]
0x0000000000494e50 : jo 0x494e52 ; stc ; push qword ptr [rax] ; sti ; stc ; call qword ptr [rax]
0x0000000000495880 : jo 0x4958d0 ; cli ; jmp rax
0x0000000000495898 : jo 0x4958ed ; cli ; jmp rax
0x0000000000495a00 : jo 0x4959a7 ; cli ; call qword ptr [rax]
0x0000000000495a20 : jo 0x4959d4 ; cli ; call qword ptr [rax]
0x0000000000495a78 : jo 0x495a49 ; cli ; inc eax ; retf
0x00000000004a7ac4 : jo 0x4a7b3e ; mov ebp, 0xfb67d10d ; ret
0x00000000004ab96c : jo 0x4ab975 ; add byte ptr [rax], al ; sub al, 0x53 ; cmc ; jmp qword ptr [rdx]
0x00000000004ac010 : jo 0x4abfc8 ; cmc ; call qword ptr [rdx]
0x00000000004ac46c : jo 0x4ac480 ; add byte ptr [rax], al ; add byte ptr [rsi - 0xa], al ; call rsp
0x00000000004aed44 : jo 0x4aed4b ; ret 0xa01
0x00000000004b04f0 : jo 0x4b04c1 ; stc ; call qword ptr [rbx]
0x00000000004b0980 : jo 0x4b096d ; stc ; jmp qword ptr [rcx]
0x00000000004b196c : jo 0x4b19d5 ; add byte ptr [rax], al ; nop ; cmc ; std ; jmp qword ptr [rdi]
0x00000000004b3e75 : jo 0x4b3e7c ; retf
0x00000000004b4930 : jo 0x4b4936 ; std ; jmp qword ptr [rdx]
0x00000000004b5900 : jo 0x4b5889 ; std ; call qword ptr [rbx]
0x000000000045a632 : jp 0x45a62c ; ret
0x00000000004a7c53 : jp 0x4a7c0d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004af741 : jp 0x4af73c ; jmp qword ptr [rbx]
0x00000000004b3335 : jp 0x4b333d ; add al, bh ; and bh, ah ; jmp qword ptr [rcx]
0x000000000043769a : jrcxz 0x437695 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437699 : jrcxz 0x437696 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a1ba : jrcxz 0x43a1b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a1b9 : jrcxz 0x43a1b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044f2d3 : jrcxz 0x44f298 ; cmp r11d, 0xa ; je 0x44f2e4 ; ret
0x000000000046959f : jrcxz 0x4695a5 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000046959e : jrcxz 0x4695a6 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000047d8d3 : jrcxz 0x47d862 ; add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x000000000047fb8e : jrcxz 0x47fbdc ; mov esi, ebx ; syscall
0x0000000000490b04 : jrcxz 0x490b66 ; pop rbp ; pop r12 ; ret
0x0000000000494ed5 : jrcxz 0x494ed2 ; call qword ptr [rax]
0x00000000004a68a5 : jrcxz 0x4a68ff ; ret
0x00000000004a8a6d : jrcxz 0x4a8a30 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a95c9 : jrcxz 0x4a95ad ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004af879 : jrcxz 0x4af874 ; jmp qword ptr [rbx]
0x0000000000410ce5 : js 0x410d09 ; call rdx
0x0000000000472e19 : js 0x472e51 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000478b8a : js 0x478b89 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047bd72 : js 0x47bd85 ; pop rbx ; ret
0x000000000048d4a6 : js 0x48d4b3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d4b3 : js 0x48d4bf ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490933 : js 0x4909ae ; ret 0x8b48
0x00000000004a89a8 : js 0x4a897c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004a8941 : js 0x4a89c1 ; pop rdx ; retf
0x000000000046c5a3 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000459885 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000042112f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004b0e88 : lahf ; div ah ; jmp qword ptr [rbx]
0x00000000004a8f83 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e80b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004422dd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045fe4f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a8872 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a9074 : lahf ; push -0x57d3205 ; call 0xffffffffab585b76
0x00000000004a7080 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044dedb : lahf ; ret
0x000000000041adaf : lahf ; ret 0x3949
0x000000000041ae62 : lahf ; ret 0x48e9
0x000000000044dd91 : lahf ; ret 0x8545
0x00000000004a67dd : lahf ; ret 0x871e
0x000000000044b599 : lahf ; ret 0xea81
0x000000000048c861 : lahf ; ret 0xf45
0x000000000047f84d : lahf ; retf
0x000000000041cebd : lahf ; retf 0x29
0x000000000044296d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494d8f : lcall [rax - 6] ; stc ; jmp qword ptr [rax]
0x000000000041cc52 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000041b4b0 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414005 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000413d8b : lcall [rbx + 0x5d] ; ret
0x000000000047fe36 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000496f43 : lcall [rdx] ; pushfq ; sti ; call rdx
0x0000000000437d26 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000419afb : lea eax, [r8 - 1] ; ret
0x000000000048af5c : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042dec4 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042ded4 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042dea4 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000419afc : lea eax, [rax - 1] ; ret
0x000000000044363d : lea eax, [rcx + rsi] ; ret
0x0000000000449d84 : lea eax, [rcx - 1] ; ret
0x0000000000447dfc : lea eax, [rdi + 0x10] ; ret
0x0000000000447e11 : lea eax, [rdi + 0x11] ; ret
0x0000000000447e2f : lea eax, [rdi + 0x12] ; ret
0x0000000000447e4f : lea eax, [rdi + 0x13] ; ret
0x0000000000447e72 : lea eax, [rdi + 0x14] ; ret
0x0000000000447e91 : lea eax, [rdi + 0x15] ; ret
0x0000000000447eb1 : lea eax, [rdi + 0x16] ; ret
0x0000000000447ed1 : lea eax, [rdi + 0x17] ; ret
0x0000000000447ef4 : lea eax, [rdi + 0x18] ; ret
0x0000000000447f19 : lea eax, [rdi + 0x19] ; ret
0x0000000000447f37 : lea eax, [rdi + 0x1a] ; ret
0x0000000000447f57 : lea eax, [rdi + 0x1b] ; ret
0x0000000000447f73 : lea eax, [rdi + 0x1c] ; ret
0x0000000000447f93 : lea eax, [rdi + 0x1d] ; ret
0x0000000000447fb3 : lea eax, [rdi + 0x1e] ; ret
0x0000000000447fd3 : lea eax, [rdi + 0x1f] ; ret
0x0000000000447d4d : lea eax, [rdi + 0xa] ; ret
0x0000000000447d6d : lea eax, [rdi + 0xb] ; ret
0x0000000000447d8f : lea eax, [rdi + 0xc] ; ret
0x0000000000447daf : lea eax, [rdi + 0xd] ; ret
0x0000000000447dcf : lea eax, [rdi + 0xe] ; ret
0x0000000000447de9 : lea eax, [rdi + 0xf] ; ret
0x0000000000447c97 : lea eax, [rdi + 1] ; ret
0x0000000000447caa : lea eax, [rdi + 2] ; ret
0x0000000000447cb5 : lea eax, [rdi + 3] ; ret
0x0000000000447cc8 : lea eax, [rdi + 4] ; ret
0x0000000000447cdd : lea eax, [rdi + 5] ; ret
0x0000000000447cfb : lea eax, [rdi + 6] ; ret
0x0000000000447d07 : lea eax, [rdi + 7] ; ret
0x0000000000447d1a : lea eax, [rdi + 8] ; ret
0x0000000000447d2f : lea eax, [rdi + 9] ; ret
0x000000000042def9 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042df09 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042de03 : lea eax, [rdi + rax + 0x30] ; ret
0x0000000000443885 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000442e67 : lea eax, [rdi + rax] ; ret
0x000000000044a0da : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000443539 : lea eax, [rdi + rsi] ; ret
0x0000000000447c83 : lea eax, [rdi] ; ret
0x000000000044726d : lea eax, [rdx + 0xa] ; ret
0x000000000044728d : lea eax, [rdx + 0xb] ; ret
0x00000000004472af : lea eax, [rdx + 0xc] ; ret
0x00000000004472cf : lea eax, [rdx + 0xd] ; ret
0x00000000004472ef : lea eax, [rdx + 0xe] ; ret
0x000000000044717f : lea eax, [rdx + 0xf] ; ret
0x00000000004471a7 : lea eax, [rdx + 1] ; ret
0x00000000004471bd : lea eax, [rdx + 2] ; ret
0x00000000004471d5 : lea eax, [rdx + 3] ; ret
0x00000000004471eb : lea eax, [rdx + 4] ; ret
0x00000000004471fd : lea eax, [rdx + 5] ; ret
0x000000000044721b : lea eax, [rdx + 6] ; ret
0x0000000000447127 : lea eax, [rdx + 7] ; ret
0x000000000044722d : lea eax, [rdx + 8] ; ret
0x000000000044724d : lea eax, [rdx + 9] ; ret
0x0000000000419aee : lea eax, [rdx + rdi] ; ret
0x000000000044b6b3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000424e76 : lea eax, [rdx - 0x10] ; ret
0x0000000000447195 : lea eax, [rdx] ; ret
0x0000000000427168 : lea eax, [rip + 0x1bcb2] ; cmove rax, rdx ; ret
0x0000000000425a78 : lea eax, [rip + 0x1d9d2] ; cmove rax, rdx ; ret
0x00000000004259d8 : lea eax, [rip + 0x1df32] ; cmove rax, rdx ; ret
0x0000000000425a08 : lea eax, [rip + 0x1e0a2] ; cmove rax, rdx ; ret
0x000000000042654f : lea eax, [rip + 0x2351b] ; cmove rax, rdx ; ret
0x00000000004268d8 : lea eax, [rip + 0x23aa2] ; cmovne rax, rdx ; ret
0x0000000000426798 : lea eax, [rip + 0x23bd2] ; cmovne rax, rdx ; ret
0x0000000000426638 : lea eax, [rip + 0x23d42] ; cmovne rax, rdx ; ret
0x000000000042693f : lea eax, [rip + 0x23deb] ; cmovne rax, rdx ; ret
0x00000000004267ff : lea eax, [rip + 0x23f1b] ; cmovne rax, rdx ; ret
0x000000000042669f : lea eax, [rip + 0x2408b] ; cmovne rax, rdx ; ret
0x000000000042691e : lea eax, [rip + 0x2423c] ; cmovne rax, rdx ; ret
0x00000000004267de : lea eax, [rip + 0x2436c] ; cmovne rax, rdx ; ret
0x000000000042667e : lea eax, [rip + 0x244dc] ; cmovne rax, rdx ; ret
0x000000000042590f : lea eax, [rip + 0x245fb] ; cmovne rax, rdx ; ret
0x000000000042670a : lea eax, [rip + 0x249d0] ; cmovne rax, rdx ; ret
0x00000000004266ed : lea eax, [rip + 0x24b4d] ; cmovne rax, rdx ; ret
0x000000000042673e : lea eax, [rip + 0x24c7c] ; cmovne rax, rdx ; ret
0x00000000004508a1 : lea eax, [rip + 0x269b79] ; ret
0x00000000004851ef : lea eax, [rip + 0x5b] ; cmovne rax, rdx ; ret
0x0000000000427138 : lea eax, [rip + 0x6df2] ; cmove rax, rdx ; ret
0x0000000000426578 : lea eax, [rip + 0x7682] ; cmove rax, rdx ; ret
0x00000000004265dc : lea eax, [rip + 0x835e] ; je 0x4265b3 ; ret
0x0000000000473d38 : lea eax, [rip + 0xa22] ; cmove rax, rdx ; ret
0x000000000046c6cc : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46c6a8
0x0000000000460ad1 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000410371 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a7091 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473f0b : lea ecx, [rax + 1] ; call rbx
0x00000000004740a6 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000473764 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000430410 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000044751e : lea ecx, [rbx + rcx] ; jmp rcx
0x000000000046a194 : lea ecx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000485a24 : lea ecx, [rdx + rcx*8] ; jmp 0x485a36
0x0000000000424e86 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000484500 : lea ecx, [rdx] ; jmp 0x484556
0x0000000000488300 : lea ecx, [rdx] ; jmp 0x488356
0x0000000000475b37 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000473570 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047348b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047402e : lea ecx, [rsp + 0x20] ; call rbx
0x000000000047421c : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473f06 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x0000000000400db6 : lea edi, [rax] ; leave ; ret
0x000000000044fb8f : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x000000000041a411 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000485a20 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a3a
0x00000000004732e7 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004304e4 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000004273a6 : lea edx, [rdx + rcx] ; jmp r10
0x00000000004308d8 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000426653 : lea edx, [rip + 0x11d77] ; cmovne rax, rdx ; ret
0x00000000004258ef : lea edx, [rip + 0x1ea4b] ; cmovne rax, rdx ; ret
0x000000000042682f : lea edx, [rip + 0x1f2bb] ; cmovne rax, rdx ; ret
0x00000000004265c4 : lea edx, [rip + 0x21d36] ; cmovne rax, rdx ; ret
0x0000000000425888 : lea edx, [rip + 0x22752] ; cmovne rax, rdx ; ret
0x000000000047446a : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x00000000004258bf : lea edx, [rip + 0x314b] ; cmovne rax, rdx ; ret
0x0000000000425a49 : lea edx, [rip + 0x5a71] ; cmovne rax, rdx ; ret
0x00000000004268f3 : lea edx, [rip + 0xf007] ; cmovne rax, rdx ; ret
0x00000000004267b3 : lea edx, [rip + 0xf127] ; cmovne rax, rdx ; ret
0x00000000004878f6 : lea edx, [rsi] ; and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000048ddd1 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046cb1d : lea esi, [rip + 0x24af1d] ; jmp rax
0x000000000044a3ff : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e326 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x00000000004273a5 : lea r10, [r10 + r9] ; jmp r10
0x000000000048ddd0 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000043040f : lea r9, [r11 + r9] ; jmp r9
0x0000000000473763 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x00000000004844ff : lea r9, [rdx] ; jmp 0x484557
0x00000000004882ff : lea r9, [rdx] ; jmp 0x488357
0x000000000047356f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047348a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047402d : lea r9, [rsp + 0x20] ; call rbx
0x000000000047421b : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473f05 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000048af5b : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042dec3 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042ded3 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042dea3 : lea rax, [rax + rdi - 0x10] ; ret
0x000000000044363c : lea rax, [rcx + rsi] ; ret
0x0000000000449d83 : lea rax, [rcx - 1] ; ret
0x0000000000447dfb : lea rax, [rdi + 0x10] ; ret
0x0000000000447e10 : lea rax, [rdi + 0x11] ; ret
0x0000000000447e2e : lea rax, [rdi + 0x12] ; ret
0x0000000000447e4e : lea rax, [rdi + 0x13] ; ret
0x0000000000447e71 : lea rax, [rdi + 0x14] ; ret
0x0000000000447e90 : lea rax, [rdi + 0x15] ; ret
0x0000000000447eb0 : lea rax, [rdi + 0x16] ; ret
0x0000000000447ed0 : lea rax, [rdi + 0x17] ; ret
0x0000000000447ef3 : lea rax, [rdi + 0x18] ; ret
0x0000000000447f18 : lea rax, [rdi + 0x19] ; ret
0x0000000000447f36 : lea rax, [rdi + 0x1a] ; ret
0x0000000000447f56 : lea rax, [rdi + 0x1b] ; ret
0x0000000000447f72 : lea rax, [rdi + 0x1c] ; ret
0x0000000000447f92 : lea rax, [rdi + 0x1d] ; ret
0x0000000000447fb2 : lea rax, [rdi + 0x1e] ; ret
0x0000000000447fd2 : lea rax, [rdi + 0x1f] ; ret
0x0000000000447d4c : lea rax, [rdi + 0xa] ; ret
0x0000000000447d6c : lea rax, [rdi + 0xb] ; ret
0x0000000000447d8e : lea rax, [rdi + 0xc] ; ret
0x0000000000447dae : lea rax, [rdi + 0xd] ; ret
0x0000000000447dce : lea rax, [rdi + 0xe] ; ret
0x0000000000447de8 : lea rax, [rdi + 0xf] ; ret
0x0000000000447c96 : lea rax, [rdi + 1] ; ret
0x0000000000447ca9 : lea rax, [rdi + 2] ; ret
0x0000000000447cb4 : lea rax, [rdi + 3] ; ret
0x0000000000447cc7 : lea rax, [rdi + 4] ; ret
0x0000000000447cdc : lea rax, [rdi + 5] ; ret
0x0000000000447cfa : lea rax, [rdi + 6] ; ret
0x0000000000447d06 : lea rax, [rdi + 7] ; ret
0x0000000000447d19 : lea rax, [rdi + 8] ; ret
0x0000000000447d2e : lea rax, [rdi + 9] ; ret
0x000000000042def8 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042df08 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042de02 : lea rax, [rdi + rax + 0x30] ; ret
0x0000000000443884 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000442e66 : lea rax, [rdi + rax] ; ret
0x000000000044a0d9 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000443538 : lea rax, [rdi + rsi] ; ret
0x0000000000447c82 : lea rax, [rdi] ; ret
0x000000000044726c : lea rax, [rdx + 0xa] ; ret
0x000000000044728c : lea rax, [rdx + 0xb] ; ret
0x00000000004472ae : lea rax, [rdx + 0xc] ; ret
0x00000000004472ce : lea rax, [rdx + 0xd] ; ret
0x00000000004472ee : lea rax, [rdx + 0xe] ; ret
0x000000000044717e : lea rax, [rdx + 0xf] ; ret
0x00000000004471a6 : lea rax, [rdx + 1] ; ret
0x00000000004471bc : lea rax, [rdx + 2] ; ret
0x00000000004471d4 : lea rax, [rdx + 3] ; ret
0x00000000004471ea : lea rax, [rdx + 4] ; ret
0x00000000004471fc : lea rax, [rdx + 5] ; ret
0x000000000044721a : lea rax, [rdx + 6] ; ret
0x0000000000447126 : lea rax, [rdx + 7] ; ret
0x000000000044722c : lea rax, [rdx + 8] ; ret
0x000000000044724c : lea rax, [rdx + 9] ; ret
0x0000000000424e75 : lea rax, [rdx - 0x10] ; ret
0x0000000000447194 : lea rax, [rdx] ; ret
0x00000000004508a0 : lea rax, [rip + 0x269b79] ; ret
0x000000000046c6cb : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46c6a9
0x0000000000410370 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044751d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000473f0a : lea rcx, [rax + 1] ; call rbx
0x00000000004740a5 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000485a23 : lea rcx, [rdx + rcx*8] ; jmp 0x485a37
0x0000000000424e85 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475b36 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044fb8e : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004304e3 : lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000485a1f : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a3b
0x00000000004308d7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046cb1c : lea rsi, [rip + 0x24af1d] ; jmp rax
0x000000000044a3fe : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000042c937 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042d817 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045adca : leave ; call r15
0x0000000000495a75 : leave ; cli ; push qword ptr [rax - 0x36] ; cli ; inc eax ; retf
0x0000000000449b60 : leave ; jne 0x449b53 ; ret
0x0000000000449c10 : leave ; jne 0x449c03 ; ret
0x0000000000449ed0 : leave ; jne 0x449ec7 ; sub rax, 1 ; ret
0x000000000047473a : leave ; jne 0x4746f7 ; mov rax, rdx ; ret
0x000000000044a0d8 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048af10 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046d039 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400c46 : leave ; ret
0x00000000004a8a74 : leave ; retf
0x00000000004a7241 : leave ; retf 0x6ee8
0x00000000004a4329 : leave ; retf 0xcccb
0x0000000000494d7d : leave ; stc ; call qword ptr [rax - 0x1f000636]
0x000000000047402a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000049520f : ljmp [rbx - 6] ; call qword ptr [rdx]
0x000000000049534b : ljmp [rdx + 0x3afffa23] ; and edi, edx ; jmp rax
0x0000000000495507 : ljmp [rsp + rdx*2 + 0x543cfffa] ; cli ; jmp rdx
0x00000000004b04ec : lock add byte ptr [r8], al ; jo 0x4b04c5 ; stc ; call qword ptr [rbx]
0x000000000042f0fe : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004268f6 : lock add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000047f2f7 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412460 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004494e0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000495a19 : lodsb al, byte ptr [rsi] ; cli ; call rax
0x00000000004a8966 : lodsb al, byte ptr [rsi] ; loop 0x4a8933 ; retf
0x000000000042cf34 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a971d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000457380 : lodsb al, byte ptr [rsi] ; retf 0xfffa
0x00000000004a6f9b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046253f : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000495a1d : lodsd eax, dword ptr [rsi] ; cli ; push qword ptr [rax - 0x51] ; cli ; call qword ptr [rax]
0x00000000004a8d45 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000046238f : lodsd eax, dword ptr [rsi] ; push rbx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000482ff2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000047fd4f : lodsd eax, dword ptr [rsi] ; retf
0x00000000004142dd : loop 0x4142df ; add rdx, rcx ; jmp 0x4142f5
0x0000000000423b1e : loop 0x423b71 ; mov esi, ebx ; mov rdi, r13 ; call 0x41fd69
0x00000000004289fd : loop 0x428a35 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043760a : loop 0x437605 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437609 : loop 0x437606 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a12a : loop 0x43a125 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a129 : loop 0x43a126 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044b67f : loop 0x44b699 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044f523 : loop 0x44f576 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000046a199 : loop 0x46a1e0 ; call qword ptr [rdx + rax*8]
0x000000000047596e : loop 0x475936 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x0000000000487261 : loop 0x48726c ; add rdx, rax ; jmp 0x487275
0x000000000048d209 : loop 0x48d258 ; add esp, 0x18 ; ret
0x00000000004961b0 : loop 0x49621c ; sti ; jmp rdx
0x00000000004a8967 : loop 0x4a8932 ; retf
0x00000000004a9aba : loop 0x4a9b0f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000041b7ef : loope 0x41b81e ; add bl, dh ; ret
0x000000000043757a : loope 0x437575 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437579 : loope 0x437576 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a09a : loope 0x43a095 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a099 : loope 0x43a096 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044820b : loope 0x448215 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044bbfe : loope 0x44bbf5 ; ret
0x000000000044f560 : loope 0x44f5db ; add al, 0 ; mov eax, 0x15 ; syscall
0x000000000045157e : loope 0x45158b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047493e : loope 0x474953 ; je 0x474964 ; ret
0x000000000047cb0b : loope 0x47cb11 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482e87 : loope 0x482ed9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482eb8 : loope 0x482f0b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482f2d : loope 0x482f80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049077e : loope 0x4907e0 ; pop rbp ; pop r12 ; ret
0x00000000004909f6 : loope 0x490a55 ; ret
0x00000000004a8a71 : loope 0x4a8af3 ; pop rdx ; leave ; retf
0x0000000000411c37 : loopne 0x411c9d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041ea6c : loopne 0x41ea80 ; xchg eax, esp ; ret 0x3de9
0x00000000004243ef : loopne 0x424455 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000425a0b : loopne 0x425a14 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000430931 : loopne 0x430948 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430930 : loopne 0x430949 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a81 : loopne 0x430a98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a80 : loopne 0x430a99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430bd1 : loopne 0x430be8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430bd0 : loopne 0x430be9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d21 : loopne 0x430d38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d20 : loopne 0x430d39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e71 : loopne 0x430e88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e70 : loopne 0x430e89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430fc1 : loopne 0x430fd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430fc0 : loopne 0x430fd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431111 : loopne 0x431128 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431110 : loopne 0x431129 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043125f : loopne 0x431276 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043125e : loopne 0x431277 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004313b1 : loopne 0x4313c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004313b0 : loopne 0x4313c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431501 : loopne 0x431518 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431500 : loopne 0x431519 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431651 : loopne 0x431668 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431650 : loopne 0x431669 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004317a1 : loopne 0x4317b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004317a0 : loopne 0x4317b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318f1 : loopne 0x431908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318f0 : loopne 0x431909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a41 : loopne 0x431a58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a40 : loopne 0x431a59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b91 : loopne 0x431ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b90 : loopne 0x431ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433301 : loopne 0x433318 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433300 : loopne 0x433319 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433451 : loopne 0x433468 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433450 : loopne 0x433469 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004335a1 : loopne 0x4335b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004335a0 : loopne 0x4335b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004336f1 : loopne 0x433708 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004336f0 : loopne 0x433709 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433841 : loopne 0x433858 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433840 : loopne 0x433859 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433991 : loopne 0x4339a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433990 : loopne 0x4339a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433ae1 : loopne 0x433af8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433ae0 : loopne 0x433af9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433c2f : loopne 0x433c46 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433c2e : loopne 0x433c47 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433d81 : loopne 0x433d98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433d80 : loopne 0x433d99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433ed1 : loopne 0x433ee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000433ed0 : loopne 0x433ee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434021 : loopne 0x434038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434020 : loopne 0x434039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434171 : loopne 0x434188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434170 : loopne 0x434189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004342c1 : loopne 0x4342d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004342c0 : loopne 0x4342d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434411 : loopne 0x434428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434410 : loopne 0x434429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434561 : loopne 0x434578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000434560 : loopne 0x434579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044b5ed : loopne 0x44b607 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044f338 : loopne 0x44f34d ; cmp eax, 4 ; je 0x44f347 ; ret
0x0000000000451582 : loopne 0x4515e5 ; pop r12 ; ret
0x000000000045831d : loopne 0x458398 ; jae 0x4582ae ; retf 0xb941
0x00000000004649bf : loopne 0x46494c ; ret
0x000000000046eb2a : loopne 0x46eb30 ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000470059 : loopne 0x4700bd ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470835 : loopne 0x470899 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048285d : loopne 0x482866 ; sub eax, 1 ; ret
0x0000000000494a68 : loopne 0x4949f5 ; stc ; call rax
0x0000000000494e44 : loopne 0x494e4b ; cli ; jmp rax
0x0000000000494e48 : loopne 0x494e51 ; cli ; jmp rax
0x0000000000495b50 : loopne 0x495b7b ; sti ; push rax ; and bh, bl ; call qword ptr [rax]
0x0000000000496988 : loopne 0x496922 ; sti ; call qword ptr [rax]
0x00000000004a7094 : loopne 0x4a7074 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004afedc : loopne 0x4aff2a ; add byte ptr [rax], al ; mov bl, 0xf9 ; call qword ptr [rdx]
0x00000000004b1090 : loopne 0x4b1092 ; std ; jmp qword ptr [rdx]
0x00000000004a6aaa : mov ah, 0x13 ; ret
0x00000000004909f2 : mov ah, 0x22 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000049217a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918da : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004950fc : mov ah, 0x2f ; cli ; inc dword ptr [rdi + rbp - 6] ; call rsp
0x00000000004955f4 : mov ah, 0x56 ; cli ; inc dword ptr [rsi + rdx*2 - 6] ; call rsp
0x00000000004218c8 : mov ah, 0x80 ; sub dword ptr [rax], eax ; ret
0x00000000004b19ac : mov ah, 0xa2 ; cli ; jmp rax
0x00000000004a6f50 : mov ah, 0xa5 ; ret
0x0000000000494bb9 : mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004aff59 : mov ah, 0xf9 ; call qword ptr [rbx]
0x0000000000494af5 : mov ah, 0xf9 ; call rcx
0x0000000000494b39 : mov ah, 0xf9 ; inc dword ptr [rsi - 0x4b] ; stc ; call rsi
0x00000000004a48bd : mov ah, 0xfc ; jmp qword ptr [rax]
0x00000000004ab36c : mov ah, bh ; std ; jmp qword ptr [rax]
0x00000000004a68a4 : mov ah, bl ; push rsi ; ret
0x000000000048b056 : mov al, 0 ; add byte ptr [rax], al ; ret
0x000000000045adc4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000495ac8 : mov al, 0x1c ; sti ; inc eax ; sbb al, 0xfb ; call rax
0x0000000000495b20 : mov al, 0x21 ; sti ; inc eax ; and ebx, edi ; jmp rax
0x0000000000495b48 : mov al, 0x22 ; sti ; call rax
0x0000000000495b6c : mov al, 0x23 ; sti ; call rax
0x00000000004953c4 : mov al, 0x24 ; cli ; jmp qword ptr [rax]
0x00000000004951c0 : mov al, 0x25 ; cli ; jmp qword ptr [rax]
0x0000000000494f88 : mov al, 0x2e ; cli ; inc dword ptr [rax + 0x2e] ; cli ; call rsi
0x0000000000495160 : mov al, 0x32 ; cli ; inc dword ptr [rax + 0x32] ; cli ; call rax
0x00000000004afaac : mov al, 0x41 ; add byte ptr [rax], al ; xor bh, bh ; clc ; call qword ptr [rax]
0x0000000000494990 : mov al, 0x41 ; stc ; call rax
0x00000000004b02ac : mov al, 0x49 ; add byte ptr [rax], al ; nop ; ret 0xfff9
0x00000000004958cc : mov al, 0x49 ; cli ; call qword ptr [rax]
0x00000000004956c8 : mov al, 0x4a ; cli ; jmp qword ptr [rax]
0x00000000004949b0 : mov al, 0x4a ; stc ; call rax
0x0000000000495650 : mov al, 0x53 ; cli ; jmp qword ptr [rax]
0x0000000000495480 : mov al, 0x55 ; cli ; inc dword ptr [rax + 0x55] ; cli ; call rax
0x00000000004b5390 : mov al, 0x58 ; std ; call qword ptr [rdx]
0x0000000000495658 : mov al, 0x59 ; cli ; inc dword ptr [rax + 0x59] ; cli ; call rax
0x00000000004afc50 : mov al, 0x76 ; stc ; jmp qword ptr [rbx]
0x0000000000494a30 : mov al, 0x77 ; stc ; jmp qword ptr [rax]
0x00000000004b1a30 : mov al, 0xa4 ; cli ; call qword ptr [rdi]
0x000000000044322f : mov al, 0xc5 ; std ; xlatb ; ret
0x0000000000495a88 : mov al, 0xcf ; cli ; inc dword ptr [rax - 0x44] ; cli ; call rax
0x000000000048d8ff : mov al, 0xe8 ; retf
0x00000000004a8d56 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004069af : mov al, 0xf ; retf
0x0000000000494b1d : mov al, 0xf9 ; jmp qword ptr [rsi + 0x26fff9b1]
0x0000000000494abd : mov al, 0xf9 ; push qword ptr [rax - 0x52] ; stc ; jmp qword ptr [rax]
0x00000000004abcac : mov al, 3 ; add byte ptr [rax], al ; add byte ptr [rbx - 0xb], bh ; call qword ptr [rdx]
0x00000000004649cb : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000445a06 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000445a24 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000447190 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004459e0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004459f0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000438341 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004a8de0 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000045b424 : mov bh, 0x43 ; add al, 0x89 ; retf
0x000000000045af9f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004480a8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004a90b8 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a7d84 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a4326 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000415459 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x0000000000494b8d : mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494bcd : mov bh, 0xf9 ; dec dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax]
0x0000000000494b4d : mov bh, 0xf9 ; jmp qword ptr [rdi]
0x0000000000494b49 : mov bh, 0xf9 ; jmp qword ptr [rsi + 0x27fff9b7]
0x000000000041fb63 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000048f7d7 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487e7c : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a9493 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044999e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a911b : mov bl, 0x29 ; retf 0xbf4b
0x000000000047473c : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000403552 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x0000000000410d8d : mov bl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000471a05 : mov bl, 0x6b ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x0000000000415842 : mov bl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004151c8 : mov bl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004a8e63 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000417bf3 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x00000000004a9100 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004ac011 : mov bl, 0xf5 ; call qword ptr [rdx]
0x00000000004ac025 : mov bl, 0xf5 ; call rsp
0x00000000004aff09 : mov bl, 0xf9 ; call qword ptr [rbx]
0x00000000004afee1 : mov bl, 0xf9 ; call qword ptr [rdx]
0x0000000000494af1 : mov bl, 0xf9 ; inc dword ptr [rcx - 0x4c] ; stc ; call rcx
0x0000000000494b2d : mov bl, 0xf9 ; jmp qword ptr [rsi + 0x26fff9b3]
0x0000000000494b31 : mov bl, 0xf9 ; jmp qword ptr [rsi]
0x0000000000494b3c : mov bpl, 0xf9 ; call rsi
0x00000000004a6a81 : mov bx, 0xf32d ; retf
0x0000000000481130 : mov byte ptr [r8 + 0x15], r15b ; syscall
0x000000000045183a : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x0000000000481131 : mov byte ptr [rax + 0x15], bh ; syscall
0x000000000044f4fa : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a2a6c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000045183b : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000004b412d : mov byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0xfffc
0x000000000044f09f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400f84 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b4141 : mov byte ptr [rax], al ; add byte ptr [rdx + rcx*8], bh ; cld ; call rdx
0x00000000004b4140 : mov byte ptr [rax], r8b ; add byte ptr [rdx + rcx*8], bh ; cld ; call rdx
0x00000000004b5c84 : mov byte ptr [rbx - 0x66a80000], ah ; std ; call qword ptr [rdx]
0x000000000046c045 : mov byte ptr [rbx], al ; add byte ptr [rcx - 0x77], al ; retf
0x00000000004af484 : mov byte ptr [rbx], bh ; add byte ptr [rax], al ; cmp byte ptr [rbp - 9], ah ; jmp qword ptr [rbx]
0x000000000046ff47 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000403053 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048af14 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x00000000004080df : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004afa84 : mov byte ptr [rcx], al ; add byte ptr [rax], cl ; fdivp st(0) ; call qword ptr [rax]
0x00000000004b0d08 : mov byte ptr [rcx], cl ; cli ; call qword ptr [rax]
0x000000000045fd63 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000447df8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000447768 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000447e6e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000004477be : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000447ef0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000447840 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000447ca6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000447686 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000447cc2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004476a2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004476e3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a9115 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x0000000000431f5b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000414a40 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000043b082 : mov byte ptr [rdi], cl ; ret
0x000000000044b365 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000447c80 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000447660 : mov byte ptr [rdi], dh ; ret
0x00000000004383b3 : mov byte ptr [rdi], dl ; ret
0x00000000004471b9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000445a09 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000004471e7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000445a27 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004afbd8 : mov byte ptr [rdx - 7], al ; jmp qword ptr [rax]
0x0000000000447192 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004459e2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048ba80 : mov byte ptr [rip + 0x230769], 8 ; ret
0x0000000000400b06 : mov byte ptr [rip + 0x2ba813], 1 ; pop rbp ; ret
0x000000000041fd19 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000048485f : mov byte ptr [rsi], al ; jne 0x48484f ; mov rax, rsi ; ret
0x00000000004848e3 : mov byte ptr [rsi], al ; jne 0x4848c7 ; mov rax, rsi ; ret
0x000000000041e3b5 : mov ch, 0x29 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a68a2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7be3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000411682 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x411655
0x000000000045e37a : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x45e34d
0x00000000004a8876 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8f7f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a992a : mov ch, 0xab ; ret
0x00000000004728f7 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x0000000000494b3d : mov ch, 0xf9 ; call rsi
0x0000000000494bc1 : mov ch, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; call rax
0x000000000042fc76 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000490731 : mov cl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041fbd0 : mov cl, 0x35 ; retf 0x299d
0x00000000004a9381 : mov cl, 0x3f ; retf
0x000000000045473b : mov cl, 0xf ; retf 0xd285
0x0000000000494b21 : mov cl, 0xf9 ; jmp qword ptr [rsi]
0x0000000000458ca4 : mov cl, 0xfa ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000494a69 : mov cl, bh ; call rax
0x0000000000403c57 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043d865 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004273a4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8d52 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042eac4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000043b080 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047493b : mov cl, dl ; and cl, 0xf ; je 0x474967 ; ret
0x00000000004a900c : mov cs, edi ; ret 0x8b36
0x0000000000469452 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x0000000000441dee : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000447680 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048498a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048e13f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418802 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414cef : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041a890 : mov dh, 0 ; ret
0x00000000004383b1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042e614 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040fe24 : mov dh, 0x17 ; test dl, dl ; jne 0x40fe0a ; ret
0x0000000000467a2e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000459d38 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046ff5c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000459d4e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040fd49 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000459d62 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046a87b : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000449571 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000449561 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000449531 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000449551 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000449541 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045f459 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000488127 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x000000000045776d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000004577ae : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a7d42 : mov dh, 0x4e ; ret 0x474c
0x0000000000449575 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000449565 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000449535 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000449545 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000004646e8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x000000000040827a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004111e4 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000458876 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048be71 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000458861 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000045888b : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000458bb4 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000478dcf : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000494b38 : mov dh, 0xb4 ; stc ; inc dword ptr [rsi - 0x4b] ; stc ; call rsi
0x0000000000475942 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c186 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046fcd8 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004884dd : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484daa : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000451d11 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044b651 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000417602 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8f84 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048af0f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042e63a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c6bf : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000044a479 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000428751 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042ead4 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000494bc5 : mov dh, 0xf9 ; call rax
0x0000000000494b05 : mov dh, 0xf9 ; jmp qword ptr [rcx]
0x000000000040f885 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000418811 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414d01 : mov dh, 2 ; ret
0x000000000042ead1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042e611 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000428754 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000044bbfc : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000495034 : mov dl, 0x30 ; cli ; inc dword ptr [rdx + 0x30] ; cli ; call rdx
0x0000000000487841 : mov dl, 0x50 ; and eax, dword ptr [rax] ; jne 0x487875 ; ret
0x0000000000495718 : mov dl, 0x50 ; cli ; jmp qword ptr [rdx]
0x000000000049552c : mov dl, 0x57 ; cli ; inc dword ptr [rdx + 0x57] ; cli ; call rdx
0x000000000042716a : mov dl, 0xbc ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000004afeb9 : mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004afe7d : mov dl, 0xf9 ; call qword ptr [rdx]
0x0000000000494b25 : mov dl, 0xf9 ; jmp qword ptr [rsi + 0x26fff9b2]
0x0000000000494b29 : mov dl, 0xf9 ; jmp qword ptr [rsi]
0x00000000004afecd : mov dl, 0xf9 ; jmp rbx
0x000000000041b0a2 : mov dl, byte ptr [rbx - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431fe0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000046384d : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004a939e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000043b076 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000043b061 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044f491 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000471f39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471f79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472f78 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044f4f7 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044f511 : mov dword ptr [rax + 0x20], esi ; ret
0x0000000000471f3d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000472ffa : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000453f4f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000453f52 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000419525 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044f495 : mov dword ptr [rax + 8], edx ; ret
0x00000000004672fd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x0000000000411572 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041fd4a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000484f6d : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484ebd : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041c852 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484f61 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d2f2 : mov dword ptr [rax], edx ; ret
0x00000000004732eb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c7e1 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x000000000048112f : mov dword ptr [rbp - 0x78], eax ; mov eax, 0x15 ; syscall
0x000000000046aa6f : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000047d181 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x00000000004174b0 : mov dword ptr [rbp], esp ; jmp 0x416c26
0x000000000045bc22 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000414b17 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481dde : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000414eff : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047face : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c73 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485c47
0x0000000000481d13 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488505 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x00000000004885d9 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045c07d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000418bbd : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004186a1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004731aa : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041a33d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004166d2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000471fc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000472e71 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045bc37 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485733 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000418b4c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a539 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000418bc0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414a15 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472f7b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000412421 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400f3e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000458ca3 : mov dword ptr [rcx - 0x76be0006], esi ; ret 0x5be9
0x00000000004542a5 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x000000000043b077 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000043b062 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000043b051 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044d124 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x44d0f7
0x000000000044ca4a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000420fd9 : mov dword ptr [rcx], ebp ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000041b284 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000447e0d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x0000000000447e4b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000447ecd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000004477bb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044783d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044777d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000447880 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004478a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000447861 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000447f33 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000447883 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000418583 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000447f15 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000447f53 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000447865 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000041b281 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b785 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b757 : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004185b3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d331 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000447e8d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000004477dd : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000447e2b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000447ead : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000044779b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004381f5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000438038 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004382d8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000438185 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000437fc8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447cf7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000438115 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000437f58 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004476c7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000447cd9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000437ee8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004476b9 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000447d8b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000437e78 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044772b : mov dword ptr [rdi + 5], edx ; ret
0x0000000000447dab : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000437e08 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044773b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000447d49 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000447dcb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000437d98 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447709 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004847ae : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000418587 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482fc4 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000447d69 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000447d2b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000484464 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004476fb : mov dword ptr [rdi + 8], edx ; ret
0x000000000044b20b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x000000000044a4a5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000044b203 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000044b385 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000044a495 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044b1fb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x000000000044a487 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d2dc : mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000431ca5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431ce3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000043202c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437848 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043220c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004377c8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004323fc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437748 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004325cd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004376b9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004327cd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000437629 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004329cd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000437599 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004323ad : mov dword ptr [rdi - 2], ecx ; ret
0x00000000004321c5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000004323a9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432789 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431e5f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000432786 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432986 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432b86 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ca9 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000431ce7 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000431e5c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f58 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431ea4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004378c8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482eb4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482fbe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000469a7a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000447cc5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000447d17 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x0000000000447ca4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000447684 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000447cf5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000004476c5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000447d47 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000447707 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000447d67 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000447717 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000044a1d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000447728 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000447738 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000447748 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004476b6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004476f8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000044a1e3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000437d9c : mov dword ptr [rdi], ecx ; ret
0x000000000044b37f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000447c94 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x0000000000447cb2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000447d04 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004380a4 : mov dword ptr [rdi], edx ; ret
0x000000000043b05f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484636 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043b04e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043b073 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000044a48c : mov dword ptr [rdi], esi ; ret
0x00000000004308c2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000414b95 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000447217 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000445a47 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004471f9 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000445a39 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004472ab : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000447229 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000445a59 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004472cb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000447249 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000445a69 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000447269 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x00000000004472eb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000445a79 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046c6d0 : mov dword ptr [rdx + 8], eax ; jmp 0x46c6a4
0x0000000000447289 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000044717b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000004459cb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000041a4b0 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x00000000004052a9 : mov dword ptr [rdx - 8], eax ; jmp 0x404fcc
0x00000000004471a4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x00000000004471d2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000447124 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000044cada : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484638 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000484795 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044cd8a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000445974 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484f4d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x000000000041a418 : mov dword ptr [rdx], eax ; ret
0x00000000004909ef : mov dword ptr [rip + 0x22b45b], ebx ; jne 0x4909e1 ; pop rbx ; ret
0x0000000000484a98 : mov dword ptr [rip + 0x23760a], eax ; ret
0x000000000047f3a5 : mov dword ptr [rip + 0x23d045], eax ; ret
0x000000000045bea8 : mov dword ptr [rip + 0x25d30a], edx ; je 0x45bec1 ; ret
0x00000000004508d6 : mov dword ptr [rip + 0x26845c], edx ; pop rbx ; ret
0x00000000004218c6 : mov dword ptr [rip + 0x2980b4], eax ; ret
0x000000000041b7ec : mov dword ptr [rip + 0x29e18e], eax ; ret
0x000000000041b2e7 : mov dword ptr [rip + 0x29e623], eax ; ret
0x000000000041b2fe : mov dword ptr [rip + 0x29e628], eax ; ret
0x000000000041b2bf : mov dword ptr [rip + 0x29e643], eax ; ret
0x000000000041b29f : mov dword ptr [rip + 0x29e65b], eax ; ret
0x000000000041b195 : mov dword ptr [rip + 0x29e7cd], eax ; ret
0x000000000041b185 : mov dword ptr [rip + 0x29e7d5], eax ; ret
0x000000000041b173 : mov dword ptr [rip + 0x29e7d7], edx ; ret
0x000000000041b135 : mov dword ptr [rip + 0x29e7dd], eax ; ret
0x000000000041b125 : mov dword ptr [rip + 0x29e7f5], eax ; ret
0x000000000041b314 : mov dword ptr [rip + 0x2a0bda], eax ; ret
0x00000000004019b3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000044a1e6 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000044a1d9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000478971 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d31e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f512 : mov dword ptr [rsi], eax ; ret
0x000000000047e859 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045e41a : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x45e3e6
0x000000000041ea8a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041eb47 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000045463c : mov dword ptr [rsp + 0x50], eax ; call 0x450916
0x000000000041ea8f : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000040b87b : mov dword ptr [rsp + 8], ecx ; call 0x408386
0x000000000041330e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041f0a4 : mov dword ptr [rsp + 8], edx ; call 0x41b346
0x000000000041f0a3 : mov dword ptr [rsp + 8], r10d ; call 0x41b347
0x0000000000489ce3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004153f2 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000418705 : mov dword ptr [rsp], edi ; call 0x414995
0x00000000004672fc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x0000000000411571 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000475a4c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x000000000044d123 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x44d0f8
0x000000000044ca49 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000044cad9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000044a494 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004321c0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000447670 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400db7 : mov eax, 0 ; leave ; ret
0x000000000044b6cb : mov eax, 0x10 ; pop rbx ; ret
0x0000000000475789 : mov eax, 0x101 ; syscall
0x0000000000475702 : mov eax, 0x106 ; syscall
0x000000000044d887 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047e029 : mov eax, 0x14 ; syscall
0x000000000044f564 : mov eax, 0x15 ; syscall
0x00000000004255a0 : mov eax, 0x16 ; ret
0x000000000044ca30 : mov eax, 0x18 ; syscall
0x000000000044f1c3 : mov eax, 0x19 ; syscall
0x000000000044db20 : mov eax, 0x1c ; syscall
0x000000000044b6d9 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004886a0 : mov eax, 0x26 ; syscall
0x0000000000485410 : mov eax, 0x27 ; syscall
0x000000000044b6d2 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000475630 : mov eax, 0x3f ; syscall
0x000000000044b6e7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6e9b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000044cf27 : mov eax, 0x48 ; syscall
0x000000000044d20b : mov eax, 0x4f ; syscall
0x000000000045aff8 : mov eax, 0x5b000000 ; pop r12 ; ret
0x000000000044b6e0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044f1f0 : mov eax, 0x63 ; syscall
0x0000000000475660 : mov eax, 0x66 ; syscall
0x0000000000475680 : mov eax, 0x68 ; syscall
0x00000000004afeb4 : mov eax, 0x68000045 ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000475670 : mov eax, 0x6b ; syscall
0x0000000000475690 : mov eax, 0x6c ; syscall
0x000000000044b6bd : mov eax, 0x80 ; pop rbx ; ret
0x000000000041e973 : mov eax, 0x840f0029 ; ret 0xfffa
0x0000000000489aef : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000486d04 : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004019ad : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044daf0 : mov eax, 0xa ; syscall
0x000000000044dac0 : mov eax, 0xb ; syscall
0x000000000040fed2 : mov eax, 0xba ; syscall
0x0000000000474f00 : mov eax, 0xc9 ; syscall
0x000000000047b6aa : mov eax, 0xca ; syscall
0x000000000040ff00 : mov eax, 0xe ; syscall
0x000000000044c7a5 : mov eax, 0xe5 ; syscall
0x000000000040fede : mov eax, 0xea ; syscall
0x000000000045c0a1 : mov eax, 0xf ; syscall
0x000000000045b7bc : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000044d126 : mov eax, 0xffffffff ; jmp 0x44d0f5
0x0000000000414001 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413d87 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000414f13 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000413d4b : mov eax, 0xffffffff ; ret
0x0000000000475ec1 : mov eax, 1 ; leave ; ret
0x0000000000484615 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000419282 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048693d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fe20 : mov eax, 1 ; pop rbx ; ret
0x00000000004699df : mov eax, 1 ; ret
0x000000000044cdea : mov eax, 1 ; syscall
0x0000000000474753 : mov eax, 2 ; ret
0x00000000004749b1 : mov eax, 3 ; ret
0x000000000044d0ba : mov eax, 3 ; syscall
0x000000000048e19f : mov eax, 4 ; jne 0x48e1c8 ; ret
0x00000000004749c1 : mov eax, 4 ; ret
0x000000000044cabe : mov eax, 4 ; syscall
0x00000000004749d1 : mov eax, 5 ; ret
0x000000000044cb0c : mov eax, 5 ; syscall
0x00000000004749e1 : mov eax, 6 ; ret
0x00000000004756ae : mov eax, 6 ; syscall
0x00000000004749f1 : mov eax, 7 ; ret
0x000000000044b6c4 : mov eax, 8 ; pop rbx ; ret
0x0000000000451d60 : mov eax, 8 ; ret
0x000000000044ceb0 : mov eax, 8 ; syscall
0x000000000044da1c : mov eax, 9 ; syscall
0x00000000004138a1 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000473404 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000419468 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x419469 ; ret
0x00000000004266a1 : mov eax, dword ptr [rax + 2] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000481bd1 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000402350 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x402362 ; call rax
0x000000000046d07a : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045beef : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000461c4d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048af59 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048af41 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fe39 : mov eax, dword ptr [rax] ; ret
0x000000000047c720 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c541 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004186ed : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f69 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000418dd9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000454639 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x450919
0x0000000000445a44 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000445a56 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000445a66 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000445a76 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000445a86 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043fc5a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000441532 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004471d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000445a10 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000447121 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000445971 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004471a1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000004459f1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004b5f54 : mov eax, dword ptr [rcx] ; retf 2
0x000000000047cd26 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047325e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000041a420 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000041a448 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004906ed : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490704 ; call rax
0x0000000000473401 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041a771 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d2b1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d301 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d341 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d3a1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d391 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d351 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000046218f : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e21 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487e38 ; ret
0x000000000041a415 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041b311 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a0bda], eax ; ret
0x000000000048f605 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f617 ; ret
0x000000000048f620 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f637 ; ret
0x000000000048f850 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f867 ; ret
0x000000000047e80c : mov eax, dword ptr [rdx + 4] ; ret
0x000000000044bbf7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x44bbe9 ; ret
0x000000000043d866 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000041a401 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x41a400 ; ret
0x0000000000485610 : mov eax, dword ptr [rip + 0x23734a] ; ret
0x000000000047f50b : mov eax, dword ptr [rip + 0x23ced7] ; mov qword ptr [rsi], rax ; ret
0x000000000047f49a : mov eax, dword ptr [rip + 0x23cf50] ; ret
0x000000000045aea1 : mov eax, dword ptr [rip + 0x261131] ; ret
0x00000000004529a1 : mov eax, dword ptr [rip + 0x26a021] ; ret
0x000000000041a751 : mov eax, dword ptr [rip + 0x29eae9] ; ret
0x000000000048e1f2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048b081 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048b054 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048b071 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e211 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046d03f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x00000000004621d9 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000462839 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000047246f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d376 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044dd06 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401333 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004565ac : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044d0fa : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044d07d : mov eax, dword ptr [rsp + 0xc] ; jne 0x44d052 ; neg eax ; jmp 0x44d052
0x000000000041024d : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486daf : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048aaea : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fe38 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041c9c0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470bf3 : mov eax, eax ; jmp 0x470bc5
0x000000000044cd49 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042479f : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044b702 : mov eax, eax ; ret
0x0000000000474d74 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x000000000044c512 : mov eax, eax ; syscall
0x0000000000444011 : mov eax, eax ; vzeroupper ; ret
0x00000000004124cb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044e6e4 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x00000000004125e3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041209e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413cf2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041482d : mov eax, ebp ; syscall
0x00000000004845a3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000488597 : mov eax, ebx ; jne 0x4885b5 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048867e : mov eax, ebx ; jne 0x48869d ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004127c8 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004167a5 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d920 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000414b1b : mov eax, ebx ; pop rbx ; ret
0x0000000000484467 : mov eax, ecx ; adc eax, eax ; ret
0x00000000004671e5 : mov eax, ecx ; ret
0x000000000040fecb : mov eax, ecx ; syscall
0x0000000000414a13 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041cc55 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000414a44 : mov eax, edi ; ret
0x000000000041c855 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004672ae : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000046988a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412371 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b706 : mov eax, edx ; pop rbx ; ret
0x000000000041c861 : mov eax, edx ; ret
0x000000000040142a : mov eax, edx ; syscall
0x0000000000482817 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000415cea : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000470f24 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041fd1d : mov eax, esi ; pop rbx ; ret
0x000000000041fd51 : mov eax, esi ; ret
0x000000000044c502 : mov eax, esi ; syscall
0x0000000000470058 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041482c : mov eax, r13d ; syscall
0x0000000000470bf2 : mov eax, r8d ; jmp 0x470bc6
0x000000000044c511 : mov eax, r8d ; syscall
0x00000000004671e4 : mov eax, r9d ; ret
0x00000000004145ce : mov eax, r9d ; syscall
0x00000000004a8d94 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000494d59 : mov ebp, 0xbec0fff9 ; stc ; call qword ptr [rax]
0x000000000049f264 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a431d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004434a8 : mov ebp, 0xf80148c0 ; ret
0x000000000044372c : mov ebp, 0xf80148c6 ; ret
0x00000000004a7ac6 : mov ebp, 0xfb67d10d ; ret
0x000000000046a52e : mov ebp, 0xfffff730 ; call rax
0x000000000045effc : mov ebp, 0xfffff758 ; call rax
0x000000000046d529 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000466405 : mov ebp, 0xffffff40 ; call rax
0x0000000000414827 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048d7d3 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000048ea1a : mov ebp, dword ptr [rsp + 8] ; jmp 0x48ea38
0x00000000004711b9 : mov ebp, eax ; jmp 0x471182
0x000000000047e526 : mov ebp, eax ; jmp 0x47e4f7
0x000000000048281d : mov ebp, ecx ; nop ; jmp rdx
0x00000000004a8ae4 : mov ebx, 0x1b5c347e ; jmp 0x4a8abc
0x0000000000437a87 : mov ebx, 0x46f00ff2 ; retf
0x0000000000426831 : mov ebx, 0x480001f2 ; cmovne eax, edx ; ret
0x000000000047e521 : mov ebx, 0x48fffcf4 ; mov ebp, eax ; jmp 0x47e4fc
0x00000000004325e4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000432602 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000044f2d4 : mov ebx, 0xafb8341 ; je 0x44f2e3 ; ret
0x00000000004a4c29 : mov ebx, 0xbd08fffc ; cld ; jmp rax
0x00000000004a431b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000411684 : mov ebx, 1 ; jmp 0x411653
0x000000000045e37c : mov ebx, 1 ; jmp 0x45e34b
0x00000000004a9104 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000403756 : mov ebx, edi ; test rax, rax ; je 0x403766 ; call rax
0x00000000004754f0 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047fb8d : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000040fec6 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004757ac : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a6f99 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a8a6e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000400b32 : mov ecx, 0x8948004a ; in eax, 0xe8 ; ret
0x00000000004a4319 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000475a10 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000046d07d : mov ecx, 1 ; jmp rax
0x000000000043b05c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000043040e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000004733db : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043d863 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a8f24 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a8f59 ; retf 0x32dd
0x0000000000432783 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432983 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432b83 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004476a0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004476e1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004381f3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000438183 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000438113 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000438035 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437fc5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437f55 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437ee5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437e75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437e05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437d95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004382d5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000447681 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481cc7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c55 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000473a11 : mov ecx, eax ; jmp 0x4739db
0x0000000000451c9b : mov ecx, ebp ; call rbx
0x0000000000419200 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000044a462 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041923a : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000474375 : mov ecx, esi ; call rbx
0x000000000048c67c : mov edi, 0x148015b ; retf
0x000000000046455d : mov edi, 0x2948fff9 ; ret
0x000000000046084a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400a8c : mov edi, 0x6bac10 ; jmp rax
0x000000000040297d : mov edi, 0x83000057 ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000045bd01 : mov edi, 0x89480003 ; and r8b, bpl ; ret
0x000000000049610c : mov edi, 0xa4fffb68 ; sti ; call qword ptr [rdi]
0x000000000044cb94 : mov edi, 0xffffff9c ; syscall
0x0000000000403d07 : mov edi, 1 ; call 7
0x000000000048d006 : mov edi, 1 ; call r14
0x000000000048cf5c : mov edi, 1 ; call rax
0x000000000048dccc : mov edi, 1 ; jmp rax
0x0000000000410ce4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044e13c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000414826 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045effb : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046a52d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000466404 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d651 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044dc24 : mov edi, dword ptr [rbp] ; call r12
0x0000000000410249 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044dbfe : mov edi, dword ptr [rbx] ; call r12
0x000000000047c90f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f4e6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f4c9 ; ret
0x00000000004a7d86 : mov edi, dword ptr [rdx] ; ret
0x000000000048846f : mov edi, dword ptr [rsp + 0x10] ; call 0x484ea6
0x000000000048ef2e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000047580e : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x00000000004826f4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000454375 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000454240 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000454c51 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000454e29 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000455113 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x000000000045574b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000045870f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000454959 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000454665 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000456b8a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000459336 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00000000004565a7 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044cfa1 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040132e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000418e0b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044dd01 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000418716 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048de1c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000044bf4a : mov edi, eax ; call 0x4004b0
0x0000000000425604 : mov edi, eax ; call rcx
0x000000000040fed0 : mov edi, eax ; mov eax, 0xba ; syscall
0x00000000004741e8 : mov edi, ebp ; add r15, r12 ; call 0x400497
0x0000000000469d10 : mov edi, ebp ; call 0x4004b1
0x0000000000423b23 : mov edi, ebp ; call 0x41fd64
0x0000000000473e2f : mov edi, ebp ; call 0x450914
0x0000000000489b8e : mov edi, ebp ; call qword ptr [r14]
0x0000000000401ace : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000489c62 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489d3e : mov edi, ebp ; call qword ptr [rcx]
0x000000000045b66c : mov edi, ebp ; call r12
0x000000000048ed0c : mov edi, ebp ; call r14
0x0000000000424986 : mov edi, ebp ; call rax
0x0000000000474221 : mov edi, ebp ; call rbx
0x000000000044da1a : mov edi, ebp ; mov eax, 9 ; syscall
0x00000000004145cc : mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000474372 : mov edi, ebp ; mov r9, r14 ; call rbx
0x00000000004102d9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045e892 : mov edi, ebx ; call 0x400440
0x0000000000453a58 : mov edi, ebx ; call 0x40049c
0x0000000000473ee6 : mov edi, ebx ; call 0x450914
0x0000000000451f9e : mov edi, ebx ; call r14
0x00000000004153f6 : mov edi, ebx ; call rax
0x000000000044ce1e : mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044d0dc : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000004187ad : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000004722ef : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044cd4e : mov edi, ebx ; xor eax, eax ; syscall
0x000000000047f463 : mov edi, ecx ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000040c17a : mov edi, edi ; call 0x4221a8
0x0000000000473768 : mov edi, edi ; call r12
0x0000000000413313 : mov edi, edi ; call rax
0x0000000000407b5d : mov edi, edi ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000045257b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004848e1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4848c9 ; mov rax, rsi ; ret
0x000000000044c500 : mov edi, edx ; mov eax, esi ; syscall
0x000000000044c50f : mov edi, edx ; mov eax, r8d ; syscall
0x000000000045b7c3 : mov edi, esi ; call rbx
0x000000000045baa1 : mov edi, esi ; call rdx
0x000000000041f0a1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x41b349
0x000000000048dd24 : mov edi, esp ; call r15
0x0000000000473490 : mov edi, esp ; call rbx
0x0000000000407a19 : mov edi, esp ; jmp 0x4079ea
0x000000000044d209 : mov edi, esp ; mov eax, 0x4f ; syscall
0x00000000004145cb : mov edi, r13d ; mov eax, r9d ; syscall
0x000000000044b606 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000414b96 : mov edx, 0x130 ; pop rbx ; ret
0x000000000045737a : mov edx, 0x180 ; call 0x403e37
0x000000000045739e : mov edx, 0x19f ; call 0x403e37
0x00000000004573bd : mov edx, 0x1be ; call 0x403e37
0x000000000045735b : mov edx, 0x1d0 ; call 0x403e37
0x000000000045733c : mov edx, 0x1da ; call 0x403e37
0x0000000000437a07 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004327e4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000432802 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000044f146 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000045819e : mov edx, 0x89fffff3 ; retf 0xe283
0x00000000004a4afd : mov edx, 0xba3cfffc ; cld ; jmp rsp
0x00000000004a723e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d10be
0x000000000048685c : mov edx, 0xe8000000 ; retf
0x000000000048be91 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000454017 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e78c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045c164 : mov edx, 8 ; mov eax, ecx ; syscall
0x000000000045ba9a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048de20 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484f49 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000044152f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043fc5d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484f5d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048ed09 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x00000000004476c2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004476b3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000447703 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000447713 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004321c1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000432580 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431e11 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000447cb0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000438260 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000447d01 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004380a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000447c91 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000447671 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004826f9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048cf59 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000425609 : mov edx, eax ; jmp 0x4255bc
0x000000000045988a : mov edx, eax ; jmp 0x459841
0x00000000004599c1 : mov edx, eax ; jmp 0x459980
0x0000000000459c8f : mov edx, eax ; jmp 0x459c46
0x0000000000459d06 : mov edx, eax ; jmp 0x459cbd
0x0000000000470752 : mov edx, eax ; jmp 0x470720
0x0000000000475f5e : mov edx, eax ; jmp 0x475f52
0x000000000040fedc : mov edx, eax ; mov eax, 0xea ; syscall
0x000000000044d0de : mov edx, eax ; mov eax, 3 ; syscall
0x0000000000473a06 : mov edx, ebp ; mov rsi, r12 ; call 0x40043f
0x0000000000489b89 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c5d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d39 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b43 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000475700 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044f1c1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000044b128 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004104f9 : mov edx, esp ; call 0x410198
0x000000000047596d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000040fedb : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000459139 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000456682 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000475b39 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000041daff : mov esi, 0x39480029 ; ret
0x0000000000462074 : mov esi, 0x3d8d48c7 ; ret
0x0000000000453f4c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a8d46 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000047596f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a8de3 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004a6eca : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044f358 : mov esi, 0x80 ; syscall
0x0000000000453102 : mov esi, 0x83480147 ; ret
0x000000000047e899 : mov esi, 0xaf0f4907 ; retf 0x14c
0x0000000000465a3e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004a431e : mov esi, 0xc2c1c0bf ; ret
0x000000000044b594 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000004621dc : mov esi, 1 ; jmp rax
0x00000000004702bc : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044db98 : mov esi, 2 ; jmp rax
0x000000000044dbab : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000402254 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x402266 ; call rsi
0x000000000048d64d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000045257e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048ef2b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048ddd5 : mov esi, dword ptr [rsi] ; call r12
0x000000000044a493 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000451c96 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000424981 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000454e24 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000454954 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000459331 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000422399 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000453a54 : mov esi, dword ptr [rsp] ; mov rdi, rbx ; call 0x4004a0
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x000000000044ce1c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044cd4c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000425601 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000423fb2 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004145c9 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000423b20 : mov esi, ebx ; mov rdi, r13 ; call 0x41fd67
0x000000000047fb90 : mov esi, ebx ; syscall
0x000000000044d885 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000044cb92 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000048dcca : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045eff8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e7f3 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e7d8 ; ret
0x000000000044cabc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000044cb0a : mov esi, edx ; mov eax, 5 ; syscall
0x00000000004756ac : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000466401 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048dd21 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000473a09 : mov esi, esp ; call 0x40043c
0x0000000000489b8c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c60 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d3c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b46 : mov esi, esp ; mov edi, ebp ; call rax
0x00000000004722ec : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000495a8d : mov esp, 0x1bd0fffa ; sti ; jmp rax
0x000000000040f61b : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042dea1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042ded1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042dec1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004b1eb8 : mov esp, 0x74000065 ; retf 0xfffa
0x0000000000419aa2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000468426 : mov esp, 0x9024 ; add al, ch ; out dx, eax ; ret
0x0000000000454b6d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000495c58 : mov esp, 0x99fffb5a ; pop rdx ; sti ; jmp rsi
0x0000000000454fef : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000443aa3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004710c4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x000000000042716b : mov esp, 0xf480001 ; ret 0x66c3
0x000000000042df8b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042deb1 : mov esp, 0xf80148c0 ; ret
0x000000000042e3a2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004007e6 : mov esp, eax ; call 0x44b588
0x00000000004006af : mov esp, eax ; call 0x44ba48
0x000000000048281a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d7d7 : mov esp, ecx ; ret
0x000000000044e140 : mov esp, esi ; call r15
0x000000000041b7ee : mov fs, ecx ; sub dword ptr [rax], eax ; ret
0x0000000000455dfd : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x000000000045a37d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048af43 : mov qword ptr [r10], r8 ; ret
0x000000000043b050 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044f490 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000471f38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471f78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472f77 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044f4f6 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044f510 : mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000471f3c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000472ff9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000419524 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044f494 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484f6c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484ebc : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484f60 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d2f1 : mov qword ptr [rax], rdx ; ret
0x00000000004732ea : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c7e0 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000048112e : mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x000000000047d180 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x000000000045bc21 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000414b16 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481ddd : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000414efe : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047facd : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c72 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485c48
0x0000000000481d12 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488504 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004885d8 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004186a0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000041a33c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485732 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a538 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412420 : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000048303e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000447ecc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000044783c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044781c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044787f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044789f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000447860 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000418582 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b784 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b756 : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004185b2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d330 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000447e8c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000004477dc : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000447eac : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000004477fc : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000438037 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437fc7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437f57 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000437ee7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447d8a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000437e77 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044772a : mov qword ptr [rdi + 5], rdx ; ret
0x0000000000447daa : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000437e07 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044773a : mov qword ptr [rdi + 6], rdx ; ret
0x0000000000447dca : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000437d97 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044774a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000484463 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482fc3 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004847ad : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000418586 : mov qword ptr [rdi + 8], rax ; ret
0x000000000044b1fa : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x000000000044a486 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d2db : mov qword ptr [rdi + rsi*8], rdx ; ret
0x0000000000431ca4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431ce2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000043202b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437847 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043220b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004377c7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004323fb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000437747 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004325cc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004376b8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004327cc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000437628 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004329cc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000437598 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482eb9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431ca8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431ce6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431e5b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f57 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431ea3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004378c7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000469a79 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482e88 : mov qword ptr [rdi], r9 ; ret
0x0000000000447d16 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000447706 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000447716 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000447727 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000447737 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000447747 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004476f7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000437d9b : mov qword ptr [rdi], rcx ; ret
0x000000000044b37e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000447d03 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004380a3 : mov qword ptr [rdi], rdx ; ret
0x000000000043b04d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044a48b : mov qword ptr [rdi], rsi ; ret
0x0000000000414b94 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000004472aa : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000445a9a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000004472ca : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x0000000000445aba : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000004472ea : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x0000000000445ada : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046c6cf : mov qword ptr [rdx + 8], rax ; jmp 0x46c6a5
0x000000000044717a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x00000000004459ca : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000041a4af : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000447123 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000445973 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484f4c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000041a417 : mov qword ptr [rdx], rax ; ret
0x0000000000484a97 : mov qword ptr [rip + 0x23760a], rax ; ret
0x000000000047f3a4 : mov qword ptr [rip + 0x23d045], rax ; ret
0x00000000004218c5 : mov qword ptr [rip + 0x2980b4], rax ; ret
0x000000000041b7eb : mov qword ptr [rip + 0x29e18e], rax ; ret
0x000000000041b2e6 : mov qword ptr [rip + 0x29e623], rax ; ret
0x000000000041b2be : mov qword ptr [rip + 0x29e643], rax ; ret
0x000000000041b29e : mov qword ptr [rip + 0x29e65b], rax ; ret
0x000000000041b194 : mov qword ptr [rip + 0x29e7cd], rax ; ret
0x000000000041b184 : mov qword ptr [rip + 0x29e7d5], rax ; ret
0x000000000041b172 : mov qword ptr [rip + 0x29e7d7], rdx ; ret
0x000000000041b134 : mov qword ptr [rip + 0x29e7dd], rax ; ret
0x000000000041b124 : mov qword ptr [rip + 0x29e7f5], rax ; ret
0x00000000004019b2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000478970 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f511 : mov qword ptr [rsi], rax ; ret
0x000000000047e858 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045e419 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45e3e7
0x000000000045463b : mov qword ptr [rsp + 0x50], rax ; call 0x450917
0x000000000041ea8e : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040b87a : mov qword ptr [rsp + 8], rcx ; call 0x408387
0x000000000041330d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489ce2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004153f1 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000418704 : mov qword ptr [rsp], rdi ; call 0x414996
0x000000000045bed5 : mov qword ptr fs:[rdx], rax ; ret
0x000000000044a485 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044f1c0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000437a06 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000432801 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004a723d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d10bf
0x000000000045c163 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000437a86 : mov r11d, 0x46f00ff2 ; retf
0x0000000000432601 : mov r11d, 0x4f7f0ff3 ; retf
0x0000000000411683 : mov r11d, 1 ; jmp 0x411654
0x000000000045e37b : mov r11d, 1 ; jmp 0x45e34c
0x00000000004007e5 : mov r12, rax ; call 0x44b589
0x00000000004006ae : mov r12, rax ; call 0x44ba49
0x0000000000494af4 : mov r12b, 0xf9 ; call rcx
0x000000000044e13f : mov r12d, r14d ; call r15
0x000000000048d64c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d650 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000407a18 : mov r15, r12 ; jmp 0x4079eb
0x000000000048af40 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d8fe : mov r8b, 0xe8 ; retf
0x0000000000451c9a : mov r9, r13 ; call rbx
0x0000000000474374 : mov r9, r14 ; call rbx
0x00000000004199b0 : mov rax, -1 ; ret
0x000000000045c0a0 : mov rax, 0xf ; syscall
0x0000000000474990 : mov rax, 1 ; ret
0x00000000004749a0 : mov rax, 2 ; ret
0x00000000004749b0 : mov rax, 3 ; ret
0x00000000004749c0 : mov rax, 4 ; ret
0x00000000004749d0 : mov rax, 5 ; ret
0x00000000004749e0 : mov rax, 6 ; ret
0x00000000004749f0 : mov rax, 7 ; ret
0x0000000000486dae : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cd25 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004138a0 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000473403 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000481bd0 : mov rax, qword ptr [rax + 8] ; ret
0x000000000040234f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x402363 ; call rax
0x000000000046d079 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045beee : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000461c4c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d282 : mov rax, qword ptr [rax] ; ret
0x000000000047c540 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004186ec : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f68 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000418dd8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000445970 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004906ec : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490705 ; call rax
0x0000000000473400 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041a770 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d2b0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d300 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d340 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d3a0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d390 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d350 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000046218e : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e20 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487e39 ; ret
0x000000000041a414 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041a400 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x41a401 ; ret
0x000000000047f499 : mov rax, qword ptr [rip + 0x23cf50] ; ret
0x000000000045aea0 : mov rax, qword ptr [rip + 0x261131] ; ret
0x00000000004529a0 : mov rax, qword ptr [rip + 0x26a021] ; ret
0x000000000041a750 : mov rax, qword ptr [rip + 0x29eae9] ; ret
0x000000000048e1f1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048b080 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048b053 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048b070 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e210 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046d03e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004621d8 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000462838 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d375 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044dd05 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401332 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004565ab : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000041024c : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048aae9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000470057 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044e0cd : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c9bf : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042479e : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000444010 : mov rax, r8 ; vzeroupper ; ret
0x000000000044e6e3 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004125e2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415e26 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4aa : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000416871 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004167a4 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d91f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000414b1a : mov rax, rbx ; pop rbx ; ret
0x000000000047e85b : mov rax, rcx ; ret
0x0000000000414a12 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041cc54 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000414a43 : mov rax, rdi ; ret
0x000000000041c854 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047543a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041c20c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000044b705 : mov rax, rdx ; pop rbx ; ret
0x000000000041c860 : mov rax, rdx ; ret
0x000000000041fd1c : mov rax, rsi ; pop rbx ; ret
0x000000000041fd50 : mov rax, rsi ; ret
0x000000000048d7d2 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048ea19 : mov rbp, qword ptr [rsp + 8] ; jmp 0x48ea39
0x000000000048281c : mov rbp, r9 ; nop ; jmp rdx
0x00000000004711b8 : mov rbp, rax ; jmp 0x471183
0x000000000047e525 : mov rbp, rax ; jmp 0x47e4f8
0x0000000000403755 : mov rbx, rdi ; test rax, rax ; je 0x403767 ; call rax
0x00000000004754ef : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000047fb8c : mov rbx, rsp ; mov rsi, rbx ; syscall
0x00000000004476e0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481cc6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c54 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000473a10 : mov rcx, rax ; jmp 0x4739dc
0x000000000044a461 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044e7fb : mov rdi, qword ptr [r13] ; call r12
0x0000000000410248 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000410ce3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044e13b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045effa : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046a52c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000466403 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044dc23 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044dbfd : mov rdi, qword ptr [rbx] ; call r12
0x000000000048846e : mov rdi, qword ptr [rsp + 0x10] ; call 0x484ea7
0x000000000048ef2d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000454374 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000454c50 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000454e28 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000455112 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045574a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045870e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000454958 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000456b89 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000459335 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000418715 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048de1b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dd23 : mov rdi, r12 ; call r15
0x000000000047348f : mov rdi, r12 ; call rbx
0x000000000044d208 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004741e7 : mov rdi, r13 ; add r15, r12 ; call 0x400498
0x0000000000423b22 : mov rdi, r13 ; call 0x41fd65
0x000000000045b66b : mov rdi, r13 ; call r12
0x000000000048ed0b : mov rdi, r13 ; call r14
0x0000000000492180 : mov rdi, r13 ; call rax
0x00000000004102d8 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045b7c2 : mov rdi, r14 ; call rbx
0x000000000045baa0 : mov rdi, r14 ; call rdx
0x000000000040c179 : mov rdi, r15 ; call 0x4221a9
0x0000000000473767 : mov rdi, r15 ; call r12
0x0000000000413312 : mov rdi, r15 ; call rax
0x000000000045257a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044bf49 : mov rdi, rax ; call 0x4004b1
0x0000000000425603 : mov rdi, rax ; call rcx
0x000000000040fecf : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000473e2e : mov rdi, rbp ; call 0x450915
0x0000000000473e2d : mov rdi, rbp ; call 0x450916
0x0000000000424985 : mov rdi, rbp ; call rax
0x0000000000474220 : mov rdi, rbp ; call rbx
0x000000000044da19 : mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000474371 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000045e891 : mov rdi, rbx ; call 0x400441
0x0000000000453a57 : mov rdi, rbx ; call 0x40049d
0x0000000000473ee5 : mov rdi, rbx ; call 0x450915
0x0000000000451f9d : mov rdi, rbx ; call r14
0x00000000004153f5 : mov rdi, rbx ; call rax
0x00000000004187ac : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004722ee : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048cf58 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048ed08 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048de1f : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484f48 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484f5c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000431e10 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004380a0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004826f8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004104f8 : mov rdx, r12 ; call 0x410199
0x0000000000473a05 : mov rdx, r13 ; mov rsi, r12 ; call 0x400440
0x0000000000489b88 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c5c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d38 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b42 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000470751 : mov rdx, r8 ; jmp 0x470721
0x0000000000425608 : mov rdx, rax ; jmp 0x4255bd
0x0000000000459889 : mov rdx, rax ; jmp 0x459842
0x00000000004599c0 : mov rdx, rax ; jmp 0x459981
0x0000000000459c8e : mov rdx, rax ; jmp 0x459c47
0x0000000000459d05 : mov rdx, rax ; jmp 0x459cbe
0x0000000000475f5d : mov rdx, rax ; jmp 0x475f53
0x00000000004756ff : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000044b127 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000453a53 : mov rsi, qword ptr [r12] ; mov rdi, rbx ; call 0x4004a1
0x000000000048ddd4 : mov rsi, qword ptr [r14] ; call r12
0x000000000048ef2a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000402253 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x402267 ; call rsi
0x000000000045257d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000451c95 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000424980 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000422398 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000473a08 : mov rsi, r12 ; call 0x40043d
0x0000000000489b8b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c5f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d3b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b45 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048dd20 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x000000000044cd4b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000425600 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004145c8 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000423b1f : mov rsi, rbx ; mov rdi, r13 ; call 0x41fd68
0x000000000047fb8f : mov rsi, rbx ; syscall
0x000000000044cb91 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000048dcc9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e7f2 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e7d9 ; ret
0x000000000044cabb : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000044cb09 : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000004756ab : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000482819 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d7d6 : mov rsp, rcx ; ret
0x000000000046db66 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000043b075 : mov word ptr [r9 - 2], cx ; ret
0x0000000000447e0c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000044777c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000447f14 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000447864 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004382d7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000447cd8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000004476b8 : mov word ptr [rdi + 4], dx ; ret
0x0000000000447d2a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000004476fa : mov word ptr [rdi + 8], dx ; ret
0x000000000044b20a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x000000000044a4a4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004323ac : mov word ptr [rdi - 2], cx ; ret
0x00000000004321c4 : mov word ptr [rdi - 2], dx ; ret
0x00000000004323a8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000447683 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000044a1e2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004382db : mov word ptr [rdi], cx ; ret
0x000000000044b394 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000447c93 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000438343 : mov word ptr [rdi], dx ; ret
0x000000000043b072 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000044a4a9 : mov word ptr [rdi], si ; ret
0x00000000004471f8 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000445a38 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004261d0 : mov word ptr [rdx - 0x7ab20003], fs ; test byte ptr [rdi], 0x84 ; ret
0x00000000004471a3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000004459f3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000044a1e5 : mov word ptr [rsi - 2], cx ; ret
0x0000000000406b1b : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000044a4a3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000494d20 : movabs al, byte ptr [0x40fff9c0f0fff9bf] ; ret 0xfff9
0x000000000044a977 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000401395 : movabs byte ptr [0x1d89002babcc0589], al ; retf 0x2bab
0x00000000004a8e83 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004a8ae1 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x000000000046ed69 : movabs dword ptr [0x850fc6394900002d], eax ; retf 0xffde
0x00000000004a6f27 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004a77da : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000430932 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043092e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004309dc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040febc : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000447750 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447fcd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044791d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000437faf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000437f3f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000437ecf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000437e5f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447f6d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004478bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000437def : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447f8d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004478dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000437d7f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447fad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000004478fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043839f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043832f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004382bf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043824f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004381df : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043816f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004380ff : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043808f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043801f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b17d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043750b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043757b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000447de4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000447764 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004477a7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000447797 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000447818 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004477d8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004477f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000447778 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000447919 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004478b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004478d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004478f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000437d2a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000437d84 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447751 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447fce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044791e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000437fb0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000437f40 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000437ed0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000437e60 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447f6e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004478be : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000437df0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447f8e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004478de : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000437d80 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447fae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000004478fe : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004383a0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000438330 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004382c0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000438250 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004381e0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000438170 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000438100 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000438090 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000438020 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044b105 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044b17e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043750c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043757c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437cb7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437c37 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437ba7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437b27 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437aa7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437a27 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004379a7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437927 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004378a7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437827 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004377a7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437727 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437697 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437607 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437577 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000447de5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000447765 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004477b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004477a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000447798 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000447819 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004477d9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004477f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000447779 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044791a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004478ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004478da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004478fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000437d2b : movq qword ptr [rdi], mm0 ; ret
0x0000000000437d85 : movq qword ptr [rdi], mm1 ; ret
0x000000000046da0f : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000045acec : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044a405 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004b1a49 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rcx]
0x00000000004b1a31 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call qword ptr [rdi]
0x00000000004a7c02 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a8e5d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a8eb6 ; jmp 0x4a8df7
0x000000000044a3f7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000048f7f8 : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x0000000000496110 : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; call qword ptr [rdi]
0x00000000004961ac : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; jmp rdx
0x00000000004a6ae5 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000047fa7c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x000000000046da0e : movsb byte ptr [rdi], byte ptr cs:[rsi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000412955 : movsd dword ptr [rdi], dword ptr [rsi] ; call 0x44f383
0x00000000004a90fd : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a9495 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8d51 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046d127 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000482ee2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004218d3 : movsd dword ptr [rdi], dword ptr [rsi] ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a77e1 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048aee4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480fab : movsx eax, cl ; neg eax ; ret
0x0000000000481050 : movsx eax, dl ; sub eax, ecx ; ret
0x00000000004273a1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000043598b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000043040b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000048c188 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000004044ee : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048ca89 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048b137 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048af11 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c6c1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000048af12 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000418bbe : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044f1f1 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004b1c1d : movsxd rax, dword ptr [rax] ; add byte ptr [rax], dl ; std ; call rdx
0x00000000004a7b80 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004044ef : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x0000000000450a1f : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x00000000004509a8 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000046260d : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000047c21d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046fe47 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048c6c2 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x000000000044a45d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047c21e : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x000000000047cb45 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048b138 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x0000000000470477 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000047cb46 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000404286 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044c744 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000464767 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000048ca8a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000046fcdb : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000044b5c8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000044b682 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048c189 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x000000000048539d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000044a097 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000044a044 : movsxd rax, ecx ; ret
0x00000000004a89aa : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x000000000044a089 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042ed3d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000447519 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000425f26 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x000000000043598c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000043040c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042ed3e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000044751a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004266b9 : movsxd rcx, dword ptr [rdx + 2] ; add bh, dh ; ret 0
0x00000000004273a2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000044b5f0 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044a0d7 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040f887 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000040354f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000403550 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000426759 : movsxd rdi, dword ptr [rdx + rax] ; add bh, dh ; ret 0
0x000000000040f888 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004949f9 : movsxd rdi, ecx ; jmp qword ptr [rax + 0x20fff964]
0x00000000004304df : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004304e0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040f59f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000044c9b9 : movsxd rdx, eax ; jmp 0x44c763
0x0000000000403050 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000403051 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x00000000004494fc : movsxd rsi, esi ; ret 0x7520
0x000000000044a5bf : movups xmmword ptr [r11], xmm4 ; ret
0x000000000044a646 : movups xmmword ptr [r11], xmm8 ; ret
0x000000000044a647 : movups xmmword ptr [rbx], xmm0 ; ret
0x000000000044a5c0 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000044a5bb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044a5ba : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044a642 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044a3a2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044a529 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044a506 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000044a39f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048aee5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475941 : movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004884dc : movzx eax, al ; neg eax ; ret
0x0000000000484da9 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000451d10 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000417600 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e13e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418801 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414cee : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041a88f : movzx eax, byte ptr [rax] ; ret
0x000000000046d03a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000428738 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042ead0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042e610 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000428753 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000418810 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414d00 : movzx eax, byte ptr [rdx] ; ret
0x0000000000417601 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b650 : movzx eax, cl ; pop rbx ; ret
0x0000000000449b5a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x449b59 ; ret
0x0000000000449c0a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x449c09 ; ret
0x000000000042fbf4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000044a478 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000428750 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042ead3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040fe23 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40fe0b ; ret
0x0000000000428911 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042cd88 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042ea58 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000004287a3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000449524 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000449584 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000449574 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000449564 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000449554 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000449544 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000449534 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000437cd0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f9a7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000044950b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004383b0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042e613 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042e639 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000437c50 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000438340 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004218d2 : mul byte ptr [rbp + 0x29] ; add byte ptr [rax], al ; ret
0x0000000000443577 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044d083 : neg eax ; jmp 0x44d04c
0x000000000044ca47 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000041a8cf : neg eax ; ret
0x0000000000468428 : nop ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x0000000000437407 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044e827 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44e838 ; call r12
0x000000000042f05c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b492d : nop ; add byte ptr [rax], al ; jo 0x4b4939 ; std ; jmp qword ptr [rdx]
0x0000000000475b7c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000451e4f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487e7f : nop ; add rsp, 8 ; ret
0x000000000048578f : nop ; call rax
0x0000000000452580 : nop ; call rsi
0x0000000000492274 : nop ; clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004b1970 : nop ; cmc ; std ; jmp qword ptr [rdi]
0x000000000044f4ff : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44f4f8 ; ret
0x0000000000494ca8 : nop ; fdiv st(1), st(0) ; call qword ptr [rax + 0x20fff9de]
0x0000000000494cac : nop ; fdivp st(1) ; jmp qword ptr [rax]
0x000000000048281f : nop ; jmp rdx
0x0000000000400c45 : nop ; leave ; ret
0x0000000000431fdf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000041b313 : nop ; mov dword ptr [rip + 0x2a0bda], eax ; ret
0x00000000004321bf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000048540f : nop ; mov eax, 0x27 ; syscall
0x000000000047562f : nop ; mov eax, 0x3f ; syscall
0x000000000044f1ef : nop ; mov eax, 0x63 ; syscall
0x0000000000474eff : nop ; mov eax, 0xc9 ; syscall
0x000000000044f274 : nop ; mov eax, 0xca ; syscall
0x0000000000418c2f : nop ; mov eax, 0xffffffff ; ret
0x000000000047fe1f : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000043257f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000447caf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004732e9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000041b193 : nop ; mov qword ptr [rip + 0x29e7cd], rax ; ret
0x000000000041b183 : nop ; mov qword ptr [rip + 0x29e7d5], rax ; ret
0x000000000041b133 : nop ; mov qword ptr [rip + 0x29e7dd], rax ; ret
0x000000000041b123 : nop ; mov qword ptr [rip + 0x29e7f5], rax ; ret
0x000000000048d2ff : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048b06f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e20f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000044774f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004704bf : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x47048e
0x00000000004704be : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x47048f
0x000000000049489c : nop ; or edi, ecx ; jmp qword ptr [rax]
0x0000000000494ef8 : nop ; out dx, eax ; stc ; jmp rax
0x0000000000400c99 : nop ; pop rbp ; ret
0x00000000004b108c : nop ; push rdi ; add byte ptr [rax], al ; loopne 0x4b1096 ; std ; jmp qword ptr [rdx]
0x0000000000495478 : nop ; push rsi ; cli ; jmp qword ptr [rax]
0x00000000004004cf : nop ; ret
0x0000000000450654 : nop ; ret 0x26
0x00000000004b02b0 : nop ; ret 0xfff9
0x0000000000495a60 : nop ; ret 0xfffa
0x0000000000494d80 : nop ; retf 0xfff9
0x0000000000495a14 : nop ; stosb byte ptr [rdi], al ; cli ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call rax
0x000000000041a44f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000041689f : nop ; xor eax, eax ; ret
0x0000000000495158 : nop ; xor edi, edx ; jmp qword ptr [rax]
0x0000000000410da8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041bde8 : nop dword ptr [rax + rax] ; call rax
0x00000000004859a8 : nop dword ptr [rax + rax] ; call rbx
0x000000000044768b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a93 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004138a8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a5b : nop dword ptr [rax + rax] ; ret
0x0000000000449a5b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047495c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042559d : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000044ca2c : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x00000000004733e5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000044d12d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x000000000044ceac : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041c85c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ad5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044bc7c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000041bddd : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000402f31 : nop dword ptr [rax] ; ret
0x00000000004167dd : nop dword ptr [rax] ; xor eax, eax ; jmp 0x4167ad
0x0000000000418d65 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000044cda9 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000401424 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004859a7 : nop dword ptr cs:[rax + rax] ; call rbx
0x0000000000410da7 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041bde7 : nop word ptr [rax + rax] ; call rax
0x0000000000484d1a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000474742 : nop word ptr [rax + rax] ; ret
0x000000000044b85a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004142d9 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4142f9
0x00000000004142d8 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4142fa
0x000000000042cf07 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000441f3f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042cf35 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475a62 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000475a11 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041fd4c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000042bf28 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000473d88 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046d128 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000046a195 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000428736 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041fd1a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000004153f3 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047fa79 : or al, 0x37 ; jae 0x47fa27 ; xor eax, eax ; ret
0x00000000004704c2 : or al, 0x40 ; jmp 0x47048b
0x00000000004704c1 : or al, 0x40 ; jmp 0x47048c
0x000000000044d0fd : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000418703 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x414997
0x0000000000401331 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000485163 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000046ff73 : or al, 0x7e ; ret 0x8944
0x0000000000400fc0 : or al, 0x81 ; retf 0x440
0x000000000045bbe3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x45bbf7 ; ret
0x000000000045f45b : or al, 0x83 ; ret
0x0000000000425086 : or al, 0x83 ; retf 0x8902
0x000000000044b5f1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000004646ea : or al, 0x89 ; ret 0xc689
0x000000000044b67b : or al, 0x89 ; ret 0xe283
0x00000000004273a3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043d864 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000043598d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000043040d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x0000000000475b38 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042ed3f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044751b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004b5108 : or al, 0x98 ; add byte ptr [rax], al ; add al, 0x36 ; std ; jmp rsp
0x0000000000430411 : or al, 0xb ; jmp r9
0x000000000044751f : or al, 0xb ; jmp rcx
0x0000000000485a25 : or al, 0xca ; jmp 0x485a35
0x0000000000459b1f : or al, 0xe9 ; ret
0x000000000047308c : or al, 0xeb ; ret 0x5590
0x000000000040626f : or al, 0xf ; retf 0xd289
0x0000000000437ed3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000467e4d : or al, 0xf6 ; ret 0xf01
0x0000000000492955 : or al, 0xf7 ; call rsp
0x0000000000495421 : or al, 0xfa ; call rax
0x0000000000424e41 : or al, 9 ; ret 0xbae9
0x000000000047fc53 : or al, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000473d3b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042d0e7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440ad1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d115 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048d02a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044daf1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042aa38 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040994d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040cddc : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044fab6 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x0000000000463686 : or al, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004b404b : or al, byte ptr [rcx] ; ret
0x000000000040b87e : or al, ch ; cld ; retf 0xffff
0x000000000040b7dd : or al, ch ; popfq ; retf
0x000000000040b924 : or al, ch ; push rsi ; retf 0xffff
0x000000000040cbd7 : or al, ch ; ret
0x000000000040d0b8 : or al, ch ; ret 0xffb2
0x00000000004093cf : or al, ch ; retf
0x000000000041f0a7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x0000000000494899 : or bh, cl ; call qword ptr [rax + 0x20fff90b]
0x0000000000494895 : or bh, cl ; call rax
0x0000000000492901 : or bh, dh ; jmp qword ptr [rax]
0x0000000000426620 : or bh, dh ; ret 0
0x00000000004953dd : or bh, dl ; call rax
0x000000000041c85a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046c6d1 : or bl, bpl ; retf
0x00000000004080fd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048ea1d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046c6d2 : or bl, ch ; retf
0x0000000000438093 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044d897 : or bl, dh ; ret
0x00000000004531f6 : or byte ptr [r15], 0x8e ; ret 1
0x00000000004136a1 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000041044d : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000454543 : or byte ptr [r8 + 0xf], cl ; ret
0x00000000004847af : or byte ptr [r8 + 2], r15b ; ret
0x000000000041376f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f5ba : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004459c8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047faa5 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478e32 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040dbd2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004847f4 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048ca87 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000445a87 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000004136a2 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000414ee5 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000041044e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000455df8 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000482cd8 : or byte ptr [rax + 0x39], cl ; retf
0x000000000041a889 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad406 : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000454544 : or byte ptr [rax + 0xf], cl ; ret
0x000000000041b936 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048693c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d8a1 : or byte ptr [rax + 1], cl ; ret
0x00000000004847b0 : or byte ptr [rax + 2], bh ; ret
0x00000000004b0d04 : or byte ptr [rax + rax], dl ; mov byte ptr [rcx], cl ; cli ; call qword ptr [rax]
0x0000000000413770 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000485a22 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a38
0x000000000041b1d3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044dd04 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044e6e2 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe144444b
0x00000000004459cd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f5bb : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044d91e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004187ab : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046c6ce : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x00000000004459c9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f960 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000412deb : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x0000000000485653 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046c6cd : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x00000000004895aa : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047f4e8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478e33 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040dbd3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004897fe : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047faa6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000489857 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000420e60 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045c940 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044e0b2 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b6e7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047dd52 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044f970 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000413d86 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000473afe : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041c70d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041c4fb : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042d3b7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440c71 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d2f5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000419527 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004544ea : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045c2c2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045c165 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000044b6c5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000451d61 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044ceb1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000042abb8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000421736 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x421709 ; ret
0x000000000042270c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000404283 : or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000040f59c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000044232e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d27f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000485b5b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482c31 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x0000000000485876 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d2ee : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004828b3 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041eed2 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000492293 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044d71c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044d233 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000486bf7 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004157b6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000403ee5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044e56e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041fe17 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041fe16 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x00000000004704c0 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x47048d
0x00000000004643c7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x0000000000471a04 : or byte ptr [rbx - 0x38b7ff95], dh ; ret 0xac60
0x0000000000415841 : or byte ptr [rbx - 0x76b7ff95], dh ; ret 0x294c
0x00000000004151c7 : or byte ptr [rbx - 0x76b7ff95], dh ; ret 0x294d
0x0000000000412109 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000044f354 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047b759 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000423894 : or byte ptr [rcx + 0x29], ah ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000048459b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004847f5 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048168d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000479282 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479254 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000469889 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000004127c7 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048a4d5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000470f23 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000004b4a04 : or byte ptr [rcx + 0x5080000], dl ; std ; jmp rdx
0x000000000048ca88 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ff59 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048839b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000483590 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489c5b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000413311 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004845a2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044e5db : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000445a88 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000004229a8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040f77a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044ddaa : or byte ptr [rcx - 0x77], cl ; retf
0x000000000044dd76 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041eed6 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041688a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a971e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bcd0 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047bc20 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004b14a8 : or byte ptr [rdi - 6], cl ; call qword ptr [rdi]
0x0000000000457a8b : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000457e17 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004531f7 : or byte ptr [rdi], 0x8e ; ret 1
0x00000000004111e2 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475940 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004884db : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000406264 : or byte ptr [rdi], cl ; retf 0x8941
0x00000000004309db : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041cfa6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004831f3 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x00000000004013f1 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000472e63 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x00000000004a5c00 : or byte ptr [rdx - 3], ch ; jmp rax
0x00000000004aff04 : or byte ptr [rsi], al ; add byte ptr [rax - 0x4d], ch ; stc ; call qword ptr [rbx]
0x000000000045afa1 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000412c04 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412767 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000425bc2 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045e84e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486dad : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047b6f5 : or cl, ch ; ret
0x0000000000415a86 : or cl, ch ; retf
0x000000000047f859 : or cl, ch ; retf 0xfffd
0x0000000000494d8c : or dh, 0xf9 ; lcall [rax - 6] ; stc ; jmp qword ptr [rax]
0x00000000004a9102 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004afa88 : or dh, bl ; clc ; call qword ptr [rax]
0x0000000000437fb3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f625 : or dh, bl ; ret
0x00000000004a8f2a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000045036c : or dh, dh ; ret 0x8902
0x000000000041caf7 : or dh, dh ; ret 0xf02
0x000000000045beaa : or dl, bl ; and eax, 0xf3087400 ; ret
0x000000000049564c : or dl, byte ptr [rdx + rdi*8 - 1] ; mov al, 0x53 ; cli ; jmp qword ptr [rax]
0x00000000004013c0 : or dword ptr [rax + 0x58901cc], eax ; ret 0x2bab
0x000000000042270a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000045064c : or dword ptr [rax + 0xf], ecx ; ror dword ptr [r8 - 0x77], 5 ; nop ; ret 0x26
0x00000000004509aa : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040fd4b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000042b7f7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004038be : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000044424e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000488be0 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d2c7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004421df : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d205 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000413d47 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044da1d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000042c208 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045fd65 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a4497 : or dword ptr [rax], ecx ; retf
0x0000000000482dc1 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a8873 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000430176 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000414f10 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000480f88 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x0000000000470662 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046de10 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a90ce : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000047fe16 : or dword ptr [rip + 0x23a4eb], 1 ; pop rbx ; ret
0x000000000045d7b3 : or dword ptr [rip - 0x7ab20006], ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000040fff3 : or dword ptr [rsp], 0x20 ; call 0x45c2c6
0x00000000004b4048 : or eax, 0x10a0303 ; ret
0x00000000004b40a0 : or eax, 0x1370303 ; ret
0x0000000000447f71 : or eax, 0x1c478d48 ; ret
0x00000000004b4038 : or eax, 0x34b0303 ; ret
0x00000000004b406c : or eax, 0x35b0303 ; ret
0x0000000000470482 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046fcea : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004039ca : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000442e62 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000042ce17 : or eax, 0x83480000 ; ret 0x4910
0x0000000000440791 : or eax, 0x83480000 ; ret 0xe910
0x000000000042ce45 : or eax, 0x83480000 ; ret 0xeb10
0x000000000042ce0d : or eax, 0x83490000 ; jmp 0x42ce2d
0x000000000042a738 : or eax, 0x894d0000 ; retf
0x0000000000491082 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004745c2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004a6f21 : or eax, 0xcad7947e ; jmp 0x4a6ecd
0x000000000049efb9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049efc5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a90b3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004576d5 : or eax, 0xea810000 ; ret 0
0x00000000004a8d53 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000495425 : or eax, 0xf50fffa ; cli ; call rax
0x0000000000437e63 : or eax, 0xf7f0ff3 ; ret
0x000000000044ca4d : or eax, 0xffffffff ; ret
0x000000000042ea99 : or eax, 1 ; ret
0x000000000042cff7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440931 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d025 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044dac1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042a8b8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad408 : or eax, dword ptr [rdx] ; jae 0x4ad41a ; ret
0x00000000004b537a : or eax, dword ptr [rdx] ; ret 0xe0a
0x000000000041a444 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000412ed8 : or ebp, eax ; ret 0xf2
0x0000000000414a2d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438023 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004168b6 : or ebx, esi ; ret
0x000000000042538f : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004157a7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000465f46 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27fa756
0x000000000042637c : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004910ff : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000482a93 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x000000000049489d : or edi, ecx ; jmp qword ptr [rax]
0x000000000044da79 : or edx, 0x40 ; mov eax, ecx ; syscall
0x00000000004b0d09 : or edx, edi ; call qword ptr [rax]
0x0000000000495419 : or edx, edi ; call rax
0x0000000000437f43 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045c2d4 : or esi, ebx ; ret
0x0000000000414f11 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004acbfa : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000040fff2 : or qword ptr [rsp], 0x20 ; call 0x45c2c7
0x000000000044da78 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000438092 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438022 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437fb2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437f42 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b5379 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000047f858 : or r9b, bpl ; retf 0xfffd
0x000000000045afa0 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b409f : or rax, 0x1370303 ; ret
0x00000000004b4037 : or rax, 0x34b0303 ; ret
0x00000000004b406b : or rax, 0x35b0303 ; ret
0x0000000000470481 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046fce9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044ca4c : or rax, 0xffffffffffffffff ; ret
0x000000000042d097 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad407 : or rax, qword ptr [rdx] ; jae 0x4ad41b ; ret
0x00000000004acbf9 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x000000000041b2ea : out 0x29, al ; add bl, dh ; ret
0x000000000041b176 : out 0x29, eax ; add bl, dh ; ret
0x000000000041b25b : out 0x29, eax ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000041992d : out 0x31, eax ; imul al ; retf
0x000000000048dd25 : out 0x41, eax ; call rdi
0x00000000004868e9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004722ed : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000424ef8 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000004a8940 : out 0x78, al ; jnp 0x4a89a2 ; retf
0x0000000000489b8d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x0000000000401acd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489c61 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489d3d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489b47 : out 0x89, al ; out dx, eax ; call rax
0x00000000004a6ed1 : out 0xb3, al ; retf 0xe80
0x0000000000473cce : out 0xc7, al ; clc ; dec dword ptr [rax + 1] ; ret
0x00000000004a7c00 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000473ccc : out 0xe8, al ; out 0xc7, al ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000041b0a0 : out 0xe8, eax ; mov dl, byte ptr [rbx - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000045b5e0 : out 0xe8, eax ; ret 0xfa4e
0x0000000000477a18 : out 0xe8, eax ; ret 0xfa9e
0x0000000000453ad0 : out 0xe8, eax ; retf 0xfce6
0x00000000004741ec : out 0xe8, eax ; sahf ; ret 0xfff8
0x0000000000407a1a : out 0xeb, eax ; retf 0x8b49
0x000000000043782a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004378aa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9928 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000494f1d : out 0xf9, al ; jmp qword ptr [rax]
0x0000000000462f62 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047dca2 : out dx, al ; adc al, ch ; jmp qword ptr [rdi]
0x000000000045a37e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a8d57 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000044ce1d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044cd4d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000043202a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000425602 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044da18 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000437c3a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044208e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a90b2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a893f : out dx, al ; out 0x78, al ; jnp 0x4a89a3 ; retf
0x0000000000423fb3 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000421fc6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000494ef5 : out dx, al ; stc ; call qword ptr [rax - 0x1f000611]
0x00000000004741e9 : out dx, eax ; add r15, r12 ; call 0x400496
0x0000000000419a09 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000419a61 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000469d11 : out dx, eax ; call 0x4004b0
0x0000000000423b24 : out dx, eax ; call 0x41fd63
0x0000000000473e30 : out dx, eax ; call 0x450913
0x0000000000489b8f : out dx, eax ; call qword ptr [r14]
0x0000000000401acf : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489c63 : out dx, eax ; call qword ptr [rax]
0x0000000000489d3f : out dx, eax ; call qword ptr [rcx]
0x000000000045b66d : out dx, eax ; call r12
0x000000000048ed0d : out dx, eax ; call r14
0x0000000000424987 : out dx, eax ; call rax
0x0000000000474222 : out dx, eax ; call rbx
0x00000000004a99a5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044da1b : out dx, eax ; mov eax, 9 ; syscall
0x00000000004145cd : out dx, eax ; mov eax, r9d ; syscall
0x0000000000431e5a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f56 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431ea2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000474373 : out dx, eax ; mov r9, r14 ; call rbx
0x00000000004102da : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000437cba : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044218d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042f1c3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f19b
0x000000000042f241 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f219
0x000000000042f6d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f6ab
0x000000000042f751 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f729
0x000000000042edc3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042edd8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042eded : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046842d : out dx, eax ; ret
0x0000000000449ca3 : out dx, eax ; ret 0xf66
0x0000000000403d0d : out dx, eax ; ret 0xffbf
0x00000000004683ac : out dx, eax ; ret 3
0x0000000000449c86 : out dx, eax ; retf 0x4466
0x00000000004a907b : out dx, eax ; retf 0xab0d
0x000000000042734a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000004302dc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004302c5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004302ae : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ed6a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494ef9 : out dx, eax ; stc ; jmp rax
0x000000000048ac87 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000044009e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004480ce : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a9503 : outsb dx, byte ptr [rsi] ; ja 0x4a948c ; ret 0x48f
0x000000000042282e : outsb dx, byte ptr [rsi] ; jno 0x422860 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047d8a0 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x0000000000406fb1 : outsb dx, byte ptr [rsi] ; ret 8
0x00000000004a7f32 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a7244 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a8878 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000405a62 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; imul al ; ret
0x000000000041b282 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004959a1 : outsd dx, dword ptr [rsi] ; cli ; inc dword ptr [rax] ; jb 0x4959a7 ; call qword ptr [rax]
0x00000000004274f8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043ba1e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004325e2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004327e2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x00000000004300dd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000043017d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042fca2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042fd22 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000044357a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004300e2 : outsd dx, dword ptr [rsi] ; ret
0x000000000046478d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000046750d : outsd dx, dword ptr [rsi] ; ret 0x2ce8
0x000000000041c44a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a7c06 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041be82 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004647b6 : outsd dx, dword ptr [rsi] ; ret 0x83e8
0x0000000000432797 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000430182 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000004674e9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x00000000004435ca : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000432662 : outsd dx, dword ptr [rsi] ; retf
0x000000000043fa49 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000432862 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042f6ca : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042f1ba : outsd dx, dword ptr [rsi] ; retf 0xff3
0x0000000000464754 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004674af : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004a7c05 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042ccd2 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000474954 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047493f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042ccd1 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a9005 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a9006 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000044b366 : pextrw edi, mm0, 0x77 ; ret
0x000000000042de92 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42def9 ; xor eax, eax ; ret
0x000000000044393f : pmovmskb edx, mm4 ; test edx, edx ; je 0x443953 ; bsf eax, edx ; ret
0x000000000044f285 : pop r10 ; ret
0x00000000004a948f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044dbb1 : pop r12 ; jmp rax
0x000000000044db96 : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000421fc9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004244ec : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000423196 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402835 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040067f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411c39 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004124ce : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fdd9 : pop r12 ; pop r13 ; ret
0x00000000004080e4 : pop r12 ; ret
0x0000000000421fcb : pop r13 ; pop r14 ; jmp rax
0x00000000004244ee : pop r13 ; pop r14 ; jmp rcx
0x0000000000423198 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402837 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400681 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411c3b : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004124d0 : pop r13 ; pop r14 ; ret
0x000000000040fddb : pop r13 ; ret
0x0000000000421fcd : pop r14 ; jmp rax
0x00000000004244f0 : pop r14 ; jmp rcx
0x000000000042319a : pop r14 ; pop r15 ; jmp rax
0x0000000000402839 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400683 : pop r14 ; pop r15 ; ret
0x0000000000411c3d : pop r14 ; pop rbp ; ret
0x00000000004124d2 : pop r14 ; ret
0x000000000042319c : pop r15 ; jmp rax
0x000000000040283b : pop r15 ; pop rbp ; ret
0x0000000000400685 : pop r15 ; ret
0x00000000004b11c5 : pop rax ; add byte ptr [rax], al ; cli ; call qword ptr [rax]
0x00000000004aff54 : pop rax ; add byte ptr [rax], r8b ; test al, 0xb4 ; stc ; call qword ptr [rbx]
0x0000000000420784 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000004b5c88 : pop rax ; cdq ; std ; call qword ptr [rdx]
0x0000000000495525 : pop rax ; cli ; jmp qword ptr [rdx]
0x0000000000495469 : pop rax ; cli ; jmp rax
0x0000000000494d90 : pop rax ; cli ; stc ; jmp qword ptr [rax]
0x0000000000460129 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045f05d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac60
0x0000000000460762 : pop rax ; jmp 0x460769
0x0000000000481c5c : pop rax ; jmp qword ptr [rax]
0x0000000000492292 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481d16 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000044cccc : pop rax ; ret
0x00000000004a93e3 : pop rax ; retf
0x00000000004adcd8 : pop rax ; retf 0xfff6
0x00000000004949dd : pop rax ; stc ; jmp qword ptr [rax]
0x00000000004b5391 : pop rax ; std ; call qword ptr [rdx]
0x000000000048f131 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004599b9 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x459a31 ; mov rdx, rax ; jmp 0x459988
0x000000000041bdc7 : pop rbp ; in al, 0x29 ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004a8e85 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004187b0 : pop rbp ; jmp rax
0x0000000000475788 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000486d03 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a8b : pop rbp ; mov edi, 0x6bac10 ; jmp rax
0x00000000004a77e0 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000488bdf : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044dbb0 : pop rbp ; pop r12 ; jmp rax
0x000000000044db95 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000421fc8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004244eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000423195 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040067e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004124cd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fdd8 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004080e3 : pop rbp ; pop r12 ; ret
0x0000000000421fcc : pop rbp ; pop r14 ; jmp rax
0x00000000004244ef : pop rbp ; pop r14 ; jmp rcx
0x0000000000423199 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402838 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400682 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000411c3c : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004124d1 : pop rbp ; pop r14 ; ret
0x00000000004845a8 : pop rbp ; pop rbx ; ret
0x0000000000400a98 : pop rbp ; ret
0x00000000004149ef : pop rbp ; retf
0x00000000004949e9 : pop rbp ; stc ; jmp qword ptr [rax + 0x20fff95e]
0x00000000004851f1 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004b14a5 : pop rbx ; add byte ptr [rax], al ; or byte ptr [rdi - 6], cl ; call qword ptr [rdi]
0x000000000048c67d : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a67d8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044b6b6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a67d6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004186f4 : pop rbx ; jmp rax
0x000000000046eb28 : pop rbx ; loopne 0x46eb32 ; dec dword ptr [rcx + 0x63] ; ret
0x00000000004909f1 : pop rbx ; mov ah, 0x22 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000047fe37 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000044b701 : pop rbx ; mov eax, eax ; ret
0x00000000004672ad : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000419239 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041cc53 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000411c38 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000045affc : pop rbx ; pop r12 ; ret
0x000000000048ad09 : pop rbx ; pop r14 ; ret
0x00000000004187af : pop rbx ; pop rbp ; jmp rax
0x00000000004722f1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044db94 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000421fc7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004244ea : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000412504 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fdd7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004080e2 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000403ee6 : pop rbx ; pop rbp ; ret
0x0000000000400f88 : pop rbx ; ret
0x00000000004a9ac0 : pop rbx ; ret 0x6f9
0x0000000000422731 : pop rbx ; retf
0x0000000000451580 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004949e5 : pop rbx ; stc ; jmp qword ptr [rax]
0x00000000004080fe : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000419202 : pop rbx ; xor edx, edx ; jmp rax
0x00000000004b1249 : pop rcx ; add byte ptr [rax], al ; xor bh, dl ; jmp qword ptr [rdx]
0x000000000042caa7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495521 : pop rcx ; cli ; call qword ptr [rdx + 0x22fffa58]
0x000000000049549d : pop rcx ; cli ; call qword ptr [rsi]
0x000000000049565d : pop rcx ; cli ; call rax
0x0000000000495659 : pop rcx ; cli ; inc dword ptr [rax + 0x59] ; cli ; call rax
0x00000000004955dd : pop rcx ; cli ; jmp rsp
0x000000000042d187 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042661b : pop rcx ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004309d8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004793f6 : pop rdi ; add al, ch ; retf
0x000000000044a1f5 : pop rdi ; add byte ptr [rdi], ah ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000044281d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004323f9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432209 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8d7e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000042319d : pop rdi ; jmp rax
0x00000000004a7d41 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044e882 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044dda9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044dd75 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000432029 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431e59 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f55 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431ea1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040283c : pop rdi ; pop rbp ; ret
0x0000000000400686 : pop rdi ; ret
0x00000000004125fd : pop rdi ; xchg byte ptr [rdx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000425a4c : pop rdx ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000042d686 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000495455 : pop rdx ; cli ; call qword ptr [rax]
0x0000000000495515 : pop rdx ; cli ; jmp rdx
0x00000000004a8961 : pop rdx ; je 0x4a892b ; ret 0xacfc
0x00000000004a8a73 : pop rdx ; leave ; retf
0x00000000004a9927 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044f284 : pop rdx ; pop r10 ; ret
0x0000000000481d17 : pop rdx ; pop rbx ; ret
0x000000000044f2a9 : pop rdx ; pop rsi ; ret
0x000000000044cd25 : pop rdx ; ret
0x0000000000406fce : pop rdx ; ret 8
0x00000000004a8943 : pop rdx ; retf
0x00000000004949e1 : pop rdx ; stc ; jmp qword ptr [rax + 0x20fff95b]
0x0000000000495c19 : pop rdx ; sti ; jmp rax
0x0000000000495c5d : pop rdx ; sti ; jmp rsi
0x00000000004a9490 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042f1c4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f19a
0x000000000042f242 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f218
0x000000000042f6d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f6aa
0x000000000042f752 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f728
0x000000000044271e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004265de : pop rsi ; add dword ptr [rax], 0 ; je 0x4265b1 ; ret
0x0000000000422496 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000045b796 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000421fce : pop rsi ; jmp rax
0x00000000004244f1 : pop rsi ; jmp rcx
0x000000000044e852 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x000000000042319b : pop rsi ; pop r15 ; jmp rax
0x000000000040283a : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400684 : pop rsi ; pop r15 ; ret
0x0000000000411c3e : pop rsi ; pop rbp ; ret
0x00000000004124d3 : pop rsi ; ret
0x0000000000420651 : pop rsi ; ret 0x29
0x00000000004949ed : pop rsi ; stc ; jmp qword ptr [rax]
0x00000000004402b0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d984 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000440fb0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041ea8b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000405490 : pop rsp ; fisttp qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000044dbb2 : pop rsp ; jmp rax
0x0000000000490730 : pop rsp ; mov cl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044db97 : pop rsp ; mov esi, 2 ; jmp rax
0x0000000000421fca : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x00000000004244ed : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x0000000000423197 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402836 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400680 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411c3a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004124cf : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040fdda : pop rsp ; pop r13 ; ret
0x0000000000404093 : pop rsp ; ret
0x00000000004174e6 : pop rsp ; ret 7
0x0000000000404156 : pop rsp ; retf
0x0000000000482a7a : pop rsp ; retf 0x4df0
0x00000000004adcc4 : pop rsp ; retf 0xfff6
0x00000000004a8ae7 : pop rsp ; sbb ebp, ebx ; retf
0x000000000044d76d : pop rsp ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000047123c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000411be4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044c464 : popfq ; add byte ptr es:[rax + 0x39], cl ; ret
0x000000000046be1d : popfq ; call 0xffffffffc3cabe27
0x000000000046bb5f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a8a6c : popfq ; jrcxz 0x4a8a31 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000048c84e : popfq ; ret 0xf45
0x000000000040b7df : popfq ; retf
0x000000000041ceaf : popfq ; retf 0x29
0x00000000004a9822 : popfq ; retf 0xde4f
0x0000000000437d82 : psllq mm1, qword ptr [r15] ; jg 0x437d9d ; ret
0x000000000043a8a2 : psllq mm1, qword ptr [r15] ; jg 0x43a8bd ; ret
0x0000000000437d83 : psllq mm1, qword ptr [rdi] ; jg 0x437d9c ; ret
0x000000000043a8a3 : psllq mm1, qword ptr [rdi] ; jg 0x43a8bc ; ret
0x0000000000447796 : psllq mm1, qword ptr [rdi] ; jg 0x4477aa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000447795 : psllq mm1, qword ptr [rdi] ; jg 0x4477ab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004477f7 : psllq mm1, qword ptr [rdi] ; jg 0x44780c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004a7844 : push -0x30 ; retf 0xe72e
0x00000000004a6ece : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a9075 : push -0x57d3205 ; call 0xffffffffab585b75
0x00000000004a7081 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000042311f : push -0x7bf0ffd7 ; ret
0x000000000045f552 : push -0x7c000003 ; ret
0x00000000004480b4 : push -0x9ffffff ; ret 0x7501
0x00000000004a5c01 : push -3 ; jmp rax
0x00000000004a8875 : push 0x1b6e41b5 ; std ; retf
0x0000000000476449 : push 0x3948fffd ; ret
0x0000000000413ced : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004885d4 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479c05 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045ba9c : push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000049610d : push 0x67a4fffb ; sti ; call qword ptr [rdi]
0x00000000004a9502 : push 0x6e ; ja 0x4a948d ; ret 0x48f
0x0000000000419845 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000418127 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x000000000041946a : push 0x75c08548 ; ret
0x00000000004a8de2 : push 0xfd4cbe ; retf 0xf64
0x0000000000494f87 : push qword ptr [rax + 0x40fffa2e] ; cli ; call rsi
0x000000000049515f : push qword ptr [rax + 0x40fffa32] ; xor bh, dl ; call rax
0x000000000049547f : push qword ptr [rax + 0x40fffa55] ; push rbp ; cli ; call rax
0x0000000000495657 : push qword ptr [rax + 0x40fffa59] ; pop rcx ; cli ; call rax
0x000000000049587f : push qword ptr [rax + 0x4b] ; cli ; jmp rax
0x0000000000495897 : push qword ptr [rax + 0x50] ; cli ; jmp rax
0x00000000004949c7 : push qword ptr [rax + 0x51] ; stc ; call qword ptr [rax]
0x0000000000494a3f : push qword ptr [rax + 0x7d] ; stc ; jmp rax
0x0000000000495b47 : push qword ptr [rax - 0x2f0004de] ; and bh, bl ; jmp rax
0x0000000000495a77 : push qword ptr [rax - 0x36] ; cli ; inc eax ; retf
0x0000000000495b1f : push qword ptr [rax - 0x3f0004df] ; and ebx, edi ; jmp rax
0x0000000000495ac7 : push qword ptr [rax - 0x3f0004e4] ; sbb al, 0xfb ; call rax
0x0000000000494bcb : push qword ptr [rax - 0x49] ; stc ; dec dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax]
0x0000000000495a1f : push qword ptr [rax - 0x51] ; cli ; call qword ptr [rax]
0x0000000000494abf : push qword ptr [rax - 0x52] ; stc ; jmp qword ptr [rax]
0x00000000004959ff : push qword ptr [rax - 0x5e] ; cli ; call qword ptr [rax]
0x0000000000494e4f : push qword ptr [rax - 7] ; stc ; push qword ptr [rax] ; sti ; stc ; call qword ptr [rax]
0x000000000049538f : push qword ptr [rax] ; and edi, edx ; call rax
0x0000000000494eb7 : push qword ptr [rax] ; cld ; stc ; call qword ptr [rax]
0x0000000000494dcf : push qword ptr [rax] ; cli ; stc ; push rax ; sti ; stc ; call rax
0x0000000000494c5f : push qword ptr [rax] ; fyl2xp1 ; call qword ptr [rax]
0x0000000000494a0f : push qword ptr [rax] ; insb byte ptr [rdi], dx ; stc ; jmp qword ptr [rax + 0x10fff96d]
0x000000000048e1ed : push qword ptr [rax] ; jne 0x48e220 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f04d : push qword ptr [rax] ; jne 0x48f080 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000495a17 : push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call rax
0x0000000000494bc3 : push qword ptr [rax] ; mov dh, 0xf9 ; call rax
0x0000000000494e6f : push qword ptr [rax] ; stc ; stc ; push rax ; cli ; stc ; call rax
0x0000000000494e53 : push qword ptr [rax] ; sti ; stc ; call qword ptr [rax]
0x0000000000494a53 : push qword ptr [rax] ; test cl, bh ; jmp qword ptr [rax]
0x0000000000449a38 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044dc48 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044dc20 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044e850 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044e880 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042ea49 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000472e38 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000041926d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000472e5e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004196d6 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047f4eb : push qword ptr [rbp - 0x2e] ; ret
0x0000000000419aa0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046276b : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45ea19
0x000000000044ca3c : push qword ptr [rbx + 1] ; ret
0x0000000000412ed6 : push qword ptr [rbx + rcx - 0x18] ; ret 0xf2
0x000000000045fed4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a2ef : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041784f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000458453 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004025cd : push qword ptr [rcx] ; shr cl, cl ; retf
0x000000000044c50b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044d0c6 : push qword ptr [rdi + 0x3f] ; ret
0x000000000044cdf6 : push qword ptr [rdi + 0x57] ; ret
0x000000000044cd23 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045c2d2 : push qword ptr [rdi + 0xb] ; ret
0x000000000044caca : push qword ptr [rdi + 3] ; ret
0x000000000044cdb9 : push qword ptr [rdi + 4] ; ret
0x000000000044cb18 : push qword ptr [rdi + 5] ; ret
0x000000000047570e : push qword ptr [rdi + 7] ; ret
0x000000000044d895 : push qword ptr [rdi + 8] ; ret
0x000000000044ce8c : push qword ptr [rdi + 9] ; ret
0x00000000004755c4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004950fb : push qword ptr [rdi + rbp + 0x2f44fffa] ; cli ; call rsp
0x0000000000495033 : push qword ptr [rdx + 0x42fffa30] ; xor dl, bh ; call rdx
0x000000000049552b : push qword ptr [rdx + 0x42fffa57] ; push rdi ; cli ; call rdx
0x00000000004952d7 : push qword ptr [rdx + rbp - 6] ; jmp rsp
0x0000000000494b37 : push qword ptr [rsi + 0x46fff9b4] ; mov ch, 0xf9 ; call rsi
0x000000000047851a : push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004955f3 : push qword ptr [rsi + rdx*2 + 0x5644fffa] ; cli ; call rsp
0x00000000004620ef : push r14 ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004186a2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a6f2c : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000495430 : push rax ; adc bh, dl ; call rax
0x0000000000471f3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000041a451 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041e4dd : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004953ec : push rax ; adc dl, bh ; call rax
0x00000000004953f4 : push rax ; adc edi, edx ; call rax
0x000000000045830f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004afc4c : push rax ; add byte ptr [r8], al ; mov al, 0x76 ; stc ; jmp qword ptr [rbx]
0x00000000004b064c : push rax ; add byte ptr [r8], r8b ; rcl ah, 1 ; stc ; jmp qword ptr [rcx]
0x00000000004186a3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b091d : push rax ; add byte ptr [rax], al ; and al, ch ; stc ; call qword ptr [rcx]
0x00000000004b097d : push rax ; add byte ptr [rax], al ; jo 0x4b0970 ; stc ; jmp qword ptr [rcx]
0x0000000000494ea0 : push rax ; add dl, bh ; jmp qword ptr [rax]
0x0000000000494e08 : push rax ; add eax, 0x750fffa ; cli ; jmp rax
0x0000000000495b53 : push rax ; and bh, bl ; call qword ptr [rax]
0x00000000004010d0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000487842 : push rax ; and eax, dword ptr [rax] ; jne 0x487874 ; ret
0x0000000000495b2b : push rax ; and ebx, edi ; inc dword ptr [rax] ; and bh, bl ; call qword ptr [rax]
0x0000000000495b73 : push rax ; and edi, ebx ; call qword ptr [rax]
0x000000000045463f : push rax ; call 0x450913
0x0000000000462771 : push rax ; call 0x45ea13
0x0000000000451d18 : push rax ; call rbx
0x0000000000495378 : push rax ; cli ; call rax
0x000000000049571d : push rax ; cli ; jmp qword ptr [rdx + 0x22fffa4f]
0x0000000000495719 : push rax ; cli ; jmp qword ptr [rdx]
0x0000000000495188 : push rax ; cli ; jmp rax
0x000000000049587b : push rax ; cli ; push qword ptr [rax + 0x4b] ; cli ; jmp rax
0x0000000000495895 : push rax ; cli ; push qword ptr [rax + 0x50] ; cli ; jmp rax
0x0000000000494db0 : push rax ; cli ; stc ; call qword ptr [rax]
0x0000000000494e73 : push rax ; cli ; stc ; call rax
0x00000000004718c4 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000494ccc : push rax ; fdivp st(1) ; jmp rax
0x00000000004959fb : push rax ; jg 0x495a01 ; push qword ptr [rax - 0x5e] ; cli ; call qword ptr [rax]
0x0000000000422888 : push rax ; jmp 0x4225f1
0x0000000000473489 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a6f9a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x0000000000453f51 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000495420 : push rax ; or al, 0xfa ; call rax
0x00000000004953dc : push rax ; or bh, dl ; call rax
0x0000000000485a21 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a39
0x000000000041b1d2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041c4fa : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044e56d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041eed5 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000045036b : push rax ; or dh, dh ; ret 0x8902
0x000000000041fc12 : push rax ; or dh, dh ; ret 0xf02
0x0000000000495418 : push rax ; or edx, edi ; call rax
0x000000000049599f : push rax ; outsd dx, dword ptr [rsi] ; cli ; inc dword ptr [rax] ; jb 0x4959a9 ; call qword ptr [rax]
0x0000000000495468 : push rax ; pop rax ; cli ; jmp rax
0x00000000004824ce : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000488685 : push rax ; pop rbx ; ret
0x0000000000478519 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x000000000049569c : push rax ; push rax ; cli ; call rax
0x0000000000495893 : push rax ; push rax ; cli ; push qword ptr [rax + 0x50] ; cli ; jmp rax
0x00000000004949c4 : push rax ; push rax ; stc ; push qword ptr [rax + 0x51] ; stc ; call qword ptr [rax]
0x0000000000495680 : push rax ; push rbp ; cli ; jmp rax
0x0000000000453f53 : push rax ; push rsp ; ret
0x0000000000406ed2 : push rax ; ret
0x00000000004a9840 : push rax ; retf
0x00000000004add00 : push rax ; retf 0xfff6
0x00000000004b0460 : push rax ; retf 0xfff9
0x00000000004adea0 : push rax ; sal dh, 1 ; call qword ptr [rsi]
0x0000000000494d23 : push rax ; sar cl, 0xff ; ret 0xfff9
0x0000000000494cf4 : push rax ; sar cl, cl ; jmp qword ptr [rax]
0x000000000049540c : push rax ; sbb al, 0xfa ; call qword ptr [rax - 0x2f0005fa]
0x000000000041d834 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000041a446 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000472f79 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000495440 : push rax ; sbb dl, bh ; call rax
0x0000000000495a97 : push rax ; sbb edi, ebx ; inc dword ptr [rax] ; sbb al, 0xfb ; call qword ptr [rax]
0x0000000000495448 : push rax ; sbb edi, edx ; call rax
0x0000000000495404 : push rax ; sbb edx, edi ; call rax
0x0000000000494997 : push rax ; stc ; call qword ptr [rax]
0x00000000004949c5 : push rax ; stc ; push qword ptr [rax + 0x51] ; stc ; call qword ptr [rax]
0x0000000000494db7 : push rax ; std ; stc ; call rax
0x0000000000494dd3 : push rax ; sti ; stc ; call rax
0x0000000000495368 : push rax ; sub dl, bh ; call rax
0x0000000000495360 : push rax ; sub edx, edi ; call rax
0x0000000000494a63 : push rax ; xchg ecx, edi ; jmp rax
0x0000000000494c5c : push rax ; xlatb ; stc ; push qword ptr [rax] ; fyl2xp1 ; call qword ptr [rax]
0x00000000004a6f2d : push rax ; xor byte ptr [rcx], ah ; retf
0x0000000000494f70 : push rax ; xor edx, edi ; jmp rax
0x000000000049317f : push rbp ; adc esi, edi ; call rsi
0x000000000048a10a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048cbb2 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004b0e85 : push rbp ; add byte ptr [rax], al ; lahf ; div ah ; jmp qword ptr [rbx]
0x000000000047fc58 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000495541 : push rbp ; cli ; call qword ptr [rdx]
0x0000000000495485 : push rbp ; cli ; call rax
0x0000000000495481 : push rbp ; cli ; inc dword ptr [rax + 0x55] ; cli ; call rax
0x00000000004954c1 : push rbp ; cli ; jmp qword ptr [rsi]
0x0000000000495681 : push rbp ; cli ; jmp rax
0x000000000041273d : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000048168c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004754ed : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004b5cbe : push rbp ; ret
0x00000000004949d5 : push rbp ; stc ; jmp qword ptr [rax]
0x0000000000412a76 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040121f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047facf : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484da7 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b0c21 : push rbx ; add byte ptr [rax], al ; in al, dx ; cld ; stc ; jmp qword ptr [rdx]
0x0000000000462390 : push rbx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a9119 : push rbx ; call 0x4c14bad6
0x0000000000495651 : push rbx ; cli ; jmp qword ptr [rax]
0x00000000004ab971 : push rbx ; cmc ; jmp qword ptr [rdx]
0x0000000000414ee8 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044ac25 : push rbx ; jb 0x44ac35 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000472e72 : push rbx ; je 0x472ed6 ; pop rbp ; pop r12 ; ret
0x0000000000472efe : push rbx ; je 0x472f62 ; pop rbp ; pop r12 ; ret
0x00000000004754ee : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000414ee4 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044e77f : push rbx ; ret
0x0000000000412952 : push rbx ; sbb bl, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; call 0x44f386
0x00000000004a895c : push rbx ; xchg eax, edx ; jae 0x4a893b ; push rsi ; pop rdx ; je 0x4a8930 ; ret 0xacfc
0x0000000000420af2 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ce2b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041d1a7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000044ec1b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046213a : push rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a7be5 : push rcx ; call qword ptr [rsi]
0x0000000000495695 : push rcx ; cli ; jmp rax
0x000000000045f9c6 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000043b1dd : push rcx ; jl 0x43b22e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000043b344 : push rcx ; jl 0x43b395 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000479281 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479253 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004623eb : push rcx ; push rbx ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000041b93d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000004949c9 : push rcx ; stc ; call qword ptr [rax]
0x000000000040628e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044e008 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040627e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000447cda : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000437ee9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b108d : push rdi ; add byte ptr [rax], al ; loopne 0x4b1095 ; std ; jmp qword ptr [rdx]
0x00000000004781c4 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000447d8c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045f09f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000461c49 : push rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000431ce8 : push rdi ; clc ; ret
0x0000000000431e60 : push rdi ; cld ; ret
0x0000000000495475 : push rdi ; cli ; call qword ptr [rax + 0x20fffa56]
0x000000000049566d : push rdi ; cli ; call qword ptr [rax]
0x0000000000495531 : push rdi ; cli ; call rdx
0x000000000049552d : push rdi ; cli ; inc dword ptr [rdx + 0x57] ; cli ; call rdx
0x00000000004954b1 : push rdi ; cli ; jmp rsi
0x0000000000432987 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004377c9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004710f5 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000437749 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043759a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004185b4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043762a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040626e : push rdi ; or al, 0xf ; retf 0xd289
0x000000000048459a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048839a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004845a1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000406263 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041caf6 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000447f70 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000004300de : push rdi ; ret
0x000000000043017e : push rdi ; ret 0xff3
0x000000000042fca3 : push rdi ; retf
0x000000000042fd23 : push rdi ; retf 0xcab2
0x000000000041b260 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045f0a3 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004062a2 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000004949d9 : push rdi ; stc ; jmp qword ptr [rax + 0x20fff958]
0x0000000000432b87 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004323aa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432787 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042677b : push rdi ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000044357b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042de98 : push rdi ; xor eax, eax ; ret
0x000000000046249b : push rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000495514 : push rdx ; pop rdx ; cli ; jmp rdx
0x00000000004234fa : push rdx ; retf 0xfffe
0x0000000000453f4d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000049501c : push rdx ; xor edi, edx ; jmp rdx
0x000000000042edc4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044a2c9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x44a320 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000438181 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004381f1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447725 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000438111 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004476c3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042edd9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004620a2 : push rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000431e12 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432581 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004321b5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432395 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432575 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431fd5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004954bd : push rsi ; cli ; call qword ptr [rsi + 0x26fffa55]
0x00000000004955f9 : push rsi ; cli ; call rsp
0x00000000004955f5 : push rsi ; cli ; inc dword ptr [rsi + rdx*2 - 6] ; call rsp
0x0000000000495479 : push rsi ; cli ; jmp qword ptr [rax]
0x00000000004a9500 : push rsi ; cli ; push 0x6e ; ja 0x4a948f ; ret 0x48f
0x0000000000449576 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000045ba6e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000449566 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000449536 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a8960 : push rsi ; pop rdx ; je 0x4a892c ; ret 0xacfc
0x00000000004954b0 : push rsi ; push rdi ; cli ; jmp rsi
0x0000000000452f36 : push rsi ; ret
0x0000000000406fd5 : push rsi ; ret 8
0x000000000040b926 : push rsi ; retf 0xffff
0x000000000046a5e1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000494ab0 : push rsi ; scasb al, byte ptr [rdi] ; stc ; inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; stc ; call rdx
0x000000000045b79a : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045f4b3 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004268bb : push rsi ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000449546 : push rsi ; sub eax, edx ; ret
0x00000000004a6f28 : push rsi ; xchg eax, ebp ; jge 0x4a6f0d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042edee : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494fb8 : push rsi ; xor dl, bh ; jmp rsi
0x00000000004b0d05 : push rsp ; add byte ptr [rax], al ; mov byte ptr [rcx], cl ; cli ; call qword ptr [rax]
0x0000000000475971 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004826fa : push rsp ; and al, 0x10 ; call rdx
0x000000000041eb48 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041f0a5 : push rsp ; and al, 8 ; call 0x41b345
0x000000000049550d : push rsp ; cli ; jmp rdx
0x00000000004955dc : push rsp ; pop rcx ; cli ; jmp rsp
0x00000000004624e8 : push rsp ; push rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000453f54 : push rsp ; ret
0x000000000048917c : push rsp ; ret 0x4808
0x0000000000482b75 : push rsp ; retf 0x48f8
0x00000000004adcec : push rsp ; retf 0xfff6
0x00000000004061b7 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004949d1 : push rsp ; stc ; jmp qword ptr [rax + 0x20fff955]
0x00000000004952d3 : push rsp ; sub bh, dl ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004a912a : push rsp ; syscall
0x00000000004950e4 : push rsp ; xor bh, dl ; jmp rsp
0x000000000043ff70 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000046384e : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044e7f7 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44e808 ; call r12
0x00000000004555fa : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479dff : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000418cdb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac60
0x0000000000440c70 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ce44 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048c887 : pushfq ; ret 0xf45
0x0000000000496f45 : pushfq ; sti ; call rdx
0x0000000000496f41 : pushfq ; sti ; lcall [rdx] ; pushfq ; sti ; call rdx
0x00000000004ad554 : pushfq ; stosb byte ptr [rdi], al ; idiv bh ; retf
0x00000000004b0650 : rcl ah, 1 ; stc ; jmp qword ptr [rcx]
0x000000000049567c : rcl byte ptr [rbp - 6], 0xff ; push rax ; push rbp ; cli ; jmp rax
0x00000000004b30c0 : rcl byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x00000000004a9271 : rcl byte ptr [rdi], cl ; retf
0x00000000004a8d9a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a895f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a892d ; ret 0xacfc
0x00000000004a8d99 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a895b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8931 ; ret 0xacfc
0x0000000000494c88 : rcr ah, 1 ; stc ; call rax
0x0000000000495464 : rcr byte ptr [rax - 6], 0xff ; push rax ; pop rax ; cli ; jmp rax
0x0000000000427233 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000408100 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004672af : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004845a7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004272f5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041688c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000410fc6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d4b8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000046988b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000412372 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000495acc : rcr byte ptr [rbx + rdi*8], 0xff ; rcr byte ptr [rbx + rdi*8], 1 ; jmp rax
0x0000000000495ad0 : rcr byte ptr [rbx + rdi*8], 1 ; jmp rax
0x0000000000495a90 : rcr byte ptr [rbx], 1 ; sti ; jmp rax
0x00000000004a8d7d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000425a7a : rcr cl, cl ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000494c84 : rcr dl, 1 ; stc ; call rax
0x0000000000482859 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a90d1 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000044a404 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000044a3f6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b12a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000420dd1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x000000000042713a : repne insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000400416 : ret
0x00000000004006b7 : ret 0
0x000000000049f3c0 : ret 0x10
0x000000000047b6ea : ret 0x101
0x000000000048457c : ret 0x114d
0x000000000045afa4 : ret 0x1176
0x000000000047fc5c : ret 0x1272
0x000000000047c7f3 : ret 0x13e9
0x000000000048ad21 : ret 0x145
0x0000000000483a26 : ret 0x1474
0x0000000000479288 : ret 0x1475
0x0000000000475a21 : ret 0x1477
0x00000000004494d8 : ret 0x148
0x0000000000406af4 : ret 0x149
0x000000000043b59c : ret 0x14d
0x000000000040cfda : ret 0x151
0x000000000040ccda : ret 0x154
0x000000000040c6da : ret 0x15a
0x000000000040c5da : ret 0x15b
0x000000000040c3da : ret 0x15d
0x000000000046d531 : ret 0x1674
0x000000000044c93e : ret 0x16e9
0x0000000000429cca : ret 0x17
0x000000000042e376 : ret 0x1776
0x000000000040cde2 : ret 0x18
0x000000000043b4d9 : ret 0x180f
0x000000000042df05 : ret 0x1876
0x0000000000408fda : ret 0x191
0x0000000000408eda : ret 0x192
0x0000000000408cda : ret 0x194
0x000000000045af9b : ret 0x1a72
0x00000000004a92da : ret 0x1ad4
0x0000000000409fa2 : ret 0x1b
0x00000000004a7a6d : ret 0x1b49
0x000000000048edef : ret 0x1be8
0x000000000045dfc9 : ret 0x1ce9
0x000000000046755a : ret 0x1d2
0x00000000004a1090 : ret 0x1d4
0x00000000004a1828 : ret 0x1d5
0x0000000000400de1 : ret 0x1d89
0x0000000000480e85 : ret 0x1de8
0x0000000000410e82 : ret 0x1f0f
0x0000000000420af6 : ret 0x1f77
0x00000000004030ad : ret 0x1fe9
0x000000000045be97 : ret 0x200
0x0000000000477e0b : ret 0x2041
0x000000000044d3fc : ret 0x2044
0x0000000000462f67 : ret 0x20be
0x000000000048ac8b : ret 0x2148
0x000000000041595d : ret 0x214c
0x0000000000414eec : ret 0x2175
0x000000000047e9f8 : ret 0x2275
0x0000000000444248 : ret 0x2288
0x00000000004302e2 : ret 0x2373
0x00000000004a0098 : ret 0x24
0x000000000041809d : ret 0x2501
0x0000000000468634 : ret 0x2504
0x00000000004257a3 : ret 0x2575
0x000000000048c721 : ret 0x25e9
0x000000000044fcff : ret 0x26
0x0000000000451086 : ret 0x26ae
0x000000000044ec4a : ret 0x26d2
0x0000000000443bf6 : ret 0x2774
0x0000000000431ab6 : ret 0x280f
0x000000000042def5 : ret 0x2876
0x000000000047ce0a : ret 0x28e8
0x000000000047ea77 : ret 0x28f5
0x000000000041dfb3 : ret 0x29
0x000000000046478e : ret 0x290f
0x0000000000402048 : ret 0x2948
0x00000000004676ca : ret 0x2949
0x0000000000411390 : ret 0x294c
0x00000000004151cd : ret 0x294d
0x00000000004249ed : ret 0x297e
0x0000000000423aed : ret 0x298d
0x000000000041befa : ret 0x29e2
0x0000000000400676 : ret 0x2b
0x0000000000412a7a : ret 0x2b48
0x0000000000424ecb : ret 0x2b74
0x0000000000420e12 : ret 0x2b75
0x000000000044b5a2 : ret 0x2b77
0x00000000004009a5 : ret 0x2b8
0x00000000004013c6 : ret 0x2bab
0x00000000004796aa : ret 0x2be
0x000000000048c70f : ret 0x2be9
0x000000000042165e : ret 0x2c75
0x000000000046750e : ret 0x2ce8
0x00000000004704c5 : ret 0x2e66
0x000000000044f66e : ret 0x2f75
0x0000000000473b9a : ret 0x307
0x00000000004691f5 : ret 0x30be
0x00000000004a0588 : ret 0x33
0x0000000000455e04 : ret 0x349
0x000000000048aac0 : ret 0x3575
0x000000000047b3ba : ret 0x3774
0x000000000042e356 : ret 0x3776
0x00000000004a8bba : ret 0x3827
0x000000000047134e : ret 0x3873
0x000000000042dee5 : ret 0x3876
0x0000000000418b4b : ret 0x389
0x00000000004a7246 : ret 0x38ae
0x000000000048e3d2 : ret 0x38e8
0x0000000000489698 : ret 0x3901
0x000000000048117d : ret 0x3934
0x000000000046eb08 : ret 0x3941
0x0000000000413321 : ret 0x3948
0x0000000000403c6d : ret 0x3949
0x0000000000420f3c : ret 0x394c
0x000000000046a19d : ret 0x394d
0x0000000000449b52 : ret 0x3a01
0x00000000004302cb : ret 0x3a73
0x00000000004881e3 : ret 0x3a83
0x000000000048120a : ret 0x3b34
0x000000000044a571 : ret 0x3b48
0x000000000044d0df : ret 0x3b8
0x000000000045be32 : ret 0x3bd
0x0000000000416149 : ret 0x3c75
0x000000000048113d : ret 0x3d
0x000000000047f3e8 : ret 0x3d73
0x0000000000422711 : ret 0x3d83
0x000000000041ea6f : ret 0x3de9
0x000000000047b21a : ret 0x3e80
0x00000000004034bb : ret 0x4002
0x000000000040f56d : ret 0x4074
0x0000000000473f11 : ret 0x408d
0x00000000004038c1 : ret 0x4101
0x0000000000461838 : ret 0x4108
0x0000000000461fe5 : ret 0x4110
0x00000000004811b7 : ret 0x4134
0x00000000004565b7 : ret 0x415f
0x000000000045401e : ret 0x41c3
0x000000000042894a : ret 0x4266
0x0000000000471fc3 : ret 0x4389
0x00000000004080d1 : ret 0x4401
0x0000000000469a4b : ret 0x4404
0x000000000041c44b : ret 0x4466
0x000000000041fde3 : ret 0x4473
0x000000000044fbba : ret 0x46d
0x00000000004a7d44 : ret 0x474c
0x000000000044ed16 : ret 0x478
0x0000000000425ff6 : ret 0x4801
0x00000000004142d6 : ret 0x4803
0x00000000004247b1 : ret 0x4804
0x00000000004441d3 : ret 0x4808
0x00000000004052a6 : ret 0x480a
0x000000000041e488 : ret 0x4810
0x000000000045bd4c : ret 0x4811
0x000000000045ef37 : ret 0x481e
0x000000000045ef57 : ret 0x4820
0x000000000045183e : ret 0x4830
0x0000000000428856 : ret 0x4840
0x0000000000443948 : ret 0x48c3
0x000000000041ae63 : ret 0x48e9
0x00000000004a9506 : ret 0x48f
0x0000000000403088 : ret 0x4901
0x0000000000458a5b : ret 0x4902
0x000000000041b4a2 : ret 0x4908
0x000000000042ce1c : ret 0x4910
0x000000000040509a : ret 0x4a1
0x0000000000403909 : ret 0x4c01
0x000000000042078a : ret 0x4c07
0x000000000045e7f6 : ret 0x4c40
0x000000000041f446 : ret 0x4d01
0x000000000045d2b8 : ret 0x4d10
0x00000000004049af : ret 0x4de8
0x00000000004a8f67 : ret 0x4e27
0x000000000040188e : ret 0x4f76
0x00000000004523bf : ret 0x5089
0x000000000044f4d7 : ret 0x508b
0x00000000004302b4 : ret 0x5173
0x000000000044d337 : ret 0x5488
0x00000000004a71cc : ret 0x5508
0x000000000047308e : ret 0x5590
0x000000000042e336 : ret 0x5776
0x00000000004a9498 : ret 0x5803
0x0000000000458ac1 : ret 0x5841
0x0000000000487b55 : ret 0x5876
0x00000000004109c3 : ret 0x589
0x00000000004a6ea0 : ret 0x591c
0x00000000004a7c07 : ret 0x5ae4
0x000000000042651e : ret 0x5ae9
0x0000000000458ca9 : ret 0x5be9
0x00000000004116ca : ret 0x5d5b
0x00000000004a9932 : ret 0x62c1
0x000000000047c660 : ret 0x6349
0x0000000000485374 : ret 0x637f
0x000000000045bd23 : ret 0x6411
0x000000000045c7b1 : ret 0x6601
0x000000000042de71 : ret 0x6620
0x0000000000425918 : ret 0x66c3
0x000000000047fc6e : ret 0x674
0x000000000042e326 : ret 0x6776
0x00000000004a6ebf : ret 0x67b2
0x00000000004190f5 : ret 0x6874
0x000000000046f0b9 : ret 0x69e8
0x000000000044c9ea : ret 0x6ae9
0x00000000004a9ac1 : ret 0x6f9
0x0000000000480ec0 : ret 0x72e8
0x000000000042028b : ret 0x737
0x0000000000419271 : ret 0x7401
0x000000000042477a : ret 0x7402
0x000000000047c6ca : ret 0x7403
0x000000000044da61 : ret 0x7404
0x0000000000472e62 : ret 0x7408
0x00000000004149fd : ret 0x7420
0x00000000004656e4 : ret 0x7450
0x0000000000480e7a : ret 0x7472
0x00000000004480b9 : ret 0x7501
0x00000000004480c6 : ret 0x7502
0x00000000004480d3 : ret 0x7504
0x0000000000420a9d : ret 0x7508
0x000000000044808b : ret 0x7510
0x0000000000448098 : ret 0x7520
0x000000000042684e : ret 0x7540
0x0000000000475980 : ret 0x7577
0x0000000000425de5 : ret 0x75e8
0x000000000042f1a2 : ret 0x7677
0x0000000000482b12 : ret 0x777
0x00000000004843d6 : ret 0x77f
0x0000000000405101 : ret 0x7ce9
0x000000000042de11 : ret 0x7e20
0x000000000042e28c : ret 0x7e40
0x00000000004274fc : ret 0x7f10
0x000000000046ed20 : ret 0x7f3c
0x0000000000435a7e : ret 0x80
0x00000000004286d9 : ret 0x8000
0x000000000048e092 : ret 0x8001
0x0000000000476dc7 : ret 0x8116
0x000000000046100b : ret 0x8148
0x000000000048e5e8 : ret 0x8166
0x000000000041f170 : ret 0x820f
0x00000000004582e3 : ret 0x8301
0x000000000047d3e7 : ret 0x8303
0x000000000042ed70 : ret 0x830f
0x000000000045ee04 : ret 0x8341
0x0000000000425855 : ret 0x8348
0x0000000000449fd0 : ret 0x8349
0x000000000047f25f : ret 0x8364
0x00000000004647b7 : ret 0x83e8
0x00000000004727a6 : ret 0x840
0x0000000000475d79 : ret 0x8401
0x0000000000402986 : ret 0x840f
0x0000000000457030 : ret 0x841
0x000000000048b33e : ret 0x8440
0x0000000000479e07 : ret 0x848b
0x0000000000470169 : ret 0x8502
0x000000000040328f : ret 0x850f
0x000000000045b683 : ret 0x8511
0x000000000044dd92 : ret 0x8545
0x0000000000404e82 : ret 0x8548
0x00000000004257ca : ret 0x854d
0x0000000000407f41 : ret 0x8575
0x00000000004015c2 : ret 0x860f
0x000000000041ce2f : ret 0x870f
0x00000000004a67de : ret 0x871e
0x000000000046ed27 : ret 0x875
0x000000000042df15 : ret 0x876
0x0000000000404fac : ret 0x8801
0x000000000045532d : ret 0x8804
0x000000000045c802 : ret 0x8841
0x000000000047e34e : ret 0x8844
0x0000000000402c3f : ret 0x8901
0x000000000045036e : ret 0x8902
0x000000000041457a : ret 0x8908
0x000000000045edf6 : ret 0x8941
0x00000000004216ff : ret 0x8944
0x0000000000400d88 : ret 0x8948
0x00000000004157aa : ret 0x8949
0x0000000000403477 : ret 0x894c
0x000000000048358b : ret 0x894e
0x00000000004196da : ret 0x8a
0x0000000000487d80 : ret 0x8b
0x0000000000453c59 : ret 0x8b01
0x00000000004707ba : ret 0x8b04
0x0000000000475b13 : ret 0x8b05
0x000000000047066b : ret 0x8b08
0x00000000004a900e : ret 0x8b36
0x0000000000403c5e : ret 0x8b41
0x000000000046edc3 : ret 0x8b44
0x0000000000415bd3 : ret 0x8b48
0x0000000000413546 : ret 0x8b49
0x000000000048350e : ret 0x8b4a
0x000000000040f77d : ret 0x8b4c
0x0000000000465f4d : ret 0x8c0f
0x000000000045e851 : ret 0x8d04
0x000000000048c53f : ret 0x8d0f
0x000000000041ed4c : ret 0x8d44
0x000000000041b941 : ret 0x8d48
0x000000000046942c : ret 0x8d49
0x00000000004828b7 : ret 0x8d4a
0x000000000041fe64 : ret 0x8d4c
0x000000000045ee12 : ret 0x8d89
0x0000000000455dfb : ret 0x8e0f
0x000000000045f0ba : ret 0x8f0f
0x0000000000442c55 : ret 0x90c3
0x0000000000425f99 : ret 0x90e9
0x0000000000477ece : ret 0x9174
0x000000000048b17b : ret 0x9272
0x000000000041d14d : ret 0x948
0x0000000000443618 : ret 0x94c
0x0000000000484da2 : ret 0x950f
0x000000000044c370 : ret 0x9572
0x00000000004a7e33 : ret 0x9576
0x0000000000461a0f : ret 0x958b
0x000000000042470e : ret 0x976
0x0000000000403b9a : ret 0x98e8
0x000000000047d193 : ret 0x9be9
0x0000000000469e9a : ret 0x9e
0x0000000000404ec7 : ret 0x9e8
0x0000000000487265 : ret 0x9eb
0x000000000049ebc0 : ret 0xa
0x00000000004aed46 : ret 0xa01
0x000000000044da88 : ret 0xa076
0x000000000044c8b4 : ret 0xa0e9
0x000000000048c5fe : ret 0xa4e9
0x00000000004a7b23 : ret 0xa514
0x000000000048c6fd : ret 0xa5e9
0x000000000044ea2d : ret 0xabe
0x0000000000412036 : ret 0xac60
0x00000000004a7fa7 : ret 0xac65
0x00000000004a8964 : ret 0xacfc
0x000000000046084f : ret 0xae9
0x000000000042560a : ret 0xaeeb
0x00000000004ac3c7 : ret 0xb00e
0x00000000004139ad : ret 0xb074
0x00000000004670ea : ret 0xb1
0x000000000041d1ab : ret 0xb277
0x000000000045988b : ret 0xb2eb
0x000000000046651e : ret 0xb308
0x000000000044c8a0 : ret 0xb4e9
0x000000000045ee36 : ret 0xb589
0x000000000048a075 : ret 0xb5e8
0x0000000000404f65 : ret 0xb60f
0x00000000004010d4 : ret 0xb70f
0x000000000046b095 : ret 0xb8
0x000000000046ce3c : ret 0xb848
0x000000000048e452 : ret 0xb8e8
0x00000000004a7e6e : ret 0xb9b9
0x000000000046e675 : ret 0xb9e9
0x0000000000470244 : ret 0xba41
0x0000000000424e43 : ret 0xbae9
0x00000000004599c2 : ret 0xbaeb
0x000000000048cbb6 : ret 0xbc80
0x000000000045ee22 : ret 0xbd89
0x0000000000465e8d : ret 0xbde8
0x0000000000480fc2 : ret 0xbe0f
0x00000000004a7bc4 : ret 0xbe57
0x0000000000428599 : ret 0xc000
0x0000000000405496 : ret 0xc031
0x000000000045bd6e : ret 0xc083
0x000000000042dcd0 : ret 0xc085
0x0000000000474549 : ret 0xc148
0x000000000041d2c9 : ret 0xc183
0x0000000000406c28 : ret 0xc189
0x000000000044d722 : ret 0xc221
0x000000000042173b : ret 0xc275
0x0000000000476926 : ret 0xc283
0x0000000000430184 : ret 0xc2b2
0x000000000044b60e : ret 0xc35b
0x000000000045b15d : ret 0xc389
0x000000000042173d : ret 0xc3f3
0x00000000004a4322 : ret 0xc4c3
0x00000000004a7778 : ret 0xc4ff
0x000000000042e2f1 : ret 0xc540
0x000000000045b226 : ret 0xc589
0x00000000004646ec : ret 0xc689
0x000000000047f23d : ret 0xc74
0x0000000000444590 : ret 0xc748
0x000000000046a2e8 : ret 0xc789
0x0000000000481052 : ret 0xc829
0x00000000004630b3 : ret 0xc839
0x0000000000418b3c : ret 0xc883
0x0000000000400bb1 : ret 0xc889
0x0000000000461ae7 : ret 0xc985
0x0000000000470753 : ret 0xc9eb
0x00000000004441a1 : ret 0xc9ff
0x00000000004008c1 : ret 0xca21
0x000000000047840f : ret 0xcbe9
0x00000000004a720a : ret 0xcca7
0x00000000004a92ed : ret 0xcd11
0x0000000000407432 : ret 0xce80
0x000000000049efc0 : ret 0xd
0x0000000000422fbe : ret 0xd020
0x0000000000410206 : ret 0xd021
0x000000000044eeaf : ret 0xd029
0x0000000000400ba9 : ret 0xd089
0x000000000046556b : ret 0xd120
0x0000000000400bad : ret 0xd201
0x00000000004013f4 : ret 0xd284
0x000000000045ad1a : ret 0xd285
0x000000000048eb38 : ret 0xd2e8
0x0000000000479e96 : ret 0xd348
0x0000000000452d37 : ret 0xd5e9
0x00000000004813ff : ret 0xd75
0x000000000045e1f6 : ret 0xd774
0x00000000004a8d85 : ret 0xd8f
0x0000000000412323 : ret 0xdaf7
0x000000000045750a : ret 0xdb76
0x00000000004a8e66 : ret 0xdcd9
0x00000000004a7de2 : ret 0xde5d
0x00000000004a6b71 : ret 0xde9e
0x0000000000428459 : ret 0xe000
0x0000000000448049 : ret 0xe074
0x0000000000450ac0 : ret 0xe083
0x00000000004b537c : ret 0xe0a
0x000000000048c7c1 : ret 0xe1e9
0x00000000004508f2 : ret 0xe1eb
0x000000000040fe10 : ret 0xe281
0x0000000000400d60 : ret 0xe283
0x00000000004271f8 : ret 0xe575
0x0000000000466b70 : ret 0xe57f
0x00000000004674ea : ret 0xe583
0x000000000044b602 : ret 0xe680
0x0000000000467bcf : ret 0xe683
0x00000000004a8f86 : ret 0xe71f
0x000000000047925a : ret 0xe75
0x0000000000424ef6 : ret 0xe775
0x00000000004671a3 : ret 0xe7e9
0x000000000042e955 : ret 0xe883
0x0000000000478dd6 : ret 0xe8c0
0x000000000040523a : ret 0xe901
0x000000000040527f : ret 0xe902
0x0000000000444236 : ret 0xe908
0x000000000043fdd6 : ret 0xe910
0x000000000045f67d : ret 0xe920
0x00000000004a72e7 : ret 0xe970
0x000000000044b59a : ret 0xea81
0x000000000040fedd : ret 0xeab8
0x0000000000400dfd : ret 0xeac1
0x000000000047da96 : ret 0xeb01
0x0000000000470683 : ret 0xeb04
0x000000000042ce4a : ret 0xeb10
0x0000000000481222 : ret 0xeb34
0x00000000004a9a98 : ret 0xec2
0x000000000045e180 : ret 0xed75
0x00000000004a973a : ret 0xef32
0x000000000048c388 : ret 0xef89
0x0000000000475f5f : ret 0xefeb
0x000000000042bc3e : ret 0xf
0x0000000000428319 : ret 0xf000
0x0000000000407915 : ret 0xf01
0x000000000041caf9 : ret 0xf02
0x00000000004034aa : ret 0xf04
0x0000000000413c33 : ret 0xf08
0x000000000041cdc9 : ret 0xf0f
0x000000000041070e : ret 0xf10
0x0000000000412eda : ret 0xf2
0x00000000004679eb : ret 0xf20
0x000000000041f043 : ret 0xf275
0x0000000000464aa6 : ret 0xf3f
0x0000000000467f73 : ret 0xf40
0x00000000004710fd : ret 0xf41
0x000000000048c83c : ret 0xf45
0x0000000000425b99 : ret 0xf475
0x000000000044362f : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000467f59 : ret 0xf50
0x0000000000489806 : ret 0xf608
0x00000000004755d5 : ret 0xf631
0x00000000004288d6 : ret 0xf66
0x000000000047aee7 : ret 0xf675
0x0000000000493160 : ret 0xf712
0x000000000049318c : ret 0xf713
0x000000000049068a : ret 0xf730
0x00000000004711bc : ret 0xf741
0x0000000000407b62 : ret 0xf748
0x0000000000482afc : ret 0xf749
0x0000000000484972 : ret 0xf7ba
0x00000000004281d9 : ret 0xf800
0x00000000004a6a50 : ret 0xf869
0x000000000041a873 : ret 0xf8b
0x0000000000400c2b : ret 0xf8c1
0x00000000004430b6 : ret 0xf8c5
0x000000000044b944 : ret 0xf8e9
0x0000000000495010 : ret 0xfa2d
0x0000000000495018 : ret 0xfa33
0x000000000045b5e2 : ret 0xfa4e
0x0000000000477a1a : ret 0xfa9e
0x0000000000421422 : ret 0xfae9
0x000000000046f71a : ret 0xfb21
0x0000000000421a0a : ret 0xfbe9
0x0000000000428099 : ret 0xfc00
0x0000000000426641 : ret 0xfc3
0x00000000004536da : ret 0xfcea
0x000000000047d22a : ret 0xfd08
0x000000000047294a : ret 0xfd92
0x0000000000427f59 : ret 0xfe00
0x0000000000400f45 : ret 0xfe83
0x0000000000427e19 : ret 0xff00
0x000000000040f772 : ret 0xff0c
0x00000000004375f1 : ret 0xff2
0x0000000000450a6b : ret 0xff25
0x000000000042eb19 : ret 0xff2d
0x000000000042887a : ret 0xff3
0x000000000046c197 : ret 0xff31
0x000000000041c91a : ret 0xff53
0x0000000000427cd9 : ret 0xff80
0x0000000000467771 : ret 0xff83
0x000000000045749c : ret 0xff85
0x000000000042579a : ret 0xffa5
0x000000000045e7e2 : ret 0xffa8
0x000000000040d3ba : ret 0xffaf
0x000000000040d0ba : ret 0xffb2
0x0000000000413047 : ret 0xffb8
0x0000000000403d0e : ret 0xffbf
0x000000000040ff2a : ret 0xffc0
0x00000000004254a8 : ret 0xffdf
0x000000000045bed0 : ret 0xffe0
0x000000000046e754 : ret 0xffe7
0x0000000000469409 : ret 0xffe8
0x000000000044c955 : ret 0xffe9
0x00000000004113f1 : ret 0xffef
0x0000000000424ec2 : ret 0xfff
0x000000000040fd52 : ret 0xfff0
0x000000000046bb80 : ret 0xfff1
0x00000000004adae5 : ret 0xfff6
0x00000000004277d9 : ret 0xfff8
0x0000000000494d29 : ret 0xfff9
0x000000000041e978 : ret 0xfffa
0x0000000000406b49 : ret 0xfffb
0x0000000000427699 : ret 0xfffc
0x0000000000401e1a : ret 0xfffd
0x0000000000427559 : ret 0xfffe
0x00000000004177ec : ret 0xffff
0x000000000042e565 : ret 1
0x000000000042e58b : ret 2
0x0000000000412fc0 : ret 3
0x000000000040c218 : ret 4
0x00000000004391e7 : ret 5
0x000000000049e768 : ret 6
0x00000000004174c8 : ret 7
0x0000000000406fa2 : ret 8
0x0000000000448afa : ret 9
0x000000000047ea6f : retf
0x000000000040307a : retf 0
0x000000000049f520 : retf 0x11
0x00000000004882ad : retf 0x114d
0x00000000004772e0 : retf 0x12b9
0x00000000004592cf : retf 0x12e9
0x0000000000463509 : retf 0x147f
0x0000000000426ad3 : retf 0x148
0x000000000043595c : retf 0x14c
0x0000000000429da2 : retf 0x16
0x00000000004844ad : retf 0x194d
0x000000000044f1c2 : retf 0x19b8
0x00000000004093c4 : retf 0x1b
0x0000000000410f21 : retf 0x1be
0x00000000004203f8 : retf 0x1be9
0x00000000004a10c8 : retf 0x1d4
0x00000000004a1868 : retf 0x1d5
0x000000000042e240 : retf 0x1f0f
0x00000000004ac80c : retf 0x20
0x00000000004b09ca : retf 0x2000
0x000000000046e971 : retf 0x20be
0x0000000000416571 : retf 0x2148
0x000000000048f930 : retf 0x22
0x000000000041d153 : retf 0x2274
0x000000000047f922 : retf 0x23
0x0000000000401635 : retf 0x230
0x000000000047a5b2 : retf 0x23fd
0x00000000004a00d8 : retf 0x24
0x0000000000478c1e : retf 0x2402
0x0000000000452a41 : retf 0x2664
0x000000000045046a : retf 0x26c4
0x00000000004308c9 : retf 0x280f
0x000000000047cc3a : retf 0x28e
0x000000000041ceb0 : retf 0x29
0x0000000000472b1a : retf 0x2941
0x000000000040bdbf : retf 0x2948
0x0000000000412dee : retf 0x294c
0x00000000004218ba : retf 0x2980
0x0000000000420832 : retf 0x2991
0x000000000041fbd2 : retf 0x299d
0x00000000004180a6 : retf 0x2a3d
0x000000000041fb68 : retf 0x2a74
0x000000000041167b : retf 0x2a7e
0x00000000004a7c5c : retf 0x2a91
0x000000000040139e : retf 0x2bab
0x000000000045afaf : retf 0x2c73
0x000000000045af89 : retf 0x2c76
0x00000000004a70da : retf 0x2c90
0x0000000000477f8f : retf 0x2de9
0x000000000044f951 : retf 0x2e75
0x00000000004015f8 : retf 0x31
0x00000000004371e6 : retf 0x3148
0x00000000004a8ec5 : retf 0x3159
0x00000000004a8f2d : retf 0x32dd
0x00000000004a05c8 : retf 0x33
0x00000000004a77e3 : retf 0x33e6
0x000000000046ede2 : retf 0x34
0x00000000004a7d11 : retf 0x3617
0x00000000004371c2 : retf 0x377
0x0000000000420700 : retf 0x3948
0x0000000000472880 : retf 0x3949
0x000000000041b41a : retf 0x394c
0x0000000000410982 : retf 0x3bc
0x000000000042178d : retf 0x3d83
0x00000000004a9326 : retf 0x3d8a
0x0000000000458cc0 : retf 0x3e9
0x00000000004a6bbb : retf 0x3ec
0x000000000045b5f2 : retf 0x40e8
0x0000000000450ac5 : retf 0x4102
0x0000000000450c11 : retf 0x4110
0x0000000000456fce : retf 0x4180
0x000000000042892c : retf 0x4266
0x0000000000456d33 : retf 0x4280
0x000000000048a23d : retf 0x42f6
0x0000000000400fc2 : retf 0x440
0x000000000043fa4a : retf 0x4466
0x0000000000400bd5 : retf 0x458b
0x0000000000466946 : retf 0x45e9
0x0000000000450ba5 : retf 0x462
0x0000000000450af0 : retf 0x463
0x0000000000450573 : retf 0x466
0x0000000000457734 : retf 0x4689
0x000000000041b4d5 : retf 0x4801
0x0000000000419161 : retf 0x4802
0x000000000040fb5c : retf 0x4805
0x000000000040fbc7 : retf 0x4806
0x0000000000472e67 : retf 0x4808
0x000000000040fa78 : retf 0x4809
0x000000000040fcb8 : retf 0x480a
0x000000000040fc7c : retf 0x480d
0x0000000000412d03 : retf 0x4810
0x0000000000412e01 : retf 0x4820
0x0000000000482b76 : retf 0x48f8
0x000000000041eee3 : retf 0x4901
0x00000000004052b2 : retf 0x4a0
0x0000000000402b43 : retf 0x4a8d
0x000000000041fb3a : retf 0x4b74
0x0000000000419113 : retf 0x4c01
0x0000000000425082 : retf 0x4c89
0x0000000000489799 : retf 0x4d20
0x0000000000484478 : retf 0x4de8
0x0000000000482a7b : retf 0x4df0
0x000000000048449c : retf 0x4df8
0x00000000004203c2 : retf 0x51e9
0x0000000000467a36 : retf 0x53c
0x0000000000485382 : retf 0x557f
0x000000000048aef6 : retf 0x5774
0x00000000004851bd : retf 0x5d5b
0x0000000000479f25 : retf 0x5f6
0x0000000000410bec : retf 0x6411
0x00000000004309b3 : retf 0x6601
0x0000000000430b03 : retf 0x6602
0x0000000000430c53 : retf 0x6603
0x0000000000430da3 : retf 0x6604
0x0000000000430ef3 : retf 0x6605
0x0000000000431043 : retf 0x6606
0x0000000000431193 : retf 0x6607
0x00000000004312e3 : retf 0x6608
0x0000000000431433 : retf 0x6609
0x0000000000431583 : retf 0x660a
0x00000000004316d3 : retf 0x660b
0x0000000000431823 : retf 0x660c
0x0000000000431973 : retf 0x660d
0x0000000000431ac3 : retf 0x660e
0x0000000000431c13 : retf 0x660f
0x00000000004371e1 : retf 0x676
0x00000000004a9245 : retf 0x67ca
0x0000000000475701 : retf 0x6b8
0x00000000004a7242 : retf 0x6ee8
0x00000000004a9106 : retf 0x7272
0x00000000004a88df : retf 0x76a5
0x0000000000413303 : retf 0x775
0x00000000004a7762 : retf 0x79f5
0x000000000044d23b : retf 0x8041
0x000000000042e173 : retf 0x8148
0x0000000000403532 : retf 0x820f
0x00000000004129b0 : retf 0x830f
0x0000000000415d21 : retf 0x8310
0x0000000000414d0d : retf 0x8320
0x0000000000457b37 : retf 0x8341
0x000000000041b4d2 : retf 0x8348
0x000000000042cdef : retf 0x8349
0x000000000041b9b0 : retf 0x840f
0x00000000004a8050 : retf 0x8481
0x000000000041eabf : retf 0x84c
0x0000000000416726 : retf 0x850f
0x00000000004008c3 : retf 0x8545
0x000000000044467b : retf 0x8548
0x000000000042dc99 : retf 0x860f
0x00000000004359ac : retf 0x870f
0x0000000000489840 : retf 0x8820
0x0000000000456d1d : retf 0x8880
0x0000000000425088 : retf 0x8902
0x00000000004015b4 : retf 0x8904
0x0000000000413d40 : retf 0x8920
0x000000000044da7a : retf 0x8940
0x0000000000406266 : retf 0x8941
0x0000000000461720 : retf 0x8944
0x00000000004051b3 : retf 0x8948
0x00000000004303e9 : retf 0x8949
0x0000000000412cac : retf 0x894c
0x0000000000458e2a : retf 0x8966
0x0000000000456d7e : retf 0x8980
0x0000000000485872 : retf 0x8b41
0x0000000000406b9b : retf 0x8b48
0x0000000000407a1c : retf 0x8b49
0x00000000004327e9 : retf 0x8b4c
0x000000000041b9ee : retf 0x8d48
0x000000000042dba9 : retf 0x8d4a
0x00000000004475cd : retf 0x8d4c
0x000000000042040b : retf 0x8e9
0x00000000004028b2 : retf 0x8fe
0x000000000042cd2d : retf 0x9066
0x00000000004035b0 : retf 0x9273
0x00000000004115f2 : retf 0x92d
0x00000000004a89ae : retf 0x93a2
0x000000000041fec6 : retf 0x948
0x000000000046e1ac : retf 0x98e9
0x00000000004a8d4b : retf 0x99e0
0x000000000044da70 : retf 0x9b9
0x00000000004a90ba : retf 0x9d7d
0x00000000004a99c5 : retf 0xa020
0x00000000004a6f25 : retf 0xa1eb
0x00000000004a8fab : retf 0xa2fe
0x000000000041f1d9 : retf 0xa74
0x00000000004a907c : retf 0xab0d
0x0000000000410a1d : retf 0xade9
0x00000000004a95ce : retf 0xae32
0x0000000000429052 : retf 0xb
0x0000000000420161 : retf 0xb2e9
0x00000000004a7dc9 : retf 0xb51a
0x000000000042e7d2 : retf 0xb60f
0x000000000048add2 : retf 0xb801
0x0000000000457b44 : retf 0xb941
0x0000000000487d70 : retf 0xba
0x000000000041ef11 : retf 0xba41
0x0000000000470372 : retf 0xbb41
0x00000000004a90d3 : retf 0xbb9a
0x0000000000485a26 : retf 0xbeb
0x00000000004a911d : retf 0xbf4b
0x000000000046e8cc : retf 0xc
0x0000000000459c98 : retf 0xc031
0x0000000000404933 : retf 0xc089
0x00000000004a8d9d : retf 0xc0fe
0x00000000004103aa : retf 0xc148
0x00000000004435de : retf 0xc149
0x0000000000462045 : retf 0xc239
0x0000000000401e0d : retf 0xc6
0x00000000004668c1 : retf 0xc7
0x0000000000425ed4 : retf 0xc748
0x0000000000443893 : retf 0xc985
0x000000000042fd24 : retf 0xcab2
0x00000000004a432a : retf 0xcccb
0x000000000040ccf7 : retf 0xd
0x00000000004a7b86 : retf 0xd1cb
0x000000000044b70f : retf 0xd231
0x0000000000416dd5 : retf 0xd284
0x0000000000454604 : retf 0xd285
0x0000000000406271 : retf 0xd289
0x00000000004a9297 : retf 0xd39
0x000000000044b506 : retf 0xd975
0x00000000004a9823 : retf 0xde4f
0x00000000004142e1 : retf 0xdeb
0x00000000004a7e53 : retf 0xdf7f
0x0000000000409346 : retf 0xe
0x000000000045b752 : retf 0xe0e8
0x00000000004a78fe : retf 0xe152
0x000000000044b343 : retf 0xe175
0x0000000000485a4b : retf 0xe275
0x0000000000457850 : retf 0xe283
0x00000000004789d9 : retf 0xe474
0x000000000044b1dc : retf 0xe475
0x00000000004a7edc : retf 0xe496
0x000000000045f3c7 : retf 0xe677
0x00000000004a7846 : retf 0xe72e
0x00000000004a6ed3 : retf 0xe80
0x000000000047784b : retf 0xe802
0x0000000000466b35 : retf 0xe87f
0x000000000040fbf9 : retf 0xe903
0x000000000048416c : retf 0xe972
0x0000000000462545 : retf 0xe9ff
0x0000000000483abb : retf 0xea72
0x00000000004141a3 : retf 0xea77
0x00000000004a8e8c : retf 0xea91
0x000000000048812b : retf 0xeac0
0x000000000041d462 : retf 0xeac1
0x0000000000427471 : retf 0xead3
0x000000000040fbb2 : retf 0xeb04
0x000000000040fc11 : retf 0xeb07
0x000000000040fad8 : retf 0xeb08
0x000000000040fcdf : retf 0xeb0b
0x000000000040fcb2 : retf 0xeb0c
0x00000000004a6fad : retf 0xeb83
0x00000000004a97a1 : retf 0xebbf
0x000000000041905b : retf 0xee75
0x000000000047e357 : retf 0xee7c
0x0000000000435bec : retf 0xf01
0x0000000000435d6c : retf 0xf02
0x0000000000435eec : retf 0xf03
0x000000000043606c : retf 0xf04
0x00000000004361ec : retf 0xf05
0x000000000043636c : retf 0xf06
0x00000000004364ec : retf 0xf07
0x000000000043666c : retf 0xf08
0x00000000004367ec : retf 0xf09
0x000000000043696c : retf 0xf0a
0x0000000000436aec : retf 0xf0b
0x0000000000436c6c : retf 0xf0c
0x0000000000436dec : retf 0xf0d
0x0000000000436f6c : retf 0xf0e
0x00000000004370ec : retf 0xf0f
0x000000000044161d : retf 0xf1c5
0x000000000045ee4b : retf 0xf41
0x0000000000443aa0 : retf 0xf48
0x0000000000443c61 : retf 0xf4c
0x0000000000426ad6 : retf 0xf631
0x00000000004a8de8 : retf 0xf64
0x0000000000427353 : retf 0xf66
0x000000000042ed8a : retf 0xf748
0x0000000000491b12 : retf 0xf801
0x000000000041f73d : retf 0xf989
0x00000000004662da : retf 0xf9a1
0x00000000004416ef : retf 0xf9c5
0x0000000000495344 : retf 0xfa24
0x0000000000495144 : retf 0xfa2e
0x000000000049584c : retf 0xfa49
0x000000000049563c : retf 0xfa55
0x0000000000406291 : retf 0xfa83
0x0000000000464a3a : retf 0xfac1
0x000000000045196a : retf 0xfaea
0x0000000000490092 : retf 0xfcbd
0x0000000000453ad2 : retf 0xfce6
0x0000000000451dd2 : retf 0xfd03
0x000000000044e7d2 : retf 0xfd39
0x0000000000443766 : retf 0xfdc5
0x000000000048266b : retf 0xfe8
0x000000000042ebb7 : retf 0xfec5
0x0000000000437a11 : retf 0xff2
0x000000000042f1bb : retf 0xff3
0x000000000040fe84 : retf 0xff31
0x0000000000489972 : retf 0xff8c
0x000000000046ed72 : retf 0xffde
0x000000000040dbd9 : retf 0xffe7
0x00000000004874a2 : retf 0xfff3
0x0000000000465bea : retf 0xfff5
0x0000000000456e17 : retf 0xfff6
0x000000000045f9e2 : retf 0xfff8
0x000000000048e542 : retf 0xfff9
0x0000000000495a79 : retf 0xfffa
0x0000000000466c9f : retf 0xfffb
0x0000000000410501 : retf 0xfffc
0x000000000044feaa : retf 0xfffd
0x000000000041318e : retf 0xfffe
0x000000000040b881 : retf 0xffff
0x0000000000404de3 : retf 1
0x0000000000429952 : retf 2
0x00000000004127ba : retf 3
0x000000000048c295 : retf 4
0x00000000004a2c74 : retf 5
0x000000000040c10a : retf 6
0x0000000000416d29 : retf 7
0x00000000004a3274 : retf 8
0x000000000042eedb : retf 9
0x0000000000495a70 : rol bh, 1 ; cli ; jmp qword ptr [rax]
0x0000000000449c15 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000044b703 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e20c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042de6e : rol bl, 0x83 ; ret 0x6620
0x000000000047474b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041a457 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042e63d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000044a5bd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000428852 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042e35b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000443bf2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a2a60 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479e01 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042f0ad : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045037b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d23e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000411e49 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042e0b2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000485a45 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000048285b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000041a8c8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004565b1 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004749b2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000494ec8 : rol byte ptr [rbx], 1 ; cli ; call rax
0x0000000000467508 : rol byte ptr [rbx], cl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x2ce8
0x000000000044b591 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004679bf : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000044a5be : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008be : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046e672 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000474992 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465a42 : rol byte ptr [rcx], 0x39 ; retf
0x0000000000451d16 : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000040258b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044b927 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x000000000044b940 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000045735c : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; call 0x403e36
0x0000000000451561 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494ec4 : rol byte ptr [rcx], 1 ; cli ; call rax
0x0000000000400baf : rol byte ptr [rcx], cl ; ret 0xc889
0x00000000004749f2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000494994 : rol byte ptr [rdx - 7], 1 ; push rax ; stc ; call qword ptr [rax]
0x00000000004749a2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048be76 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004749e2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004417d5 : rol ch, 1 ; jns 0x4417b4 ; retf 0xead3
0x0000000000441925 : rol ch, 1 ; jns 0x441904 ; retf 0xead3
0x0000000000441a75 : rol ch, 1 ; jns 0x441a54 ; retf 0xead3
0x0000000000441bc5 : rol ch, 1 ; jns 0x441ba4 ; retf 0xead3
0x0000000000441d15 : rol ch, 1 ; jns 0x441cf4 ; retf 0xead3
0x0000000000441e65 : rol ch, 1 ; jns 0x441e44 ; retf 0xead3
0x0000000000441fb5 : rol ch, 1 ; jns 0x441f94 ; retf 0xead3
0x0000000000442105 : rol ch, 1 ; jns 0x4420e4 ; retf 0xead3
0x0000000000442255 : rol ch, 1 ; jns 0x442234 ; retf 0xead3
0x00000000004423a5 : rol ch, 1 ; jns 0x442384 ; retf 0xead3
0x00000000004424f5 : rol ch, 1 ; jns 0x4424d4 ; retf 0xead3
0x0000000000442645 : rol ch, 1 ; jns 0x442624 ; retf 0xead3
0x0000000000442795 : rol ch, 1 ; jns 0x442774 ; retf 0xead3
0x00000000004428e5 : rol ch, 1 ; jns 0x4428c4 ; retf 0xead3
0x0000000000442a35 : rol ch, 1 ; jns 0x442a14 ; retf 0xead3
0x000000000042e3df : rol ch, 1 ; std ; xlatb ; ret
0x00000000004437c6 : rol ch, cl ; std ; xlatb ; ret
0x0000000000443e2f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a4320 : rol cl, 0xc2 ; ret
0x000000000047493c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000044b33c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x000000000044b1d8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000439cb0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042de94 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042e3d3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000443223 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000004780b9 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400929 : rol dword ptr [rcx], 0x8d ; call r11
0x0000000000459d5f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004b09c6 : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x0000000000457e1a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044375e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042eb15 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000424e8c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000424e8b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000494d48 : ror ah, 0xf9 ; call qword ptr [rax]
0x0000000000494d3c : ror al, 1 ; stc ; jmp qword ptr [rax]
0x0000000000495a7c : ror bl, 0xfa ; call qword ptr [rax]
0x0000000000473765 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048aaa8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042dee2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42df29 ; add rax, rdi ; ret
0x0000000000443aa7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047465c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000004131fe : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000475a2c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a5f ; ret
0x000000000044f258 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041fd13 : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000482d11 : ror byte ptr [rax + 0x39], cl ; call 0x490abf2e
0x000000000047c98a : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000471353 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000450a1d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e8b6 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000046084b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x0000000000403c69 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x0000000000403c5a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042df8c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042deb2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042e3a3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000407cb3 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000443aa4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049ee68 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042e635 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000048332c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000046776a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000047a5ae : ror byte ptr [rax - 0x73], 0x35 ; retf 0x23fd
0x000000000042dea2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042ded2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042dec2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000424ebe : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000479a8a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000044cd4a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000413440 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048aabd : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000403474 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000415bd0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000048202a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040fe0d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000042150d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004168b1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4168c7 ; ret
0x0000000000484d9c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000452a3d : ror byte ptr [rax - 0x7d], 0x3d ; retf 0x2664
0x0000000000418635 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475943 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000417851 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041fe5d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb467c
0x0000000000420f9d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb57bc
0x0000000000421d57 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6576
0x000000000042385a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb8079
0x0000000000423d5f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb857e
0x000000000042429b : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb8aba
0x0000000000410e90 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044de94 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x00000000004142da : ror byte ptr [rax - 0x7d], cl ; loop 0x4142e2 ; add rdx, rcx ; jmp 0x4142f8
0x0000000000458455 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000489695 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046fe72 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x0000000000470392 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x000000000047402c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000004b46bc : ror byte ptr [rbp - 0x16700000], 0xfc ; jmp qword ptr [rcx]
0x00000000004949b4 : ror byte ptr [rbx - 7], 1 ; push rax ; stc ; call qword ptr [rax]
0x0000000000400bab : ror byte ptr [rcx + 0x1d201c2], 1 ; ret 0xc889
0x0000000000484794 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c187 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000042670c : ror byte ptr [rcx + 2], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000473766 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045d306 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000469458 : ror byte ptr [rcx - 0x77], cl ; ret
0x0000000000452d2f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000046aa6e : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x00000000004711b4 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x471187
0x000000000045c0a2 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044f14c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000400c28 : ror byte ptr [rdi], 0x48 ; ret 0xf8c1
0x0000000000478061 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045fe4c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041245d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475b79 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000411be1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000404a86 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000467f6b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000453cb7 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x0000000000425d5e : ror byte ptr [rdi], 0x84 ; retf
0x000000000044f9d2 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040dbd6 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000045694c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x000000000044451a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042485f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044fdaf : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047db72 : ror byte ptr [rdi], 0x85 ; ret 2
0x0000000000467c3e : ror byte ptr [rdi], 0x85 ; retf
0x000000000044fea7 : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042e21d : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000046476c : ror byte ptr [rdi], 0x85 ; retf 6
0x000000000042505f : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000468b09 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044eeac : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047f649 : ror byte ptr [rdi], 0x94 ; ret
0x000000000048113a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046ed1d : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484d9f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044a08e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000412320 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046e12a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000424ebb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000044a505 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040fe22 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40fe0c ; ret
0x0000000000464a9e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004956b8 : ror byte ptr [rdx + rdi*8 - 1], 1 ; push rax ; cli ; call rax
0x0000000000494898 : ror byte ptr [rdx], 1 ; stc ; call qword ptr [rax + 0x20fff90b]
0x0000000000495424 : ror byte ptr [rip + 0xf50fffa], 1 ; cli ; call rax
0x000000000045064f : ror dword ptr [r8 - 0x77], 5 ; nop ; ret 0x26
0x00000000004371c7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048539e : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x000000000044a098 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000443974 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000443a99 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000443c5a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048ac84 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000470946 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000425607 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479e93 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000004671a0 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x000000000045b9e8 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000450650 : ror dword ptr [rax - 0x77], 5 ; nop ; ret 0x26
0x00000000004859b1 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041854d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x418547 ; ret
0x0000000000471efd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x471ef7 ; ret
0x0000000000466c99 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045ef54 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000483ffd : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x0000000000466b5b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000448047 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000047c17e : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042f918 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430024 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fdf6 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042fd76 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004300b4 : ror dword ptr [rdi], 0x85 ; je 0x4300c4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fbab : ror dword ptr [rdi], 0x85 ; jno 0x42fbc0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fc73 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f8f0 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041854c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x418548 ; ret
0x0000000000471efc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x471ef8 ; ret
0x00000000004019ae : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4019ce ; syscall
0x000000000041dafe : sahf ; mov esi, 0x39480029 ; ret
0x00000000004421de : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000405dfe : sahf ; ret
0x00000000004a7245 : sahf ; ret 0x38ae
0x00000000004838f1 : sahf ; ret 0x3948
0x000000000045d30c : sahf ; ret 0x894c
0x000000000048c874 : sahf ; ret 0xf45
0x00000000004741ee : sahf ; ret 0xfff8
0x000000000048f836 : sahf ; retf
0x0000000000494f08 : sal ah, 1 ; stc ; jmp qword ptr [rax]
0x000000000041a8ce : sal bh, 0xd8 ; ret
0x00000000004286d7 : sal bh, 1 ; ret 0x8000
0x0000000000428597 : sal bh, 1 ; ret 0xc000
0x0000000000428457 : sal bh, 1 ; ret 0xe000
0x0000000000428317 : sal bh, 1 ; ret 0xf000
0x00000000004281d7 : sal bh, 1 ; ret 0xf800
0x0000000000428097 : sal bh, 1 ; ret 0xfc00
0x0000000000427f57 : sal bh, 1 ; ret 0xfe00
0x0000000000427e17 : sal bh, 1 ; ret 0xff00
0x0000000000427cd7 : sal bh, 1 ; ret 0xff80
0x0000000000427b97 : sal bh, 1 ; ret 0xffc0
0x0000000000427a57 : sal bh, 1 ; ret 0xffe0
0x0000000000427917 : sal bh, 1 ; ret 0xfff0
0x00000000004277d7 : sal bh, 1 ; ret 0xfff8
0x0000000000427697 : sal bh, 1 ; ret 0xfffc
0x0000000000427557 : sal bh, 1 ; ret 0xfffe
0x000000000047473f : sal bl, 1 ; ret
0x000000000047f4ed : sal bl, cl ; ret
0x000000000040fd4d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x0000000000489801 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x0000000000494abc : sal byte ptr [rax - 0x518f0007], cl ; stc ; jmp qword ptr [rax]
0x000000000044cde7 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000044d0b7 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000444042 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000004826ee : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000475786 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004080fb : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f623 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000048f608 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044f271 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x00000000004168b4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044f281 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041946d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000449d80 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000418550 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000004289fb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040fe27 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042e3dd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480fa8 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042e3d5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044322d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000443225 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047449b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041a88c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x0000000000450366 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000048725c : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x48727a
0x00000000004439ec : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000451d12 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044f256 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000004b30bc : sal byte ptr [rdi], 0 ; rcl byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x0000000000443bbb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044fb8b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000444243 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000485161 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047faa9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048985a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x00000000004adea1 : sal dh, 1 ; call qword ptr [rsi]
0x00000000004ae019 : sal dh, cl ; call qword ptr [rsi]
0x0000000000494af0 : sal dword ptr [rbx - 0x4bbe0007], 0xf9 ; call rcx
0x0000000000494b0c : sal dword ptr [rdi - 0x47c10007], 0xf9 ; call rsi
0x000000000044a463 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480fad : sal edi, 0xd8 ; ret
0x00000000004adf79 : sal esi, 1 ; call qword ptr [rdx]
0x0000000000479f1c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000405350 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000044c9f3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fe33 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004846f0 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000404a82 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bd71 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x000000000042679a : sar byte ptr [rbx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000407a15 : sar byte ptr [rcx - 0x38], 0x4d ; mov edi, esp ; jmp 0x4079ee
0x000000000044a03e : sar byte ptr [rcx], 0xc8 ; jle 0x44a080 ; movsxd rax, ecx ; ret
0x00000000004508ed : sar byte ptr [rcx], cl ; ret
0x0000000000463507 : sar byte ptr [rcx], cl ; retf 0x147f
0x000000000045bd66 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a7bdf : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000494d25 : sar cl, 0xff ; ret 0xfff9
0x0000000000494bd1 : sar cl, cl ; call qword ptr [rax]
0x0000000000494cf5 : sar cl, cl ; jmp qword ptr [rax]
0x0000000000494c11 : sar cl, cl ; jmp rax
0x000000000043afa3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43afae ; ret
0x000000000044a979 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000047315c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048876e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000494c91 : sar ecx, 1 ; jmp qword ptr [rax]
0x0000000000494cb1 : sar ecx, 1 ; jmp rax
0x00000000004a7943 : sar ecx, 1 ; jnp 0x4a7904 ; ret
0x0000000000494c75 : sar ecx, cl ; inc dword ptr [rax - 0x2b] ; stc ; jmp qword ptr [rax]
0x0000000000495a5d : sar edx, 0xff ; nop ; ret 0xfffa
0x00000000004177e7 : sar edx, 2 ; call 0x413a35
0x0000000000473262 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042e637 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000044ae33 : sar esi, 1 ; jg 0x44ae63 ; vzeroupper ; ret
0x000000000044afcc : sar esi, 1 ; jg 0x44affc ; vzeroupper ; ret
0x000000000047315b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048876d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004177e6 : sar rdx, 2 ; call 0x413a36
0x00000000004177e5 : sar rdx, 2 ; call 0x413a37
0x0000000000473261 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042e636 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464755 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044db21 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000467bcd : sbb al, 0x29 ; ret 0xe683
0x0000000000468b07 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a8c42 : sbb al, 0x8c ; retf
0x00000000004b1d74 : sbb al, 0xc0 ; cli ; call qword ptr [rdx]
0x00000000004ae7f9 : sbb al, 0xf7 ; jmp rsi
0x000000000049540d : sbb al, 0xfa ; call qword ptr [rax - 0x2f0005fa]
0x000000000045e7fd : sbb al, 0xfa ; dec dword ptr [rax + 0x29] ; ret
0x0000000000495a9d : sbb al, 0xfb ; call qword ptr [rax]
0x0000000000495acd : sbb al, 0xfb ; call rax
0x0000000000495ac9 : sbb al, 0xfb ; inc eax ; sbb al, 0xfb ; call rax
0x0000000000495aa1 : sbb al, 0xfb ; jmp qword ptr [rax]
0x0000000000495ad1 : sbb al, 0xfb ; jmp rax
0x0000000000400d5e : sbb al, 1 ; ret 0xe283
0x0000000000410372 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004b1d48 : sbb al, al ; cli ; call qword ptr [rbx]
0x0000000000465236 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000409223 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000046acdb : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040d3b8 : sbb al, ch ; ret 0xffaf
0x000000000040b787 : sbb al, ch ; retf
0x0000000000494ed0 : sbb bh, 0xf9 ; inc eax ; jrcxz 0x494ed7 ; call qword ptr [rax]
0x00000000004afad9 : sbb bh, cl ; call qword ptr [rax]
0x00000000004a79d2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a66c5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000412953 : sbb bl, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; call 0x44f385
0x0000000000481d14 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485c74 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484d99 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000475811 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047e351 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000041b261 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045f0a4 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041d835 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000481d15 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000046a5e2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048de7a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048564f : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x00000000004826f7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000046c044 : sbb byte ptr [rax - 0x76befffd], cl ; retf
0x00000000004214bd : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047f855 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x0000000000474370 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047facc : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004185b1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041c20b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048597f : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004135ae : sbb byte ptr [rax - 0x77], cl ; retf
0x000000000041ba23 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485c75 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000044ca31 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004b048c : sbb byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [r8], al ; insb byte ptr [rdi], dx ; retf
0x000000000040c86a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000048a8f5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000421ad8 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004506cc : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000413977 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041a447 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000472f7a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000045b592 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000041b93e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000047348e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000049092f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x4909b2 ; ret 0x8b48
0x0000000000457818 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040ff20 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000042150b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484d9a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004062a3 : sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000048715b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041fd0d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000045af9d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000044092d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044257a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000441d9a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044218a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004419aa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044148d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440c6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000044044d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000441b49 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440fad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044078d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ff6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000044114d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000044203a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044185a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044296a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004402ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004403e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004410e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440c03 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000441f3b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044286b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000441423 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440723 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000440243 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440f43 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044208b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004418ab : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048e1a5 : sbb dh, bl ; ret
0x0000000000495441 : sbb dl, bh ; call rax
0x00000000004809b7 : sbb dl, dh ; jmp r11
0x000000000048874b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048e099 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044f1c4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000047900b : sbb dword ptr [rbp + rcx*4 + 0x68], ecx ; add eax, ebp ; retf
0x0000000000462591 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8f7d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004674b0 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000449a57 : sbb eax, -1 ; ret
0x000000000048d1f2 : sbb eax, 0x18c48348 ; ret
0x0000000000495ad9 : sbb eax, 0x1d10fffb ; sti ; jmp qword ptr [rax]
0x0000000000495af1 : sbb eax, 0x1dc0fffb ; sti ; jmp rax
0x0000000000495af9 : sbb eax, 0x1e00fffb ; sti ; jmp qword ptr [rax]
0x00000000004909f0 : sbb eax, 0x22b45b ; jne 0x4909e0 ; pop rbx ; ret
0x00000000004a79d3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000045fab4 : sbb eax, 0x39480001 ; ret
0x000000000047bd6d : sbb eax, 0xc085fffd ; js 0x47bd8a ; pop rbx ; ret
0x0000000000426656 : sbb eax, 0xf480001 ; ret 0xc3f3
0x00000000004265c7 : sbb eax, 0xf480002 ; ret 0xc3f3
0x00000000004061b8 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045ef32 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000409f9a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x00000000004093bc : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000048285a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042ea97 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048dd7f : sbb eax, eax ; ret
0x0000000000449a55 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004a8ae8 : sbb ebp, ebx ; retf
0x0000000000426aa9 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x0000000000453f4e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004061fd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000045bd00 : sbb edi, dword ptr [rdi - 0x76b7fffd] ; and r8b, bpl ; ret
0x0000000000426801 : sbb edi, dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a8879 : sbb edi, ebp ; retf
0x0000000000495a99 : sbb edi, ebx ; inc dword ptr [rax] ; sbb al, 0xfb ; call qword ptr [rax]
0x0000000000495a91 : sbb edi, ebx ; jmp rax
0x0000000000495449 : sbb edi, edx ; call rax
0x0000000000495405 : sbb edx, edi ; call rax
0x0000000000473086 : sbb edx, edi ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000426551 : sbb esi, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x000000000042db32 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004425ce : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004a8f29 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000494ab1 : scasb al, byte ptr [rdi] ; stc ; inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; stc ; call rdx
0x0000000000494ac1 : scasb al, byte ptr [rdi] ; stc ; jmp qword ptr [rax]
0x00000000004426cd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046cb20 : scasd eax, dword ptr [rdi] ; and al, 0 ; jmp rax
0x0000000000495a21 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x000000000041689e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x0000000000410729 : scasd eax, dword ptr [rdi] ; ret
0x000000000045c34e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000413696 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041b939 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000044b943 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000047e89d : scasd eax, dword ptr [rdi] ; retf 0x14c
0x0000000000494ac5 : scasd eax, dword ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000494ab5 : scasd eax, dword ptr [rdi] ; stc ; call rdx
0x00000000004a7c54 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a6ecf : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044f25c : setae al ; ret
0x000000000045c07a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041a8cc : setne al ; neg eax ; ret
0x00000000004508f0 : setne dl ; jmp 0x4508d8
0x0000000000494ed4 : shl bl, 0xf9 ; call qword ptr [rax]
0x000000000042e37b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042e33b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000495b70 : shl byte ptr [rbx], 1 ; sti ; push rax ; and edi, ebx ; call qword ptr [rax]
0x0000000000495b24 : shl byte ptr [rcx], 0xfb ; jmp rax
0x0000000000495b4c : shl byte ptr [rdx], 1 ; sti ; jmp rax
0x0000000000449c9f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042734b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000448043 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000442df5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000004302ab : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004302c2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004435b6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004435c7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004301a1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004508b3 : shl byte ptr [rsi], 0 ; test eax, eax ; je 0x4508c8 ; ret
0x0000000000494f1c : shl dh, 1 ; stc ; jmp qword ptr [rax]
0x00000000004a0090 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000466517 : shl dword ptr [rax - 0x54], 0x6b ; add byte ptr [rax - 0x39], cl ; ret 0xb308
0x00000000004a77dd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000041f73b : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000004a7ac8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000045beab : shl dword ptr [rip - 0xcf78c00], cl ; ret
0x0000000000449c82 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042734f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000004435b2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000449afb : shl dword ptr [rsi + 0xf], 0xda ; ret
0x0000000000430226 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004302dd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004302c6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004302af : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ed6b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000430241 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dccc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000430101 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000451581 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000045157d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482f2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482eb7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e86 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000487260 : shl edx, 5 ; add rdx, rax ; jmp 0x487276
0x0000000000482f2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482eb6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e85 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048725f : shl rdx, 5 ; add rdx, rax ; jmp 0x487277
0x00000000004a7084 : shr al, cl ; add al, 0x3d ; retf
0x0000000000495a1c : shr byte ptr [rbp - 0x508f0006], 1 ; cli ; call qword ptr [rax]
0x0000000000495998 : shr byte ptr [rbx - 6], 1 ; jmp rax
0x0000000000495994 : shr byte ptr [rcx - 6], 0xff ; shr byte ptr [rbx - 6], 1 ; jmp rax
0x00000000004289ff : shr byte ptr [rcx], 0xc8 ; ret
0x000000000045ad48 : shr byte ptr [rcx], cl ; ret
0x000000000042e63b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004a8e87 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000048ccd2 : shr cl, 1 ; ret 0xfffe
0x000000000046959c : shr cl, cl ; jrcxz 0x4695a8 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c7df : shr cl, cl ; ret
0x00000000004025cf : shr cl, cl ; retf
0x0000000000494f28 : shr dl, 0xf9 ; call qword ptr [rax]
0x000000000044b61a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047454b : shr eax, 2 ; ret
0x0000000000474a53 : shr eax, 2 ; vzeroupper ; ret
0x000000000044b665 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000420dce : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000048303c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482fc1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482f90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048303b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482fc0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482f8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047454a : shr rax, 2 ; ret
0x0000000000474a52 : shr rax, 2 ; vzeroupper ; ret
0x0000000000404dde : sldt word ptr [rax] ; call 0x4218e5
0x000000000049f269 : sldt word ptr [rax] ; ret
0x0000000000457008 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000473d86 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042dae7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049489a : stc ; call qword ptr [rax + 0x20fff90b]
0x0000000000494caa : stc ; call qword ptr [rax + 0x20fff9de]
0x0000000000494c0a : stc ; call qword ptr [rax + 0x20fff9df]
0x0000000000494ef6 : stc ; call qword ptr [rax - 0x1f000611]
0x0000000000494d7e : stc ; call qword ptr [rax - 0x1f000636]
0x0000000000494d2a : stc ; call qword ptr [rax - 0x1f00063d]
0x0000000000494c06 : stc ; call qword ptr [rax - 0x6f000623]
0x0000000000494d4a : stc ; call qword ptr [rax]
0x00000000004aff0a : stc ; call qword ptr [rbx]
0x00000000004b0922 : stc ; call qword ptr [rcx]
0x00000000004afe7e : stc ; call qword ptr [rdx]
0x0000000000494896 : stc ; call rax
0x0000000000494af6 : stc ; call rcx
0x0000000000494ab6 : stc ; call rdx
0x0000000000494b12 : stc ; call rsi
0x00000000004afe06 : stc ; call rsp
0x000000000046455e : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000494bce : stc ; dec dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax]
0x0000000000469d15 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa8
0x0000000000494d8a : stc ; inc dword ptr [rax + 0x58fff9ce] ; cli ; stc ; jmp qword ptr [rax]
0x0000000000494e1e : stc ; inc dword ptr [rax + 1] ; cli ; jmp qword ptr [rax]
0x0000000000494ef2 : stc ; inc dword ptr [rax - 0x12] ; stc ; call qword ptr [rax - 0x1f000611]
0x0000000000494c4a : stc ; inc dword ptr [rax - 0x21] ; stc ; call rax
0x0000000000494c46 : stc ; inc dword ptr [rax - 0x23] ; stc ; inc dword ptr [rax - 0x21] ; stc ; call rax
0x0000000000494cde : stc ; inc dword ptr [rax - 0x28] ; stc ; call qword ptr [rax]
0x0000000000494c76 : stc ; inc dword ptr [rax - 0x2b] ; stc ; jmp qword ptr [rax]
0x0000000000494f02 : stc ; inc dword ptr [rax - 0x2f00060d] ; hlt ; stc ; jmp qword ptr [rax]
0x0000000000494f16 : stc ; inc dword ptr [rax - 0x2f00061b] ; out 0xf9, al ; jmp qword ptr [rax]
0x0000000000494d7a : stc ; inc dword ptr [rax - 0x37] ; stc ; call qword ptr [rax - 0x1f000636]
0x0000000000494d26 : stc ; inc dword ptr [rax - 0x3e] ; stc ; call qword ptr [rax - 0x1f00063d]
0x0000000000494a4e : stc ; inc dword ptr [rax - 0x7d] ; stc ; push qword ptr [rax] ; test cl, bh ; jmp qword ptr [rax]
0x0000000000494ebe : stc ; inc dword ptr [rax] ; add dl, bh ; call rax
0x0000000000494c7e : stc ; inc dword ptr [rax] ; fyl2xp1 ; call rax
0x0000000000494a3a : stc ; inc dword ptr [rax] ; jl 0x494a41 ; push qword ptr [rax + 0x7d] ; stc ; jmp rax
0x0000000000494a5e : stc ; inc dword ptr [rax] ; xchg ecx, edi ; push rax ; xchg ecx, edi ; jmp rax
0x0000000000494af2 : stc ; inc dword ptr [rcx - 0x4c] ; stc ; call rcx
0x0000000000494ab2 : stc ; inc dword ptr [rdx] ; scasd eax, dword ptr [rdi] ; stc ; call rdx
0x0000000000494b3a : stc ; inc dword ptr [rsi - 0x4b] ; stc ; call rsi
0x0000000000494b46 : stc ; inc dword ptr [rsi] ; mov bh, 0xf9 ; jmp qword ptr [rsi + 0x27fff9b7]
0x0000000000494ed2 : stc ; inc eax ; jrcxz 0x494ed5 ; call qword ptr [rax]
0x0000000000494aee : stc ; inc ecx ; mov bl, 0xf9 ; inc dword ptr [rcx - 0x4c] ; stc ; call rcx
0x0000000000441682 : stc ; je 0x44164e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000494a12 : stc ; jmp qword ptr [rax + 0x10fff96d]
0x00000000004949d2 : stc ; jmp qword ptr [rax + 0x20fff955]
0x00000000004949da : stc ; jmp qword ptr [rax + 0x20fff958]
0x00000000004949e2 : stc ; jmp qword ptr [rax + 0x20fff95b]
0x00000000004949ea : stc ; jmp qword ptr [rax + 0x20fff95e]
0x00000000004949f2 : stc ; jmp qword ptr [rax + 0x20fff961]
0x00000000004949fa : stc ; jmp qword ptr [rax + 0x20fff964]
0x0000000000494a02 : stc ; jmp qword ptr [rax + 0x20fff967]
0x000000000049489e : stc ; jmp qword ptr [rax]
0x00000000004afc52 : stc ; jmp qword ptr [rbx]
0x0000000000494b06 : stc ; jmp qword ptr [rcx]
0x0000000000494b4e : stc ; jmp qword ptr [rdi]
0x00000000004b0c26 : stc ; jmp qword ptr [rdx]
0x0000000000494b1e : stc ; jmp qword ptr [rsi + 0x26fff9b1]
0x0000000000494b26 : stc ; jmp qword ptr [rsi + 0x26fff9b2]
0x0000000000494b2e : stc ; jmp qword ptr [rsi + 0x26fff9b3]
0x0000000000494b4a : stc ; jmp qword ptr [rsi + 0x27fff9b7]
0x0000000000494b22 : stc ; jmp qword ptr [rsi]
0x0000000000494a42 : stc ; jmp rax
0x00000000004afece : stc ; jmp rbx
0x00000000004afb62 : stc ; jmp rdx
0x00000000004a7944 : stc ; jnp 0x4a7903 ; ret
0x0000000000494d8e : stc ; lcall [rax - 6] ; stc ; jmp qword ptr [rax]
0x0000000000432b88 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042c207 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004949c6 : stc ; push qword ptr [rax + 0x51] ; stc ; call qword ptr [rax]
0x0000000000494a3e : stc ; push qword ptr [rax + 0x7d] ; stc ; jmp rax
0x0000000000494bca : stc ; push qword ptr [rax - 0x49] ; stc ; dec dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax]
0x0000000000494abe : stc ; push qword ptr [rax - 0x52] ; stc ; jmp qword ptr [rax]
0x0000000000494eb6 : stc ; push qword ptr [rax] ; cld ; stc ; call qword ptr [rax]
0x0000000000494c5e : stc ; push qword ptr [rax] ; fyl2xp1 ; call qword ptr [rax]
0x0000000000494a0e : stc ; push qword ptr [rax] ; insb byte ptr [rdi], dx ; stc ; jmp qword ptr [rax + 0x10fff96d]
0x0000000000494bc2 : stc ; push qword ptr [rax] ; mov dh, 0xf9 ; call rax
0x0000000000494e52 : stc ; push qword ptr [rax] ; sti ; stc ; call qword ptr [rax]
0x0000000000494a52 : stc ; push qword ptr [rax] ; test cl, bh ; jmp qword ptr [rax]
0x0000000000494b36 : stc ; push qword ptr [rsi + 0x46fff9b4] ; mov ch, 0xf9 ; call rsi
0x0000000000494e72 : stc ; push rax ; cli ; stc ; call rax
0x0000000000494d22 : stc ; push rax ; sar cl, 0xff ; ret 0xfff9
0x0000000000494996 : stc ; push rax ; stc ; call qword ptr [rax]
0x0000000000494db6 : stc ; push rax ; std ; stc ; call rax
0x0000000000494dd2 : stc ; push rax ; sti ; stc ; call rax
0x0000000000494a62 : stc ; push rax ; xchg ecx, edi ; jmp rax
0x0000000000491068 : stc ; push rbx ; ret
0x0000000000494e51 : stc ; stc ; push qword ptr [rax] ; sti ; stc ; call qword ptr [rax]
0x0000000000494e71 : stc ; stc ; push rax ; cli ; stc ; call rax
0x000000000043b4a4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042eb17 : stc ; xlatb ; ret 0xff2d
0x00000000004b5902 : std ; call qword ptr [rbx]
0x00000000004b5392 : std ; call qword ptr [rdx]
0x00000000004a5be6 : std ; call rax
0x00000000004b1c22 : std ; call rdx
0x000000000047644a : std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473da8 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044d76e : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a5bfe : std ; dec dword ptr [rax] ; push -3 ; jmp rax
0x00000000004261d2 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004a5ce2 : std ; inc dword ptr [rbp + 0x38fffd7a] ; jno 0x4a5cf1 ; jmp qword ptr [rax]
0x000000000047bd6e : std ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004826eb : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000481b9e : std ; jbe 0x481bac ; ret
0x00000000004a5cea : std ; jmp qword ptr [rax]
0x00000000004a5be2 : std ; jmp qword ptr [rbx - 0x2f000287]
0x00000000004a5c3a : std ; jmp qword ptr [rbx - 0x37000287]
0x00000000004b50da : std ; jmp qword ptr [rcx]
0x00000000004b1972 : std ; jmp qword ptr [rdi]
0x00000000004b1092 : std ; jmp qword ptr [rdx]
0x00000000004a5c02 : std ; jmp rax
0x00000000004b4a0a : std ; jmp rdx
0x00000000004b510e : std ; jmp rsp
0x00000000004323ab : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044e77e : std ; push rbx ; ret
0x000000000044a403 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a887a : std ; retf
0x0000000000494db9 : std ; stc ; call rax
0x00000000004b1091 : std ; std ; jmp qword ptr [rdx]
0x000000000042e3e1 : std ; xlatb ; ret
0x000000000042e3d9 : std ; xlatb ; ret 0xc085
0x000000000042e953 : std ; xlatb ; ret 0xe883
0x0000000000443891 : std ; xlatb ; retf 0xc985
0x0000000000443764 : std ; xlatb ; retf 0xfdc5
0x00000000004437c4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000423cb1 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000413773 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000425911 : sti ; add r8b, byte ptr [r8] ; cmovne rax, rdx ; ret
0x0000000000495ada : sti ; call qword ptr [rax]
0x0000000000496186 : sti ; call qword ptr [rcx - 0x1d000499]
0x0000000000496112 : sti ; call qword ptr [rdi]
0x0000000000495ace : sti ; call rax
0x0000000000496f46 : sti ; call rdx
0x000000000044c58f : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000496f3e : sti ; dec dword ptr [rdi - 0x64] ; sti ; lcall [rdx] ; pushfq ; sti ; call rdx
0x0000000000495b2e : sti ; inc dword ptr [rax] ; and bh, bl ; call qword ptr [rax]
0x0000000000495a9a : sti ; inc dword ptr [rax] ; sbb al, 0xfb ; call qword ptr [rax]
0x0000000000495ad6 : sti ; inc dword ptr [rax] ; sbb eax, 0x1d10fffb ; sti ; jmp qword ptr [rax]
0x0000000000495b22 : sti ; inc eax ; and ebx, edi ; jmp rax
0x0000000000495aca : sti ; inc eax ; sbb al, 0xfb ; call rax
0x0000000000495aee : sti ; jmp qword ptr [rax - 0x3f0004e3]
0x0000000000495aa2 : sti ; jmp qword ptr [rax]
0x0000000000490ec0 : sti ; jmp qword ptr [rsi + 0xf]
0x0000000000495a92 : sti ; jmp rax
0x000000000049618a : sti ; jmp rdx
0x0000000000495c5e : sti ; jmp rsi
0x0000000000478b89 : sti ; js 0x478b8a ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000496f42 : sti ; lcall [rdx] ; pushfq ; sti ; call rdx
0x0000000000432788 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000495b46 : sti ; push qword ptr [rax - 0x2f0004de] ; and bh, bl ; jmp rax
0x0000000000495b1e : sti ; push qword ptr [rax - 0x3f0004df] ; and ebx, edi ; jmp rax
0x0000000000495ac6 : sti ; push qword ptr [rax - 0x3f0004e4] ; sbb al, 0xfb ; call rax
0x0000000000495b52 : sti ; push rax ; and bh, bl ; call qword ptr [rax]
0x0000000000495b2a : sti ; push rax ; and ebx, edi ; inc dword ptr [rax] ; and bh, bl ; call qword ptr [rax]
0x0000000000495b72 : sti ; push rax ; and edi, ebx ; call qword ptr [rax]
0x0000000000495a96 : sti ; push rax ; sbb edi, ebx ; inc dword ptr [rax] ; sbb al, 0xfb ; call qword ptr [rax]
0x00000000004a7aca : sti ; ret
0x0000000000478b61 : sti ; retf 2
0x0000000000494e55 : sti ; stc ; call qword ptr [rax]
0x0000000000494dd5 : sti ; stc ; call rax
0x0000000000403757 : sti ; test rax, rax ; je 0x403765 ; call rax
0x0000000000495a15 : stosb byte ptr [rdi], al ; cli ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call rax
0x00000000004a7fa4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004ad555 : stosb byte ptr [rdi], al ; idiv bh ; retf
0x000000000044b12b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004699de : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000420dd3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a90ac : stosd dword ptr [rdi], eax ; ret
0x00000000004a8faa : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000420dd2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a9491 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000425a22 : sub ah, byte ptr [rbp + 0x29] ; add bh, dh ; ret 0
0x00000000004b02a8 : sub al, 0 ; add byte ptr [rax], al ; mov al, 0x49 ; add byte ptr [rax], al ; nop ; ret 0xfff9
0x0000000000481e96 : sub al, 0x48 ; add esp, 0x38 ; ret
0x00000000004ab970 : sub al, 0x53 ; cmc ; jmp qword ptr [rdx]
0x000000000044b362 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000044f9d0 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000042f8f3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041a850 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000414995 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000041a7e6 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a1685], 1 ; ret
0x000000000041b318 : sub al, byte ptr [rax] ; ret
0x000000000042ecb5 : sub al, ch ; std ; xlatb ; ret
0x0000000000495359 : sub bh, dl ; call rax
0x00000000004952d9 : sub bh, dl ; jmp rsp
0x00000000004952d5 : sub bh, dl ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004649bb : sub bl, cl ; in eax, 0xdf ; loopne 0x464950 ; ret
0x000000000047736c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041812c : sub byte ptr [rax + 0x39], cl ; retf
0x000000000047736b : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483a23 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x000000000045b79b : sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000424984 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c2dc : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000470da4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000406d43 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040fb59 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040fbc4 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040fc79 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040fbf6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040fbaf : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040fc0e : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040fcaf : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x00000000004843bd : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484405 ; leave ; ret
0x000000000048f132 : sub byte ptr [rbp + 1], cl ; retf
0x000000000044c124 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004881f3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004881f2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004ac618 : sub byte ptr [rbx - 0xa], cl ; jmp qword ptr [rax]
0x000000000047f845 : sub byte ptr [rcx - 0x73], cl ; adc byte ptr [r11 + rcx*4 + 0xd], r9b ; lahf ; retf
0x000000000040626b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x000000000040629f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000400b31 : sub byte ptr [rcx - 0x76b7ffb6], bh ; in eax, 0xe8 ; ret
0x00000000004218c9 : sub byte ptr [rcx], 0 ; ret
0x000000000044f4fc : sub byte ptr [rcx], al ; ret
0x0000000000452a3b : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3d ; retf 0x2664
0x00000000004ae7f8 : sub byte ptr [rdi + rsi*8], bl ; jmp rsi
0x00000000004237a6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004af724 : sub byte ptr [rsi], bh ; add byte ptr [rax], al ; clc ; jns 0x4af729 ; jmp qword ptr [rbx]
0x0000000000469406 : sub cl, bpl ; ret 0xffe8
0x0000000000410e8d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000469407 : sub cl, ch ; ret 0xffe8
0x000000000041b300 : sub dh, ah ; sub dword ptr [rax], eax ; ret
0x000000000045f4b4 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000495369 : sub dl, bh ; call rax
0x00000000004952e9 : sub dl, bh ; jmp rsp
0x00000000004801ca : sub dl, dh ; call r11
0x000000000047589e : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a7e4d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x000000000042186a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042661c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041a755 : sub dword ptr [rax], eax ; ret
0x00000000004164f3 : sub dword ptr [rbx + 0x2a], ecx ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004a8ae2 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x00000000004309d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4309ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430b3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430dc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ddd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430f2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431067 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43107d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4311cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431307 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43131d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431457 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43146d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004315a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4315bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43170d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43185d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4319ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004333a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4333bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004334f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43350d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433647 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43365d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433797 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4337ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004338e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4338fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433a37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x433a4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433b87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x433b9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433cd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x433ced ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433e27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x433e3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433f77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x433f8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004340c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4340dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43422d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43437d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004344b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4344cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000434607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43461d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430933 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043092f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004309dd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000484e93 : sub dword ptr [rdx + 0x23], esi ; add cl, ch ; retf
0x000000000042ceb7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x00000000004300d6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042cd71 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a939a : sub dword ptr [rsi], 0x76 ; retf
0x000000000040febd : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042ea47 : sub eax, -1 ; jne 0x42ea58 ; vzeroupper ; ret
0x0000000000424efa : sub eax, 0x10 ; ret
0x0000000000494f91 : sub eax, 0x3446fffa ; cli ; call rsi
0x000000000046a8b4 : sub eax, 0x83000000 ; ret
0x0000000000467c85 : sub eax, 0x83000000 ; ret 0x8b01
0x000000000045d7b4 : sub eax, 0x854dfffa ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a6ae6 : sub eax, 0xea4ca798 ; retf
0x000000000045bc34 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000449ed4 : sub eax, 1 ; ret
0x0000000000481be6 : sub eax, dword ptr [0] ; ret
0x0000000000405b7d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b0a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000403edf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045f456 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000041b10e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044bbfa : sub eax, dword ptr [rdx + rcx*4] ; je 0x44bbe6 ; ret
0x000000000041a423 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044a03d : sub eax, eax ; cmp eax, ecx ; jle 0x44a081 ; movsxd rax, ecx ; ret
0x0000000000481034 : sub eax, eax ; ret
0x000000000042ea93 : sub eax, ecx ; je 0x42eaa9 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000419af9 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x00000000004846b0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042873c : sub eax, ecx ; ret
0x0000000000443aa9 : sub eax, edi ; ret
0x000000000047465e : sub eax, edi ; shr rax, 2 ; ret
0x0000000000484793 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041a44b : sub eax, edx ; ret
0x0000000000474a50 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042ea5c : sub eax, edx ; vzeroupper ; ret
0x000000000044a09d : sub eax, esi ; ret
0x0000000000481033 : sub eax, r8d ; ret
0x00000000004a7d3e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000415e40 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000465aef : sub ebp, ecx ; retf
0x0000000000414a16 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a67d5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000450368 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000444044 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x000000000041a450 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000041a445 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042dee4 : sub edx, eax ; jbe 0x42df27 ; add rax, rdi ; ret
0x000000000042def4 : sub edx, eax ; jbe 0x42df29 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042df04 : sub edx, eax ; jbe 0x42df29 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042df14 : sub edx, eax ; jbe 0x42df29 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000495361 : sub edx, edi ; call rax
0x00000000004952e1 : sub edx, edi ; jmp rsp
0x00000000004153ef : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004177e4 : sub edx, esi ; sar rdx, 2 ; call 0x413a38
0x000000000044eae1 : sub edx, esp ; add byte ptr es:[rax + 0x39], cl ; ret
0x000000000048a8f3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412fb8 : sub esp, 0x80 ; call 0x44f298
0x00000000004925b1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004754f3 : sub esp, 8 ; syscall
0x0000000000419af8 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000414994 : sub r8b, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000424ef9 : sub rax, 0x10 ; ret
0x0000000000449ed3 : sub rax, 1 ; ret
0x0000000000481be5 : sub rax, qword ptr [0] ; ret
0x000000000041b10d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000481be4 : sub rax, qword ptr fs:[0] ; ret
0x00000000004853a2 : sub rax, r8 ; ret
0x0000000000443aa8 : sub rax, rdi ; ret
0x000000000047465d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000449fa3 : sub rax, rdx ; ret
0x0000000000443d1f : sub rax, rdx ; vzeroupper ; ret
0x000000000044a09c : sub rax, rsi ; ret
0x000000000042dee3 : sub rdx, rax ; jbe 0x42df28 ; add rax, rdi ; ret
0x00000000004177e3 : sub rdx, rsi ; sar rdx, 2 ; call 0x413a39
0x000000000048a8f2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412fb7 : sub rsp, 0x80 ; call 0x44f299
0x00000000004925b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004754f2 : sub rsp, 8 ; syscall
0x000000000047b6af : syscall
0x0000000000419364 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004755f5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048b083 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000400b09 : test al, 0x2b ; add byte ptr [rcx], al ; pop rbp ; ret
0x000000000044e13e : test al, 0x45 ; mov esp, esi ; call r15
0x0000000000495c18 : test al, 0x5a ; sti ; jmp rax
0x00000000004b14a4 : test al, 0x5b ; add byte ptr [rax], al ; or byte ptr [rdi - 6], cl ; call qword ptr [rdi]
0x00000000004a7097 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004a6a7e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000004aff58 : test al, 0xb4 ; stc ; call qword ptr [rbx]
0x000000000040fad1 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047e8b5 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x00000000004289fa : test al, al ; jne 0x4289e8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000044b9b0 : test al, al ; jne 0x44b8e9 ; jmp 0x44b98e
0x0000000000478063 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a99a4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000426c3c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a7e51 : test bh, dl ; retf 0xdf7f
0x000000000041ba28 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041245f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000402041 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046bf19 : test byte ptr [rax - 0x7c000019], ah ; ret
0x0000000000410daa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041bdea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004859aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000044821a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044765a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041a77a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000414cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004138aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041a73a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041967a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044805a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000452492 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046be1c : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000426acf : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x000000000048c18b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048dd22 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x000000000042c7c6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042cfa6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bad6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ceb6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x000000000042b7f6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000459884 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x459847
0x000000000044ebd4 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x0000000000471239 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004261d6 : test byte ptr [rdi], 0x84 ; ret
0x000000000044d71f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044d236 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000426fc4 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000426fdc : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000459c89 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x459c4c
0x0000000000421e6e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000047d8d4 : test byte ptr [rdx], al ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000426c24 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042396e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000423e6e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000046a9a4 : test byte ptr [rip - 0x7c000003], dl ; ret
0x00000000004603b4 : test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000443b4d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000413bc4 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x0000000000456681 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x000000000044398d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004b5901 : test ch, bh ; call qword ptr [rbx]
0x000000000042dae6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494a55 : test cl, bh ; jmp qword ptr [rax]
0x000000000042c206 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042d906 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000489f7a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000042bf26 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000429fb6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a2b6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b1b6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042d9f6 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042aeb6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x000000000042abb6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a8b6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044fb11 : test cl, ch ; retf 0xfffe
0x000000000042c936 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042d816 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449b5f : test cl, cl ; jne 0x449b54 ; ret
0x0000000000449c0f : test cl, cl ; jne 0x449c04 ; ret
0x0000000000449ecf : test cl, cl ; jne 0x449ec8 ; sub rax, 1 ; ret
0x0000000000454015 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004480a4 : test dl, 0x40 ; jne 0x448069 ; lea rax, [rdi + 7] ; ret
0x00000000004480d2 : test dl, 4 ; jne 0x448069 ; lea rax, [rdi + 3] ; ret
0x000000000040fe26 : test dl, dl ; jne 0x40fe08 ; ret
0x0000000000449d7f : test dl, dl ; jne 0x449d78 ; lea rax, [rcx - 1] ; ret
0x0000000000480fa7 : test dl, dl ; jne 0x480f83 ; movsx eax, cl ; neg eax ; ret
0x0000000000491c73 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000426c3d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000469e86 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004044f1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x0000000000450a21 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045fe29 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000046a596 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac60
0x00000000004044f0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000450a20 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042de68 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000044cf49 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042fbd7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430026 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042eca8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x0000000000421ca8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004757ab : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042fbad : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fabd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f9cd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f0a2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x0000000000413188 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000048e104 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041f03c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042f8f2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047b214 : test dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000443793 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000044cbb6 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x00000000004498e2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460cf1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x0000000000411ffd : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042fdf8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a7f2d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000004a8d80 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000435a76 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044f14b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000402354 : test eax, eax ; je 0x40235e ; call rax
0x0000000000403759 : test eax, eax ; je 0x403763 ; call rax
0x0000000000424e71 : test eax, eax ; je 0x424e88 ; lea rax, [rdx - 0x10] ; ret
0x000000000042dbb8 : test eax, eax ; je 0x42dbc4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044d958 : test eax, eax ; je 0x44d963 ; ret
0x00000000004508b6 : test eax, eax ; je 0x4508c5 ; ret
0x0000000000485160 : test eax, eax ; je 0x485178 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f5c8 : test eax, eax ; je 0x48f5d5 ; ret
0x000000000048f6d8 : test eax, eax ; je 0x48f6e5 ; ret
0x00000000004906f1 : test eax, eax ; je 0x490700 ; call rax
0x000000000041946c : test eax, eax ; jne 0x419465 ; ret
0x000000000041a404 : test eax, eax ; jne 0x41a3fd ; ret
0x000000000042de95 : test eax, eax ; jne 0x42def6 ; xor eax, eax ; ret
0x000000000042e311 : test eax, eax ; jne 0x42e339 ; xor eax, eax ; vzeroupper ; ret
0x000000000044cd16 : test eax, eax ; jne 0x44cd36 ; xor eax, eax ; syscall
0x000000000044cde6 : test eax, eax ; jne 0x44ce09 ; mov eax, 1 ; syscall
0x000000000044cf23 : test eax, eax ; jne 0x44cf91 ; mov eax, 0x48 ; syscall
0x000000000044d0b6 : test eax, eax ; jne 0x44d0d9 ; mov eax, 3 ; syscall
0x000000000044f280 : test eax, eax ; jne 0x44f27b ; pop rdx ; pop r10 ; ret
0x0000000000475785 : test eax, eax ; jne 0x4757ef ; mov eax, 0x101 ; syscall
0x000000000048f607 : test eax, eax ; jne 0x48f615 ; ret
0x000000000048f622 : test eax, eax ; jne 0x48f635 ; ret
0x000000000048f852 : test eax, eax ; jne 0x48f865 ; ret
0x0000000000407a14 : test eax, eax ; jns 0x4079e8 ; mov r15, r12 ; jmp 0x4079ef
0x000000000047bd70 : test eax, eax ; js 0x47bd87 ; pop rbx ; ret
0x000000000047e08d : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000046af85 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004718da : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000473e2a : test ebp, ebp ; je 0x473e79 ; mov rdi, rbp ; call 0x450919
0x000000000044dbf9 : test ebp, ebp ; jne 0x44dc18 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044e764 : test ebp, ebp ; jne 0x44e790 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044e797 : test ebp, ebp ; jne 0x44e7e9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044e7c3 : test ebp, ebp ; jne 0x44e849 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049077b : test ebp, ebp ; jne 0x490768 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490b01 : test ebp, ebp ; jne 0x490af0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041cfa8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042ddd0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000423cb0 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004237a8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000457e19 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004780b8 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000448092 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000474739 : test ecx, ecx ; jne 0x4746f8 ; mov rax, rdx ; ret
0x0000000000494a59 : test ecx, edi ; call qword ptr [rax]
0x000000000044dc1f : test edi, edi ; jne 0x44dc69 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044dc47 : test edi, edi ; jne 0x44dc89 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044e84f : test edi, edi ; jne 0x44e8ba ; mov rdi, qword ptr [r13] ; call r12
0x000000000044e87f : test edi, edi ; jne 0x44e8eb ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f4ea : test edi, edi ; jne 0x47f4c5 ; ret
0x000000000048485d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x484851 ; mov rax, rsi ; ret
0x0000000000443942 : test edx, edx ; je 0x443950 ; bsf eax, edx ; ret
0x0000000000443942 : test edx, edx ; je 0x443951 ; bsf eax, edx ; ret
0x00000000004439eb : test edx, edx ; je 0x443a07 ; bsf rax, rdx ; ret
0x00000000004439eb : test edx, edx ; je 0x443a08 ; bsf rax, rdx ; ret
0x0000000000443bba : test edx, edx ; je 0x443be7 ; bsf rax, rdx ; ret
0x0000000000443bba : test edx, edx ; je 0x443be8 ; bsf rax, rdx ; ret
0x000000000044fb8a : test edx, edx ; je 0x44fba1 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004168b3 : test edx, edx ; jne 0x4168c5 ; ret
0x000000000041854f : test edx, edx ; jne 0x418545 ; ret
0x0000000000471eff : test edx, edx ; jne 0x471ef5 ; ret
0x000000000047449a : test edx, edx ; jne 0x474495 ; ret
0x0000000000448085 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000402258 : test esi, esi ; je 0x402262 ; call rsi
0x0000000000443ab1 : test esi, esi ; jne 0x443ac0 ; xor rax, rax ; ret
0x00000000004744a1 : test esi, esi ; jne 0x4744b0 ; xor rax, rax ; ret
0x000000000045fbb4 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000044809f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042dbb7 : test r8d, r8d ; je 0x42dbc5 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000474738 : test r9d, r9d ; jne 0x4746f9 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000402353 : test rax, rax ; je 0x40235f ; call rax
0x0000000000403758 : test rax, rax ; je 0x403764 ; call rax
0x0000000000424e70 : test rax, rax ; je 0x424e89 ; lea rax, [rdx - 0x10] ; ret
0x000000000044d957 : test rax, rax ; je 0x44d964 ; ret
0x000000000048515f : test rax, rax ; je 0x485179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004906f0 : test rax, rax ; je 0x490701 ; call rax
0x000000000041946b : test rax, rax ; jne 0x419466 ; ret
0x000000000041a403 : test rax, rax ; jne 0x41a3fe ; ret
0x000000000044dbf8 : test rbp, rbp ; jne 0x44dc19 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044e763 : test rbp, rbp ; jne 0x44e791 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000049077a : test rbp, rbp ; jne 0x490769 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490b00 : test rbp, rbp ; jne 0x490af1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f4e9 : test rdi, rdi ; jne 0x47f4c6 ; ret
0x00000000004439ea : test rdx, rdx ; je 0x443a08 ; bsf rax, rdx ; ret
0x00000000004439ea : test rdx, rdx ; je 0x443a09 ; bsf rax, rdx ; ret
0x0000000000443bb9 : test rdx, rdx ; je 0x443be8 ; bsf rax, rdx ; ret
0x0000000000443bb9 : test rdx, rdx ; je 0x443be9 ; bsf rax, rdx ; ret
0x00000000004168b2 : test rdx, rdx ; jne 0x4168c6 ; ret
0x000000000041854e : test rdx, rdx ; jne 0x418546 ; ret
0x0000000000471efe : test rdx, rdx ; jne 0x471ef6 ; ret
0x0000000000402257 : test rsi, rsi ; je 0x402263 ; call rsi
0x0000000000443ab0 : test rsi, rsi ; jne 0x443ac1 ; xor rax, rax ; ret
0x00000000004744a0 : test rsi, rsi ; jne 0x4744b1 ; xor rax, rax ; ret
0x0000000000417603 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043b03a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000044a7ec : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044a1b5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044b371 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000044a1b9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000044a978 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044aa1f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000043b026 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043b00d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000044a755 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000044b2db : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000044a8c3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000044a895 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000044b262 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000044a1ab : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000044a1af : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000044ae32 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000044aef8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000044b3ed : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x000000000044a1c4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000044a1c8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043b343 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043b1dc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043afde : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000043afa2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043b4a5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000044a368 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000044a2cb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000044a16a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000441681 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000042e1b8 : vzeroupper ; ret
0x000000000042e390 : vzeroupper ; xor eax, eax ; ret
0x00000000004620a1 : wait ; push rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042d203 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044092f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d2f3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d113 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000461462 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044257c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000441d9c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044218c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004419ac : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d8ec : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b5f2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042db5b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000044148f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440c6f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000044044f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000004524f8 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042d6b3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000441b4b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440faf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ce43 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000044078f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ff6f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000044114f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042d893 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d023 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000480f8a : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048ca8c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042da73 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049549c : xchg byte ptr [rcx - 6], bl ; call qword ptr [rsi]
0x00000000004a7c55 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044203c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044185c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044296c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004576d3 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042d983 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004402af : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000461479 : xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042d2c5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004125fe : xchg byte ptr [rdx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000042d3b5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042d1d5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494fa4 : xchg byte ptr [rdx], dh ; cli ; call qword ptr [rsi]
0x000000000041cda5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x00000000004403e5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004410e5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440c05 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000441f3d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004587c5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044286d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042cf33 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000439caf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000441425 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440725 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000440245 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440f45 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044208d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004418ad : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042d0e5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042cf05 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042cff5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ce15 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000470479 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046f7cf : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000405013 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b786 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a7c58 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004525e4 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a77df : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000046336c : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004a6a4c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048b13a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000044f27e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44f27d ; pop rdx ; pop r10 ; ret
0x0000000000470664 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046acda : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000463ee4 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x00000000004124e6 : xchg dword ptr [rdx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000478dd0 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046d98c : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004a6beb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000464787 : xchg eax, ebp ; inc dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004a6f29 : xchg eax, ebp ; jge 0x4a6f0c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000045ba9b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000045320f : xchg eax, ebp ; ret
0x000000000048ad20 : xchg eax, ebp ; ret 0x145
0x0000000000477e0a : xchg eax, ebp ; ret 0x2041
0x0000000000477eca : xchg eax, ebp ; ret 0x2044
0x000000000044d32c : xchg eax, ebp ; ret 0x3948
0x000000000041fdfb : xchg eax, ebp ; ret 0x8348
0x0000000000479a90 : xchg eax, ebp ; ret 0xc283
0x0000000000422fbd : xchg eax, ebp ; ret 0xd020
0x0000000000410205 : xchg eax, ebp ; ret 0xd021
0x000000000046556a : xchg eax, ebp ; ret 0xd120
0x0000000000412322 : xchg eax, ebp ; ret 0xdaf7
0x00000000004508f1 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c89a : xchg eax, ebp ; ret 0xf45
0x00000000004a77e2 : xchg eax, ebp ; retf 0x33e6
0x000000000041a8cd : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000496989 : xchg eax, ebp ; sti ; call qword ptr [rax]
0x00000000004a8c3c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004536d6 : xchg eax, ebx ; add al, ch ; ret 0xfcea
0x00000000004132e2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046cd47 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042ed40 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004a95cc : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000044751c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004304e2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a8ae3 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a8abd
0x000000000045c528 : xchg eax, ebx ; ret 0x3948
0x00000000004140dc : xchg eax, ebx ; ret 0x3949
0x0000000000422710 : xchg eax, ebx ; ret 0x3d83
0x00000000004727a5 : xchg eax, ebx ; ret 0x840
0x000000000045d00d : xchg eax, ebx ; ret 0x854d
0x000000000041f0a9 : xchg eax, ebx ; ret 0xffff
0x0000000000496985 : xchg eax, ebx ; sti ; jmp rax
0x0000000000441531 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000048f93b : xchg eax, ecx ; retf 0x22
0x0000000000469d13 : xchg eax, ecx ; stc ; dec dword ptr [rax - 0x39] ; ret 0xffa8
0x0000000000496184 : xchg eax, ecx ; sti ; call qword ptr [rcx - 0x1d000499]
0x0000000000496188 : xchg eax, ecx ; sti ; jmp rdx
0x000000000043fc5f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000412422 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048c28c : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000416924 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000040f5a1 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004a6f95 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6f63 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000420f3b : xchg eax, edi ; ret 0x394c
0x0000000000421421 : xchg eax, edi ; ret 0xfae9
0x0000000000421a09 : xchg eax, edi ; ret 0xfbe9
0x00000000004a78fd : xchg eax, edi ; retf 0xe152
0x000000000044eeab : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a8c3b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a7098 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047b07f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004a895d : xchg eax, edx ; jae 0x4a893a ; push rsi ; pop rdx ; je 0x4a892f ; ret 0xacfc
0x0000000000495524 : xchg eax, edx ; pop rax ; cli ; jmp qword ptr [rdx]
0x00000000004a6f9c : xchg eax, edx ; pop rbx ; retf
0x00000000004268ba : xchg eax, edx ; push rsi ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000482d16 : xchg eax, edx ; ret 0x2948
0x00000000004829ee : xchg eax, edx ; ret 0x294c
0x0000000000407f38 : xchg eax, edx ; ret 0x8548
0x00000000004831f5 : xchg eax, edx ; ret 0x8949
0x000000000044eeae : xchg eax, edx ; ret 0xd029
0x00000000004a6a4f : xchg eax, edx ; ret 0xf869
0x000000000044a08d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042dbbc : xchg eax, edx ; sub eax, edx ; ret
0x000000000049502c : xchg eax, edx ; xor edx, edi ; jmp qword ptr [rdx]
0x000000000042f040 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000437273 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004594e1 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000044b684 : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000494fc8 : xchg eax, esi ; cli ; jmp qword ptr [rsi]
0x0000000000432dbe : xchg eax, esi ; je 0x432def ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004a8d48 : xchg eax, esi ; jnp 0x4a8d97 ; retf 0x99e0
0x000000000042f0fd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f05b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004954c0 : xchg eax, esi ; push rbp ; cli ; jmp qword ptr [rsi]
0x000000000044c2e1 : xchg eax, esi ; ret 0xc085
0x00000000004a92ec : xchg eax, esi ; ret 0xcd11
0x000000000044c33f : xchg eax, esi ; ret 0xd284
0x000000000042f0ac : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b0490 : xchg eax, esp ; add byte ptr [r8], al ; insb byte ptr [rdi], dx ; retf
0x000000000046db67 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004a94ff : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9490 ; ret 0x48f
0x00000000004679c2 : xchg eax, esp ; ret
0x00000000004542ab : xchg eax, esp ; ret 0x1f0f
0x000000000044d3fb : xchg eax, esp ; ret 0x2044
0x000000000048113c : xchg eax, esp ; ret 0x3d
0x000000000041ea6e : xchg eax, esp ; ret 0x3de9
0x000000000046ed1f : xchg eax, esp ; ret 0x7f3c
0x0000000000484da1 : xchg eax, esp ; ret 0x950f
0x0000000000404f64 : xchg eax, esp ; ret 0xb60f
0x000000000044a090 : xchg eax, esp ; ret 0xc085
0x000000000044d721 : xchg eax, esp ; ret 0xc221
0x0000000000476925 : xchg eax, esp ; ret 0xc283
0x000000000044d238 : xchg eax, esp ; ret 0xca21
0x00000000004013f3 : xchg eax, esp ; ret 0xd284
0x0000000000452d36 : xchg eax, esp ; ret 0xd5e9
0x000000000048c83b : xchg eax, esp ; ret 0xf45
0x00000000004008bd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000424eba : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004a6f23 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000494a65 : xchg ecx, edi ; jmp rax
0x0000000000494a61 : xchg ecx, edi ; push rax ; xchg ecx, edi ; jmp rax
0x000000000046de12 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041ce74 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004acfed : xchg esi, esi ; call qword ptr [rax]
0x00000000004a9116 : xchg esp, eax ; jb 0x4a9174 ; call 0x4c14bad9
0x00000000004a20b9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004303a9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000475a2f : xlatb ; ja 0x475a5c ; ret
0x000000000044a3f3 : xlatb ; jb 0x44a3fe ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040f88d : xlatb ; jmp rdi
0x00000000004a7ac3 : xlatb ; jo 0x4a7b3f ; mov ebp, 0xfb67d10d ; ret
0x00000000004848e2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4848c8 ; mov rax, rsi ; ret
0x000000000044c501 : xlatb ; mov eax, esi ; syscall
0x000000000044c510 : xlatb ; mov eax, r8d ; syscall
0x000000000041b175 : xlatb ; out 0x29, eax ; add bl, dh ; ret
0x00000000004a6ed0 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042dce4 : xlatb ; ret
0x00000000004a8f66 : xlatb ; ret 0x4e27
0x0000000000443617 : xlatb ; ret 0x94c
0x000000000042dccf : xlatb ; ret 0xc085
0x00000000004287f0 : xlatb ; ret 0xc148
0x000000000042e954 : xlatb ; ret 0xe883
0x0000000000443964 : xlatb ; ret 0xf66
0x000000000042eb18 : xlatb ; ret 0xff2d
0x0000000000442ddd : xlatb ; retf
0x00000000004a6f24 : xlatb ; retf 0xa1eb
0x00000000004436f4 : xlatb ; retf 0xc148
0x0000000000443892 : xlatb ; retf 0xc985
0x00000000004a7e52 : xlatb ; retf 0xdf7f
0x0000000000427470 : xlatb ; retf 0xead3
0x0000000000443765 : xlatb ; retf 0xfdc5
0x000000000042e0b1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004437c5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042de93 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042e3d2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000443222 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000448046 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004286d6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000428596 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000428456 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000428316 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004281d6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000428096 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000427f56 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000427e16 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000427cd6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000427b96 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000427a56 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000427916 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004277d6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000427696 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000427556 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000448042 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004435b5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004435c6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000494c7d : xlatb ; stc ; inc dword ptr [rax] ; fyl2xp1 ; call rax
0x0000000000494c5d : xlatb ; stc ; push qword ptr [rax] ; fyl2xp1 ; call qword ptr [rax]
0x0000000000494eb8 : xor ah, bh ; stc ; call qword ptr [rax]
0x00000000004a6a4a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000453a55 : xor al, 0x24 ; mov rdi, rbx ; call 0x40049f
0x00000000004a8ae6 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x0000000000403052 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004702bb : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048ddd2 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a7c2a : xor al, 0xd8 ; ret
0x0000000000402255 : xor al, 0xf0 ; test rsi, rsi ; je 0x402265 ; call rsi
0x00000000004560ae : xor al, 0xf6 ; ret
0x0000000000495155 : xor al, 0xfa ; call qword ptr [rax + 0x20fffa33]
0x0000000000494f95 : xor al, 0xfa ; call rsi
0x00000000004b503d : xor al, 0xfd ; jmp qword ptr [rdx]
0x00000000004695df : xor al, ch ; retf
0x00000000004afab0 : xor bh, bh ; clc ; call qword ptr [rax]
0x0000000000494e3c : xor bh, bh ; stc ; call qword ptr [rax]
0x0000000000495029 : xor bh, dl ; call qword ptr [rdx + 0x22fffa31]
0x0000000000494fa5 : xor bh, dl ; call qword ptr [rsi]
0x0000000000495165 : xor bh, dl ; call rax
0x0000000000495161 : xor bh, dl ; inc dword ptr [rax + 0x32] ; cli ; call rax
0x00000000004b124d : xor bh, dl ; jmp qword ptr [rdx]
0x00000000004950e5 : xor bh, dl ; jmp rsp
0x0000000000494f04 : xor bl, 0xf9 ; call rax
0x000000000042df1c : xor bl, al ; nop ; xor eax, eax ; ret
0x00000000004259da : xor bl, bh ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000494e54 : xor bl, bh ; stc ; call qword ptr [rax]
0x000000000042dded : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000413542 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000044b1d4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004b492c : xor byte ptr [rax + 0x1700000], dl ; std ; jmp qword ptr [rdx]
0x000000000045cc88 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000442c51 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004430b2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000413543 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004761e4 : xor byte ptr [rax + 1], cl ; retf
0x00000000004b412c : xor byte ptr [rax - 0x35e00000], cl ; cld ; jmp qword ptr [rcx]
0x000000000044e13a : xor byte ptr [rax - 0x75], cl ; jge 0x44e0f0 ; mov r12d, r14d ; call r15
0x000000000044420f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047421f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048ac88 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000472ee2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004506bf : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000405248 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044b1d5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000495174 : xor byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000041389b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000410cb9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000410bf3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047446c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000410cdf : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000473ee1 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x450919
0x000000000044b6d3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000472e1a : xor byte ptr [rax], al ; je 0x472e25 ; ret
0x00000000004371bd : xor byte ptr [rax], ch ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000048e1ee : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000044a645 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000467bc9 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000416c36 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000452a8a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046db0e : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x0000000000494f5c : xor byte ptr [rbx], 0xfa ; call qword ptr [rax]
0x0000000000495390 : xor byte ptr [rbx], ah ; cli ; call rax
0x000000000048aaa5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004786e3 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000494a54 : xor byte ptr [rcx + rdi*8 - 0x67adf01], al ; call qword ptr [rax]
0x000000000040627b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004a6f2e : xor byte ptr [rcx], ah ; retf
0x000000000041389c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414b97 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000412423 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000471fc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004b0b47 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042edef : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044357c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042ddee : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004a8c3e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a6f1f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4a6ecf
0x00000000004961c0 : xor ch, byte ptr [rax - 5] ; jmp rdx
0x00000000004b4210 : xor ch, cl ; cld ; jmp qword ptr [rsi]
0x0000000000494e70 : xor cl, bh ; stc ; push rax ; cli ; stc ; call rax
0x0000000000494c60 : xor cl, bl ; stc ; call qword ptr [rax]
0x00000000004142cd : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047dde3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045c7f7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d27e : xor cl, byte ptr [rax] ; jne 0x48d2a3 ; mov rax, qword ptr [rax] ; ret
0x0000000000407f60 : xor cl, ch ; ret
0x00000000004034b9 : xor dh, dh ; ret 0x4002
0x0000000000495164 : xor dil, dl ; call rax
0x0000000000494f7d : xor dl, bh ; call qword ptr [rax + 0x20fffa2f]
0x0000000000495175 : xor dl, bh ; call qword ptr [rax]
0x0000000000495039 : xor dl, bh ; call rdx
0x0000000000495035 : xor dl, bh ; inc dword ptr [rdx + 0x30] ; cli ; call rdx
0x0000000000494fb9 : xor dl, bh ; jmp rsi
0x0000000000494dd0 : xor dl, bh ; stc ; push rax ; sti ; stc ; call rax
0x000000000048019e : xor dl, dh ; jmp r11
0x00000000004802b0 : xor dl, dh ; ret
0x0000000000495038 : xor dl, dil ; call rdx
0x000000000046719d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a7ed6 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044f68f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004258c2 : xor dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048d2ed : xor dword ptr [rax], ecx ; jne 0x48d2fc ; mov qword ptr [rax], rdx ; ret
0x000000000041df89 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x000000000046cb1e : xor eax, 0x24af1d ; jmp rax
0x000000000044ac03 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044dc4a : xor eax, 0x7d8b48 ; call r12
0x0000000000466aaa : xor eax, 0x89ffffe6 ; ret
0x0000000000426552 : xor eax, 0xf480002 ; ret 0x66c3
0x0000000000410cb6 : xor eax, dword ptr [0x30] ; call rax
0x0000000000417850 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418634 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045dd39 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000475a2b : xor eax, eax ; cmp rdi, rdx ; ja 0x475a60 ; ret
0x000000000044f257 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004167e0 : xor eax, eax ; jmp 0x4167aa
0x000000000045e41c : xor eax, eax ; jmp 0x45e3e4
0x000000000045e41b : xor eax, eax ; jmp 0x45e3e5
0x0000000000475e18 : xor eax, eax ; leave ; ret
0x0000000000427232 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004080ff : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041688b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410fc5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042595c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000414f02 : xor eax, eax ; pop rbx ; ret
0x0000000000410f0d : xor eax, eax ; ret
0x00000000004289fe : xor eax, eax ; sub eax, ecx ; ret
0x000000000044cd1a : xor eax, eax ; syscall
0x00000000004168b0 : xor eax, eax ; test rdx, rdx ; jne 0x4168c8 ; ret
0x000000000042e2dc : xor eax, eax ; vzeroupper ; ret
0x0000000000401e18 : xor ebp, ecx ; ret 0xfffd
0x000000000047a2f0 : xor ebx, ebx ; jmp 0x47a2b9
0x0000000000485a1d : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a3d
0x000000000045bdf6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000465a3c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x000000000045adc9 : xor ecx, ecx ; call r15
0x0000000000474029 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000044f66c : xor edi, dword ptr [rax] ; ret 0x2f75
0x000000000048cbad : xor edi, eax ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401428 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044da76 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041cc51 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044d88c : xor edi, edi ; syscall
0x0000000000494f5d : xor edi, edx ; call qword ptr [rax]
0x0000000000495159 : xor edi, edx ; jmp qword ptr [rax]
0x000000000049501d : xor edi, edx ; jmp rdx
0x0000000000410bf0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000049502d : xor edx, edi ; jmp qword ptr [rdx]
0x0000000000494f71 : xor edx, edi ; jmp rax
0x0000000000451d13 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000004508ec : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4508dc
0x00000000004711b3 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x471188
0x0000000000419203 : xor edx, edx ; jmp rax
0x000000000047402b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000042150c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000478b86 : xor esi, esi ; call 0x400491
0x000000000046283c : xor esi, esi ; jmp rax
0x0000000000403d05 : xor esi, esi ; mov edi, 1 ; call 9
0x00000000004258c1 : xor qword ptr [r8], rax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000045adc8 : xor r9d, r9d ; call r15
0x0000000000410cb5 : xor rax, qword ptr [0x30] ; call rax
0x0000000000410cb4 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000443ab5 : xor rax, rax ; ret
0x0000000000410bef : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000410bee : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 10885
